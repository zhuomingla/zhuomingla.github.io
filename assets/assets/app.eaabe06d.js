function Yt(e,n){const t=Object.create(null),s=e.split(",");for(let o=0;o<s.length;o++)t[s[o]]=!0;return n?o=>!!t[o.toLowerCase()]:o=>!!t[o]}const nl="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",tl=Yt(nl);function Ys(e){return!!e||e===""}function Cn(e){if(q(e)){const n={};for(let t=0;t<e.length;t++){const s=e[t],o=re(s)?ll(s):Cn(s);if(o)for(const l in o)n[l]=o[l]}return n}else{if(re(e))return e;if(ae(e))return e}}const sl=/;(?![^(]*\))/g,ol=/:(.+)/;function ll(e){const n={};return e.split(sl).forEach(t=>{if(t){const s=t.split(ol);s.length>1&&(n[s[0].trim()]=s[1].trim())}}),n}function an(e){let n="";if(re(e))n=e;else if(q(e))for(let t=0;t<e.length;t++){const s=an(e[t]);s&&(n+=s+" ")}else if(ae(e))for(const t in e)e[t]&&(n+=t+" ");return n.trim()}const ue=e=>re(e)?e:e==null?"":q(e)||ae(e)&&(e.toString===eo||!B(e.toString))?JSON.stringify(e,Xs,2):String(e),Xs=(e,n)=>n&&n.__v_isRef?Xs(e,n.value):gn(n)?{[`Map(${n.size})`]:[...n.entries()].reduce((t,[s,o])=>(t[`${s} =>`]=o,t),{})}:Js(n)?{[`Set(${n.size})`]:[...n.values()]}:ae(n)&&!q(n)&&!no(n)?String(n):n,V={},_n=[],Te=()=>{},al=()=>!1,rl=/^on[^a-z]/,Gn=e=>rl.test(e),Xt=e=>e.startsWith("onUpdate:"),fe=Object.assign,Jt=(e,n)=>{const t=e.indexOf(n);t>-1&&e.splice(t,1)},il=Object.prototype.hasOwnProperty,j=(e,n)=>il.call(e,n),q=Array.isArray,gn=e=>_t(e)==="[object Map]",Js=e=>_t(e)==="[object Set]",B=e=>typeof e=="function",re=e=>typeof e=="string",Zt=e=>typeof e=="symbol",ae=e=>e!==null&&typeof e=="object",Zs=e=>ae(e)&&B(e.then)&&B(e.catch),eo=Object.prototype.toString,_t=e=>eo.call(e),cl=e=>_t(e).slice(8,-1),no=e=>_t(e)==="[object Object]",es=e=>re(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,zn=Yt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),gt=e=>{const n=Object.create(null);return t=>n[t]||(n[t]=e(t))},pl=/-(\w)/g,Ie=gt(e=>e.replace(pl,(n,t)=>t?t.toUpperCase():"")),dl=/\B([A-Z])/g,vn=gt(e=>e.replace(dl,"-$1").toLowerCase()),mt=gt(e=>e.charAt(0).toUpperCase()+e.slice(1)),Tt=gt(e=>e?`on${mt(e)}`:""),On=(e,n)=>!Object.is(e,n),Pt=(e,n)=>{for(let t=0;t<e.length;t++)e[t](n)},rt=(e,n,t)=>{Object.defineProperty(e,n,{configurable:!0,enumerable:!1,value:t})},ul=e=>{const n=parseFloat(e);return isNaN(n)?e:n};let Fs;const fl=()=>Fs||(Fs=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let Me;class hl{constructor(n=!1){this.active=!0,this.effects=[],this.cleanups=[],!n&&Me&&(this.parent=Me,this.index=(Me.scopes||(Me.scopes=[])).push(this)-1)}run(n){if(this.active){const t=Me;try{return Me=this,n()}finally{Me=t}}}on(){Me=this}off(){Me=this.parent}stop(n){if(this.active){let t,s;for(t=0,s=this.effects.length;t<s;t++)this.effects[t].stop();for(t=0,s=this.cleanups.length;t<s;t++)this.cleanups[t]();if(this.scopes)for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].stop(!0);if(this.parent&&!n){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.active=!1}}}function _l(e,n=Me){n&&n.active&&n.effects.push(e)}const ns=e=>{const n=new Set(e);return n.w=0,n.n=0,n},to=e=>(e.w&Xe)>0,so=e=>(e.n&Xe)>0,gl=({deps:e})=>{if(e.length)for(let n=0;n<e.length;n++)e[n].w|=Xe},ml=e=>{const{deps:n}=e;if(n.length){let t=0;for(let s=0;s<n.length;s++){const o=n[s];to(o)&&!so(o)?o.delete(e):n[t++]=o,o.w&=~Xe,o.n&=~Xe}n.length=t}},Bt=new WeakMap;let En=0,Xe=1;const Nt=30;let we;const sn=Symbol(""),Lt=Symbol("");class ts{constructor(n,t=null,s){this.fn=n,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,_l(this,s)}run(){if(!this.active)return this.fn();let n=we,t=Qe;for(;n;){if(n===this)return;n=n.parent}try{return this.parent=we,we=this,Qe=!0,Xe=1<<++En,En<=Nt?gl(this):Ds(this),this.fn()}finally{En<=Nt&&ml(this),Xe=1<<--En,we=this.parent,Qe=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){we===this?this.deferStop=!0:this.active&&(Ds(this),this.onStop&&this.onStop(),this.active=!1)}}function Ds(e){const{deps:n}=e;if(n.length){for(let t=0;t<n.length;t++)n[t].delete(e);n.length=0}}let Qe=!0;const oo=[];function xn(){oo.push(Qe),Qe=!1}function wn(){const e=oo.pop();Qe=e===void 0?!0:e}function Fe(e,n,t){if(Qe&&we){let s=Bt.get(e);s||Bt.set(e,s=new Map);let o=s.get(t);o||s.set(t,o=ns()),lo(o)}}function lo(e,n){let t=!1;En<=Nt?so(e)||(e.n|=Xe,t=!to(e)):t=!e.has(we),t&&(e.add(we),we.deps.push(e))}function Ue(e,n,t,s,o,l){const a=Bt.get(e);if(!a)return;let r=[];if(n==="clear")r=[...a.values()];else if(t==="length"&&q(e))a.forEach((c,d)=>{(d==="length"||d>=s)&&r.push(c)});else switch(t!==void 0&&r.push(a.get(t)),n){case"add":q(e)?es(t)&&r.push(a.get("length")):(r.push(a.get(sn)),gn(e)&&r.push(a.get(Lt)));break;case"delete":q(e)||(r.push(a.get(sn)),gn(e)&&r.push(a.get(Lt)));break;case"set":gn(e)&&r.push(a.get(sn));break}if(r.length===1)r[0]&&It(r[0]);else{const c=[];for(const d of r)d&&c.push(...d);It(ns(c))}}function It(e,n){const t=q(e)?e:[...e];for(const s of t)s.computed&&bs(s);for(const s of t)s.computed||bs(s)}function bs(e,n){(e!==we||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const yl=Yt("__proto__,__v_isRef,__isVue"),ao=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Zt)),Fl=ss(),Dl=ss(!1,!0),bl=ss(!0),As=Al();function Al(){const e={};return["includes","indexOf","lastIndexOf"].forEach(n=>{e[n]=function(...t){const s=U(this);for(let l=0,a=this.length;l<a;l++)Fe(s,"get",l+"");const o=s[n](...t);return o===-1||o===!1?s[n](...t.map(U)):o}}),["push","pop","shift","unshift","splice"].forEach(n=>{e[n]=function(...t){xn();const s=U(this)[n].apply(this,t);return wn(),s}}),e}function ss(e=!1,n=!1){return function(s,o,l){if(o==="__v_isReactive")return!e;if(o==="__v_isReadonly")return e;if(o==="__v_isShallow")return n;if(o==="__v_raw"&&l===(e?n?Rl:uo:n?po:co).get(s))return s;const a=q(s);if(!e&&a&&j(As,o))return Reflect.get(As,o,l);const r=Reflect.get(s,o,l);return(Zt(o)?ao.has(o):yl(o))||(e||Fe(s,"get",o),n)?r:pe(r)?a&&es(o)?r:r.value:ae(r)?e?fo(r):Vn(r):r}}const Cl=ro(),vl=ro(!0);function ro(e=!1){return function(t,s,o,l){let a=t[s];if($n(a)&&pe(a)&&!pe(o))return!1;if(!e&&!$n(o)&&(Rt(o)||(o=U(o),a=U(a)),!q(t)&&pe(a)&&!pe(o)))return a.value=o,!0;const r=q(t)&&es(s)?Number(s)<t.length:j(t,s),c=Reflect.set(t,s,o,l);return t===U(l)&&(r?On(o,a)&&Ue(t,"set",s,o):Ue(t,"add",s,o)),c}}function xl(e,n){const t=j(e,n);e[n];const s=Reflect.deleteProperty(e,n);return s&&t&&Ue(e,"delete",n,void 0),s}function wl(e,n){const t=Reflect.has(e,n);return(!Zt(n)||!ao.has(n))&&Fe(e,"has",n),t}function kl(e){return Fe(e,"iterate",q(e)?"length":sn),Reflect.ownKeys(e)}const io={get:Fl,set:Cl,deleteProperty:xl,has:wl,ownKeys:kl},Tl={get:bl,set(e,n){return!0},deleteProperty(e,n){return!0}},Pl=fe({},io,{get:Dl,set:vl}),os=e=>e,yt=e=>Reflect.getPrototypeOf(e);function Xn(e,n,t=!1,s=!1){e=e.__v_raw;const o=U(e),l=U(n);t||(n!==l&&Fe(o,"get",n),Fe(o,"get",l));const{has:a}=yt(o),r=s?os:t?rs:Un;if(a.call(o,n))return r(e.get(n));if(a.call(o,l))return r(e.get(l));e!==o&&e.get(n)}function Jn(e,n=!1){const t=this.__v_raw,s=U(t),o=U(e);return n||(e!==o&&Fe(s,"has",e),Fe(s,"has",o)),e===o?t.has(e):t.has(e)||t.has(o)}function Zn(e,n=!1){return e=e.__v_raw,!n&&Fe(U(e),"iterate",sn),Reflect.get(e,"size",e)}function Cs(e){e=U(e);const n=U(this);return yt(n).has.call(n,e)||(n.add(e),Ue(n,"add",e,e)),this}function vs(e,n){n=U(n);const t=U(this),{has:s,get:o}=yt(t);let l=s.call(t,e);l||(e=U(e),l=s.call(t,e));const a=o.call(t,e);return t.set(e,n),l?On(n,a)&&Ue(t,"set",e,n):Ue(t,"add",e,n),this}function xs(e){const n=U(this),{has:t,get:s}=yt(n);let o=t.call(n,e);o||(e=U(e),o=t.call(n,e)),s&&s.call(n,e);const l=n.delete(e);return o&&Ue(n,"delete",e,void 0),l}function ws(){const e=U(this),n=e.size!==0,t=e.clear();return n&&Ue(e,"clear",void 0,void 0),t}function et(e,n){return function(s,o){const l=this,a=l.__v_raw,r=U(a),c=n?os:e?rs:Un;return!e&&Fe(r,"iterate",sn),a.forEach((d,_)=>s.call(o,c(d),c(_),l))}}function nt(e,n,t){return function(...s){const o=this.__v_raw,l=U(o),a=gn(l),r=e==="entries"||e===Symbol.iterator&&a,c=e==="keys"&&a,d=o[e](...s),_=t?os:n?rs:Un;return!n&&Fe(l,"iterate",c?Lt:sn),{next(){const{value:m,done:C}=d.next();return C?{value:m,done:C}:{value:r?[_(m[0]),_(m[1])]:_(m),done:C}},[Symbol.iterator](){return this}}}}function He(e){return function(...n){return e==="delete"?!1:this}}function El(){const e={get(l){return Xn(this,l)},get size(){return Zn(this)},has:Jn,add:Cs,set:vs,delete:xs,clear:ws,forEach:et(!1,!1)},n={get(l){return Xn(this,l,!1,!0)},get size(){return Zn(this)},has:Jn,add:Cs,set:vs,delete:xs,clear:ws,forEach:et(!1,!0)},t={get(l){return Xn(this,l,!0)},get size(){return Zn(this,!0)},has(l){return Jn.call(this,l,!0)},add:He("add"),set:He("set"),delete:He("delete"),clear:He("clear"),forEach:et(!0,!1)},s={get(l){return Xn(this,l,!0,!0)},get size(){return Zn(this,!0)},has(l){return Jn.call(this,l,!0)},add:He("add"),set:He("set"),delete:He("delete"),clear:He("clear"),forEach:et(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{e[l]=nt(l,!1,!1),t[l]=nt(l,!0,!1),n[l]=nt(l,!1,!0),s[l]=nt(l,!0,!0)}),[e,t,n,s]}const[Ml,zl,ql,Bl]=El();function ls(e,n){const t=n?e?Bl:ql:e?zl:Ml;return(s,o,l)=>o==="__v_isReactive"?!e:o==="__v_isReadonly"?e:o==="__v_raw"?s:Reflect.get(j(t,o)&&o in s?t:s,o,l)}const Nl={get:ls(!1,!1)},Ll={get:ls(!1,!0)},Il={get:ls(!0,!1)},co=new WeakMap,po=new WeakMap,uo=new WeakMap,Rl=new WeakMap;function jl(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ol(e){return e.__v_skip||!Object.isExtensible(e)?0:jl(cl(e))}function Vn(e){return $n(e)?e:as(e,!1,io,Nl,co)}function $l(e){return as(e,!1,Pl,Ll,po)}function fo(e){return as(e,!0,Tl,Il,uo)}function as(e,n,t,s,o){if(!ae(e)||e.__v_raw&&!(n&&e.__v_isReactive))return e;const l=o.get(e);if(l)return l;const a=Ol(e);if(a===0)return e;const r=new Proxy(e,a===2?s:t);return o.set(e,r),r}function mn(e){return $n(e)?mn(e.__v_raw):!!(e&&e.__v_isReactive)}function $n(e){return!!(e&&e.__v_isReadonly)}function Rt(e){return!!(e&&e.__v_isShallow)}function ho(e){return mn(e)||$n(e)}function U(e){const n=e&&e.__v_raw;return n?U(n):e}function qn(e){return rt(e,"__v_skip",!0),e}const Un=e=>ae(e)?Vn(e):e,rs=e=>ae(e)?fo(e):e;function _o(e){Qe&&we&&(e=U(e),lo(e.dep||(e.dep=ns())))}function go(e,n){e=U(e),e.dep&&It(e.dep)}function pe(e){return!!(e&&e.__v_isRef===!0)}function qe(e){return mo(e,!1)}function Ul(e){return mo(e,!0)}function mo(e,n){return pe(e)?e:new Sl(e,n)}class Sl{constructor(n,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?n:U(n),this._value=t?n:Un(n)}get value(){return _o(this),this._value}set value(n){n=this.__v_isShallow?n:U(n),On(n,this._rawValue)&&(this._rawValue=n,this._value=this.__v_isShallow?n:Un(n),go(this))}}function ye(e){return pe(e)?e.value:e}const Kl={get:(e,n,t)=>ye(Reflect.get(e,n,t)),set:(e,n,t,s)=>{const o=e[n];return pe(o)&&!pe(t)?(o.value=t,!0):Reflect.set(e,n,t,s)}};function yo(e){return mn(e)?e:new Proxy(e,Kl)}class Hl{constructor(n,t,s,o){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new ts(n,()=>{this._dirty||(this._dirty=!0,go(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=s}get value(){const n=U(this);return _o(n),(n._dirty||!n._cacheable)&&(n._dirty=!1,n._value=n.effect.run()),n._value}set value(n){this._setter(n)}}function Wl(e,n,t=!1){let s,o;const l=B(e);return l?(s=e,o=Te):(s=e.get,o=e.set),new Hl(s,o,l||!o,t)}function Ye(e,n,t,s){let o;try{o=s?e(...s):e()}catch(l){Ft(l,n,t)}return o}function Pe(e,n,t,s){if(B(e)){const l=Ye(e,n,t,s);return l&&Zs(l)&&l.catch(a=>{Ft(a,n,t)}),l}const o=[];for(let l=0;l<e.length;l++)o.push(Pe(e[l],n,t,s));return o}function Ft(e,n,t,s=!0){const o=n?n.vnode:null;if(n){let l=n.parent;const a=n.proxy,r=t;for(;l;){const d=l.ec;if(d){for(let _=0;_<d.length;_++)if(d[_](e,a,r)===!1)return}l=l.parent}const c=n.appContext.config.errorHandler;if(c){Ye(c,null,10,[e,a,r]);return}}Gl(e,t,o,s)}function Gl(e,n,t,s=!0){console.error(e)}let it=!1,jt=!1;const me=[];let $e=0;const Bn=[];let Mn=null,un=0;const Nn=[];let Ge=null,fn=0;const Fo=Promise.resolve();let is=null,Ot=null;function cs(e){const n=is||Fo;return e?n.then(this?e.bind(this):e):n}function Vl(e){let n=$e+1,t=me.length;for(;n<t;){const s=n+t>>>1;Sn(me[s])<e?n=s+1:t=s}return n}function Do(e){(!me.length||!me.includes(e,it&&e.allowRecurse?$e+1:$e))&&e!==Ot&&(e.id==null?me.push(e):me.splice(Vl(e.id),0,e),bo())}function bo(){!it&&!jt&&(jt=!0,is=Fo.then(Co))}function Ql(e){const n=me.indexOf(e);n>$e&&me.splice(n,1)}function Ao(e,n,t,s){q(e)?t.push(...e):(!n||!n.includes(e,e.allowRecurse?s+1:s))&&t.push(e),bo()}function Yl(e){Ao(e,Mn,Bn,un)}function Xl(e){Ao(e,Ge,Nn,fn)}function Dt(e,n=null){if(Bn.length){for(Ot=n,Mn=[...new Set(Bn)],Bn.length=0,un=0;un<Mn.length;un++)Mn[un]();Mn=null,un=0,Ot=null,Dt(e,n)}}function ct(e){if(Dt(),Nn.length){const n=[...new Set(Nn)];if(Nn.length=0,Ge){Ge.push(...n);return}for(Ge=n,Ge.sort((t,s)=>Sn(t)-Sn(s)),fn=0;fn<Ge.length;fn++)Ge[fn]();Ge=null,fn=0}}const Sn=e=>e.id==null?1/0:e.id;function Co(e){jt=!1,it=!0,Dt(e),me.sort((t,s)=>Sn(t)-Sn(s));const n=Te;try{for($e=0;$e<me.length;$e++){const t=me[$e];t&&t.active!==!1&&Ye(t,null,14)}}finally{$e=0,me.length=0,ct(),it=!1,is=null,(me.length||Bn.length||Nn.length)&&Co(e)}}function Jl(e,n,...t){if(e.isUnmounted)return;const s=e.vnode.props||V;let o=t;const l=n.startsWith("update:"),a=l&&n.slice(7);if(a&&a in s){const _=`${a==="modelValue"?"model":a}Modifiers`,{number:m,trim:C}=s[_]||V;C&&(o=t.map(T=>T.trim())),m&&(o=t.map(ul))}let r,c=s[r=Tt(n)]||s[r=Tt(Ie(n))];!c&&l&&(c=s[r=Tt(vn(n))]),c&&Pe(c,e,6,o);const d=s[r+"Once"];if(d){if(!e.emitted)e.emitted={};else if(e.emitted[r])return;e.emitted[r]=!0,Pe(d,e,6,o)}}function vo(e,n,t=!1){const s=n.emitsCache,o=s.get(e);if(o!==void 0)return o;const l=e.emits;let a={},r=!1;if(!B(e)){const c=d=>{const _=vo(d,n,!0);_&&(r=!0,fe(a,_))};!t&&n.mixins.length&&n.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}return!l&&!r?(s.set(e,null),null):(q(l)?l.forEach(c=>a[c]=null):fe(a,l),s.set(e,a),a)}function bt(e,n){return!e||!Gn(n)?!1:(n=n.slice(2).replace(/Once$/,""),j(e,n[0].toLowerCase()+n.slice(1))||j(e,vn(n))||j(e,n))}let Ne=null,xo=null;function pt(e){const n=Ne;return Ne=e,xo=e&&e.type.__scopeId||null,n}function Zl(e,n=Ne,t){if(!n||e._n)return e;const s=(...o)=>{s._d&&Ls(-1);const l=pt(n),a=e(...o);return pt(l),s._d&&Ls(1),a};return s._n=!0,s._c=!0,s._d=!0,s}function Et(e){const{type:n,vnode:t,proxy:s,withProxy:o,props:l,propsOptions:[a],slots:r,attrs:c,emit:d,render:_,renderCache:m,data:C,setupState:T,ctx:N,inheritAttrs:S}=e;let L,f;const A=pt(e);try{if(t.shapeFlag&4){const R=o||s;L=xe(_.call(R,R,m,l,T,C,N)),f=c}else{const R=n;L=xe(R.length>1?R(l,{attrs:c,slots:r,emit:d}):R(l,null)),f=n.props?c:ea(c)}}catch(R){jn.length=0,Ft(R,e,1),L=Z(Je)}let E=L;if(f&&S!==!1){const R=Object.keys(f),{shapeFlag:K}=E;R.length&&K&7&&(a&&R.some(Xt)&&(f=na(f,a)),E=Dn(E,f))}return t.dirs&&(E=Dn(E),E.dirs=E.dirs?E.dirs.concat(t.dirs):t.dirs),t.transition&&(E.transition=t.transition),L=E,pt(A),L}const ea=e=>{let n;for(const t in e)(t==="class"||t==="style"||Gn(t))&&((n||(n={}))[t]=e[t]);return n},na=(e,n)=>{const t={};for(const s in e)(!Xt(s)||!(s.slice(9)in n))&&(t[s]=e[s]);return t};function ta(e,n,t){const{props:s,children:o,component:l}=e,{props:a,children:r,patchFlag:c}=n,d=l.emitsOptions;if(n.dirs||n.transition)return!0;if(t&&c>=0){if(c&1024)return!0;if(c&16)return s?ks(s,a,d):!!a;if(c&8){const _=n.dynamicProps;for(let m=0;m<_.length;m++){const C=_[m];if(a[C]!==s[C]&&!bt(d,C))return!0}}}else return(o||r)&&(!r||!r.$stable)?!0:s===a?!1:s?a?ks(s,a,d):!0:!!a;return!1}function ks(e,n,t){const s=Object.keys(n);if(s.length!==Object.keys(e).length)return!0;for(let o=0;o<s.length;o++){const l=s[o];if(n[l]!==e[l]&&!bt(t,l))return!0}return!1}function sa({vnode:e,parent:n},t){for(;n&&n.subTree===e;)(e=n.vnode).el=t,n=n.parent}const oa=e=>e.__isSuspense;function wo(e,n){n&&n.pendingBranch?q(e)?n.effects.push(...e):n.effects.push(e):Xl(e)}function la(e,n){if(ce){let t=ce.provides;const s=ce.parent&&ce.parent.provides;s===t&&(t=ce.provides=Object.create(s)),t[e]=n}}function Ln(e,n,t=!1){const s=ce||Ne;if(s){const o=s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides;if(o&&e in o)return o[e];if(arguments.length>1)return t&&B(n)?n.call(s.proxy):n}}function aa(e,n){return ps(e,null,n)}const Ts={};function yn(e,n,t){return ps(e,n,t)}function ps(e,n,{immediate:t,deep:s,flush:o,onTrack:l,onTrigger:a}=V){const r=ce;let c,d=!1,_=!1;if(pe(e)?(c=()=>e.value,d=Rt(e)):mn(e)?(c=()=>e,s=!0):q(e)?(_=!0,d=e.some(f=>mn(f)||Rt(f)),c=()=>e.map(f=>{if(pe(f))return f.value;if(mn(f))return hn(f);if(B(f))return Ye(f,r,2)})):B(e)?n?c=()=>Ye(e,r,2):c=()=>{if(!(r&&r.isUnmounted))return m&&m(),Pe(e,r,3,[C])}:c=Te,n&&s){const f=c;c=()=>hn(f())}let m,C=f=>{m=L.onStop=()=>{Ye(f,r,4)}};if(Wn)return C=Te,n?t&&Pe(n,r,3,[c(),_?[]:void 0,C]):c(),Te;let T=_?[]:Ts;const N=()=>{if(!!L.active)if(n){const f=L.run();(s||d||(_?f.some((A,E)=>On(A,T[E])):On(f,T)))&&(m&&m(),Pe(n,r,3,[f,T===Ts?void 0:T,C]),T=f)}else L.run()};N.allowRecurse=!!n;let S;o==="sync"?S=N:o==="post"?S=()=>he(N,r&&r.suspense):S=()=>Yl(N);const L=new ts(c,S);return n?t?N():T=L.run():o==="post"?he(L.run.bind(L),r&&r.suspense):L.run(),()=>{L.stop(),r&&r.scope&&Jt(r.scope.effects,L)}}function ra(e,n,t){const s=this.proxy,o=re(e)?e.includes(".")?ko(s,e):()=>s[e]:e.bind(s,s);let l;B(n)?l=n:(l=n.handler,t=n);const a=ce;bn(this);const r=ps(o,l.bind(s),t);return a?bn(a):ln(),r}function ko(e,n){const t=n.split(".");return()=>{let s=e;for(let o=0;o<t.length&&s;o++)s=s[t[o]];return s}}function hn(e,n){if(!ae(e)||e.__v_skip||(n=n||new Set,n.has(e)))return e;if(n.add(e),pe(e))hn(e.value,n);else if(q(e))for(let t=0;t<e.length;t++)hn(e[t],n);else if(Js(e)||gn(e))e.forEach(t=>{hn(t,n)});else if(no(e))for(const t in e)hn(e[t],n);return e}function De(e){return B(e)?{setup:e,name:e.name}:e}const In=e=>!!e.type.__asyncLoader,To=e=>e.type.__isKeepAlive;function ia(e,n){Po(e,"a",n)}function ca(e,n){Po(e,"da",n)}function Po(e,n,t=ce){const s=e.__wdc||(e.__wdc=()=>{let o=t;for(;o;){if(o.isDeactivated)return;o=o.parent}return e()});if(At(n,s,t),t){let o=t.parent;for(;o&&o.parent;)To(o.parent.vnode)&&pa(s,n,t,o),o=o.parent}}function pa(e,n,t,s){const o=At(n,e,s,!0);Qn(()=>{Jt(s[n],o)},t)}function At(e,n,t=ce,s=!1){if(t){const o=t[e]||(t[e]=[]),l=n.__weh||(n.__weh=(...a)=>{if(t.isUnmounted)return;xn(),bn(t);const r=Pe(n,t,e,a);return ln(),wn(),r});return s?o.unshift(l):o.push(l),l}}const Se=e=>(n,t=ce)=>(!Wn||e==="sp")&&At(e,n,t),da=Se("bm"),Ze=Se("m"),ua=Se("bu"),fa=Se("u"),ha=Se("bum"),Qn=Se("um"),_a=Se("sp"),ga=Se("rtg"),ma=Se("rtc");function ya(e,n=ce){At("ec",e,n)}function Be(e,n,t,s){const o=e.dirs,l=n&&n.dirs;for(let a=0;a<o.length;a++){const r=o[a];l&&(r.oldValue=l[a].value);let c=r.dir[s];c&&(xn(),Pe(c,t,8,[e.el,r,e,n]),wn())}}const Eo="components";function Fa(e,n){return ba(Eo,e,!0,n)||e}const Da=Symbol();function ba(e,n,t=!0,s=!1){const o=Ne||ce;if(o){const l=o.type;if(e===Eo){const r=Xa(l,!1);if(r&&(r===n||r===Ie(n)||r===mt(Ie(n))))return l}const a=Ps(o[e]||l[e],n)||Ps(o.appContext[e],n);return!a&&s?l:a}}function Ps(e,n){return e&&(e[n]||e[Ie(n)]||e[mt(Ie(n))])}function on(e,n,t,s){let o;const l=t&&t[s];if(q(e)||re(e)){o=new Array(e.length);for(let a=0,r=e.length;a<r;a++)o[a]=n(e[a],a,void 0,l&&l[a])}else if(typeof e=="number"){o=new Array(e);for(let a=0;a<e;a++)o[a]=n(a+1,a,void 0,l&&l[a])}else if(ae(e))if(e[Symbol.iterator])o=Array.from(e,(a,r)=>n(a,r,void 0,l&&l[r]));else{const a=Object.keys(e);o=new Array(a.length);for(let r=0,c=a.length;r<c;r++){const d=a[r];o[r]=n(e[d],d,r,l&&l[r])}}else o=[];return t&&(t[s]=o),o}const $t=e=>e?Uo(e)?fs(e)||e.proxy:$t(e.parent):null,dt=fe(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>$t(e.parent),$root:e=>$t(e.root),$emit:e=>e.emit,$options:e=>zo(e),$forceUpdate:e=>e.f||(e.f=()=>Do(e.update)),$nextTick:e=>e.n||(e.n=cs.bind(e.proxy)),$watch:e=>ra.bind(e)}),Aa={get({_:e},n){const{ctx:t,setupState:s,data:o,props:l,accessCache:a,type:r,appContext:c}=e;let d;if(n[0]!=="$"){const T=a[n];if(T!==void 0)switch(T){case 1:return s[n];case 2:return o[n];case 4:return t[n];case 3:return l[n]}else{if(s!==V&&j(s,n))return a[n]=1,s[n];if(o!==V&&j(o,n))return a[n]=2,o[n];if((d=e.propsOptions[0])&&j(d,n))return a[n]=3,l[n];if(t!==V&&j(t,n))return a[n]=4,t[n];Ut&&(a[n]=0)}}const _=dt[n];let m,C;if(_)return n==="$attrs"&&Fe(e,"get",n),_(e);if((m=r.__cssModules)&&(m=m[n]))return m;if(t!==V&&j(t,n))return a[n]=4,t[n];if(C=c.config.globalProperties,j(C,n))return C[n]},set({_:e},n,t){const{data:s,setupState:o,ctx:l}=e;return o!==V&&j(o,n)?(o[n]=t,!0):s!==V&&j(s,n)?(s[n]=t,!0):j(e.props,n)||n[0]==="$"&&n.slice(1)in e?!1:(l[n]=t,!0)},has({_:{data:e,setupState:n,accessCache:t,ctx:s,appContext:o,propsOptions:l}},a){let r;return!!t[a]||e!==V&&j(e,a)||n!==V&&j(n,a)||(r=l[0])&&j(r,a)||j(s,a)||j(dt,a)||j(o.config.globalProperties,a)},defineProperty(e,n,t){return t.get!=null?e._.accessCache[n]=0:j(t,"value")&&this.set(e,n,t.value,null),Reflect.defineProperty(e,n,t)}};let Ut=!0;function Ca(e){const n=zo(e),t=e.proxy,s=e.ctx;Ut=!1,n.beforeCreate&&Es(n.beforeCreate,e,"bc");const{data:o,computed:l,methods:a,watch:r,provide:c,inject:d,created:_,beforeMount:m,mounted:C,beforeUpdate:T,updated:N,activated:S,deactivated:L,beforeDestroy:f,beforeUnmount:A,destroyed:E,unmounted:R,render:K,renderTracked:ne,renderTriggered:X,errorCaptured:I,serverPrefetch:ee,expose:oe,inheritAttrs:te,components:Ae,directives:ie,filters:M}=n;if(d&&va(d,s,null,e.appContext.config.unwrapInjectedRef),a)for(const se in a){const Q=a[se];B(Q)&&(s[se]=Q.bind(t))}if(o){const se=o.call(t,t);ae(se)&&(e.data=Vn(se))}if(Ut=!0,l)for(const se in l){const Q=l[se],Re=B(Q)?Q.bind(t,t):B(Q.get)?Q.get.bind(t,t):Te,xt=!B(Q)&&B(Q.set)?Q.set.bind(t):Te,kn=ze({get:Re,set:xt});Object.defineProperty(s,se,{enumerable:!0,configurable:!0,get:()=>kn.value,set:cn=>kn.value=cn})}if(r)for(const se in r)Mo(r[se],s,t,se);if(c){const se=B(c)?c.call(t):c;Reflect.ownKeys(se).forEach(Q=>{la(Q,se[Q])})}_&&Es(_,e,"c");function J(se,Q){q(Q)?Q.forEach(Re=>se(Re.bind(t))):Q&&se(Q.bind(t))}if(J(da,m),J(Ze,C),J(ua,T),J(fa,N),J(ia,S),J(ca,L),J(ya,I),J(ma,ne),J(ga,X),J(ha,A),J(Qn,R),J(_a,ee),q(oe))if(oe.length){const se=e.exposed||(e.exposed={});oe.forEach(Q=>{Object.defineProperty(se,Q,{get:()=>t[Q],set:Re=>t[Q]=Re})})}else e.exposed||(e.exposed={});K&&e.render===Te&&(e.render=K),te!=null&&(e.inheritAttrs=te),Ae&&(e.components=Ae),ie&&(e.directives=ie)}function va(e,n,t=Te,s=!1){q(e)&&(e=St(e));for(const o in e){const l=e[o];let a;ae(l)?"default"in l?a=Ln(l.from||o,l.default,!0):a=Ln(l.from||o):a=Ln(l),pe(a)&&s?Object.defineProperty(n,o,{enumerable:!0,configurable:!0,get:()=>a.value,set:r=>a.value=r}):n[o]=a}}function Es(e,n,t){Pe(q(e)?e.map(s=>s.bind(n.proxy)):e.bind(n.proxy),n,t)}function Mo(e,n,t,s){const o=s.includes(".")?ko(t,s):()=>t[s];if(re(e)){const l=n[e];B(l)&&yn(o,l)}else if(B(e))yn(o,e.bind(t));else if(ae(e))if(q(e))e.forEach(l=>Mo(l,n,t,s));else{const l=B(e.handler)?e.handler.bind(t):n[e.handler];B(l)&&yn(o,l,e)}}function zo(e){const n=e.type,{mixins:t,extends:s}=n,{mixins:o,optionsCache:l,config:{optionMergeStrategies:a}}=e.appContext,r=l.get(n);let c;return r?c=r:!o.length&&!t&&!s?c=n:(c={},o.length&&o.forEach(d=>ut(c,d,a,!0)),ut(c,n,a)),l.set(n,c),c}function ut(e,n,t,s=!1){const{mixins:o,extends:l}=n;l&&ut(e,l,t,!0),o&&o.forEach(a=>ut(e,a,t,!0));for(const a in n)if(!(s&&a==="expose")){const r=xa[a]||t&&t[a];e[a]=r?r(e[a],n[a]):n[a]}return e}const xa={data:Ms,props:nn,emits:nn,methods:nn,computed:nn,beforeCreate:de,created:de,beforeMount:de,mounted:de,beforeUpdate:de,updated:de,beforeDestroy:de,beforeUnmount:de,destroyed:de,unmounted:de,activated:de,deactivated:de,errorCaptured:de,serverPrefetch:de,components:nn,directives:nn,watch:ka,provide:Ms,inject:wa};function Ms(e,n){return n?e?function(){return fe(B(e)?e.call(this,this):e,B(n)?n.call(this,this):n)}:n:e}function wa(e,n){return nn(St(e),St(n))}function St(e){if(q(e)){const n={};for(let t=0;t<e.length;t++)n[e[t]]=e[t];return n}return e}function de(e,n){return e?[...new Set([].concat(e,n))]:n}function nn(e,n){return e?fe(fe(Object.create(null),e),n):n}function ka(e,n){if(!e)return n;if(!n)return e;const t=fe(Object.create(null),e);for(const s in n)t[s]=de(e[s],n[s]);return t}function Ta(e,n,t,s=!1){const o={},l={};rt(l,Ct,1),e.propsDefaults=Object.create(null),qo(e,n,o,l);for(const a in e.propsOptions[0])a in o||(o[a]=void 0);t?e.props=s?o:$l(o):e.type.props?e.props=o:e.props=l,e.attrs=l}function Pa(e,n,t,s){const{props:o,attrs:l,vnode:{patchFlag:a}}=e,r=U(o),[c]=e.propsOptions;let d=!1;if((s||a>0)&&!(a&16)){if(a&8){const _=e.vnode.dynamicProps;for(let m=0;m<_.length;m++){let C=_[m];if(bt(e.emitsOptions,C))continue;const T=n[C];if(c)if(j(l,C))T!==l[C]&&(l[C]=T,d=!0);else{const N=Ie(C);o[N]=Kt(c,r,N,T,e,!1)}else T!==l[C]&&(l[C]=T,d=!0)}}}else{qo(e,n,o,l)&&(d=!0);let _;for(const m in r)(!n||!j(n,m)&&((_=vn(m))===m||!j(n,_)))&&(c?t&&(t[m]!==void 0||t[_]!==void 0)&&(o[m]=Kt(c,r,m,void 0,e,!0)):delete o[m]);if(l!==r)for(const m in l)(!n||!j(n,m)&&!0)&&(delete l[m],d=!0)}d&&Ue(e,"set","$attrs")}function qo(e,n,t,s){const[o,l]=e.propsOptions;let a=!1,r;if(n)for(let c in n){if(zn(c))continue;const d=n[c];let _;o&&j(o,_=Ie(c))?!l||!l.includes(_)?t[_]=d:(r||(r={}))[_]=d:bt(e.emitsOptions,c)||(!(c in s)||d!==s[c])&&(s[c]=d,a=!0)}if(l){const c=U(t),d=r||V;for(let _=0;_<l.length;_++){const m=l[_];t[m]=Kt(o,c,m,d[m],e,!j(d,m))}}return a}function Kt(e,n,t,s,o,l){const a=e[t];if(a!=null){const r=j(a,"default");if(r&&s===void 0){const c=a.default;if(a.type!==Function&&B(c)){const{propsDefaults:d}=o;t in d?s=d[t]:(bn(o),s=d[t]=c.call(null,n),ln())}else s=c}a[0]&&(l&&!r?s=!1:a[1]&&(s===""||s===vn(t))&&(s=!0))}return s}function Bo(e,n,t=!1){const s=n.propsCache,o=s.get(e);if(o)return o;const l=e.props,a={},r=[];let c=!1;if(!B(e)){const _=m=>{c=!0;const[C,T]=Bo(m,n,!0);fe(a,C),T&&r.push(...T)};!t&&n.mixins.length&&n.mixins.forEach(_),e.extends&&_(e.extends),e.mixins&&e.mixins.forEach(_)}if(!l&&!c)return s.set(e,_n),_n;if(q(l))for(let _=0;_<l.length;_++){const m=Ie(l[_]);zs(m)&&(a[m]=V)}else if(l)for(const _ in l){const m=Ie(_);if(zs(m)){const C=l[_],T=a[m]=q(C)||B(C)?{type:C}:C;if(T){const N=Ns(Boolean,T.type),S=Ns(String,T.type);T[0]=N>-1,T[1]=S<0||N<S,(N>-1||j(T,"default"))&&r.push(m)}}}const d=[a,r];return s.set(e,d),d}function zs(e){return e[0]!=="$"}function qs(e){const n=e&&e.toString().match(/^\s*function (\w+)/);return n?n[1]:e===null?"null":""}function Bs(e,n){return qs(e)===qs(n)}function Ns(e,n){return q(n)?n.findIndex(t=>Bs(t,e)):B(n)&&Bs(n,e)?0:-1}const No=e=>e[0]==="_"||e==="$stable",ds=e=>q(e)?e.map(xe):[xe(e)],Ea=(e,n,t)=>{if(n._n)return n;const s=Zl((...o)=>ds(n(...o)),t);return s._c=!1,s},Lo=(e,n,t)=>{const s=e._ctx;for(const o in e){if(No(o))continue;const l=e[o];if(B(l))n[o]=Ea(o,l,s);else if(l!=null){const a=ds(l);n[o]=()=>a}}},Io=(e,n)=>{const t=ds(n);e.slots.default=()=>t},Ma=(e,n)=>{if(e.vnode.shapeFlag&32){const t=n._;t?(e.slots=U(n),rt(n,"_",t)):Lo(n,e.slots={})}else e.slots={},n&&Io(e,n);rt(e.slots,Ct,1)},za=(e,n,t)=>{const{vnode:s,slots:o}=e;let l=!0,a=V;if(s.shapeFlag&32){const r=n._;r?t&&r===1?l=!1:(fe(o,n),!t&&r===1&&delete o._):(l=!n.$stable,Lo(n,o)),a=n}else n&&(Io(e,n),a={default:1});if(l)for(const r in o)!No(r)&&!(r in a)&&delete o[r]};function Ro(){return{app:null,config:{isNativeTag:al,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let qa=0;function Ba(e,n){return function(s,o=null){B(s)||(s=Object.assign({},s)),o!=null&&!ae(o)&&(o=null);const l=Ro(),a=new Set;let r=!1;const c=l.app={_uid:qa++,_component:s,_props:o,_container:null,_context:l,_instance:null,version:Za,get config(){return l.config},set config(d){},use(d,..._){return a.has(d)||(d&&B(d.install)?(a.add(d),d.install(c,..._)):B(d)&&(a.add(d),d(c,..._))),c},mixin(d){return l.mixins.includes(d)||l.mixins.push(d),c},component(d,_){return _?(l.components[d]=_,c):l.components[d]},directive(d,_){return _?(l.directives[d]=_,c):l.directives[d]},mount(d,_,m){if(!r){const C=Z(s,o);return C.appContext=l,_&&n?n(C,d):e(C,d,m),r=!0,c._container=d,d.__vue_app__=c,fs(C.component)||C.component.proxy}},unmount(){r&&(e(null,c._container),delete c._container.__vue_app__)},provide(d,_){return l.provides[d]=_,c}};return c}}function ft(e,n,t,s,o=!1){if(q(e)){e.forEach((C,T)=>ft(C,n&&(q(n)?n[T]:n),t,s,o));return}if(In(s)&&!o)return;const l=s.shapeFlag&4?fs(s.component)||s.component.proxy:s.el,a=o?null:l,{i:r,r:c}=e,d=n&&n.r,_=r.refs===V?r.refs={}:r.refs,m=r.setupState;if(d!=null&&d!==c&&(re(d)?(_[d]=null,j(m,d)&&(m[d]=null)):pe(d)&&(d.value=null)),B(c))Ye(c,r,12,[a,_]);else{const C=re(c),T=pe(c);if(C||T){const N=()=>{if(e.f){const S=C?_[c]:c.value;o?q(S)&&Jt(S,l):q(S)?S.includes(l)||S.push(l):C?(_[c]=[l],j(m,c)&&(m[c]=_[c])):(c.value=[l],e.k&&(_[e.k]=c.value))}else C?(_[c]=a,j(m,c)&&(m[c]=a)):T&&(c.value=a,e.k&&(_[e.k]=a))};a?(N.id=-1,he(N,t)):N()}}}let We=!1;const tt=e=>/svg/.test(e.namespaceURI)&&e.tagName!=="foreignObject",st=e=>e.nodeType===8;function Na(e){const{mt:n,p:t,o:{patchProp:s,createText:o,nextSibling:l,parentNode:a,remove:r,insert:c,createComment:d}}=e,_=(f,A)=>{if(!A.hasChildNodes()){t(null,f,A),ct(),A._vnode=f;return}We=!1,m(A.firstChild,f,null,null,null),ct(),A._vnode=f,We&&console.error("Hydration completed but contains mismatches.")},m=(f,A,E,R,K,ne=!1)=>{const X=st(f)&&f.data==="[",I=()=>S(f,A,E,R,K,X),{type:ee,ref:oe,shapeFlag:te,patchFlag:Ae}=A,ie=f.nodeType;A.el=f,Ae===-2&&(ne=!1,A.dynamicChildren=null);let M=null;switch(ee){case Kn:ie!==3?A.children===""?(c(A.el=o(""),a(f),f),M=f):M=I():(f.data!==A.children&&(We=!0,f.data=A.children),M=l(f));break;case Je:ie!==8||X?M=I():M=l(f);break;case Rn:if(ie!==1&&ie!==3)M=I();else{M=f;const Ce=!A.children.length;for(let J=0;J<A.staticCount;J++)Ce&&(A.children+=M.nodeType===1?M.outerHTML:M.data),J===A.staticCount-1&&(A.anchor=M),M=l(M);return M}break;case le:X?M=N(f,A,E,R,K,ne):M=I();break;default:if(te&1)ie!==1||A.type.toLowerCase()!==f.tagName.toLowerCase()?M=I():M=C(f,A,E,R,K,ne);else if(te&6){A.slotScopeIds=K;const Ce=a(f);if(n(A,Ce,null,E,R,tt(Ce),ne),M=X?L(f):l(f),M&&st(M)&&M.data==="teleport end"&&(M=l(M)),In(A)){let J;X?(J=Z(le),J.anchor=M?M.previousSibling:Ce.lastChild):J=f.nodeType===3?Le(""):Z("div"),J.el=f,A.component.subTree=J}}else te&64?ie!==8?M=I():M=A.type.hydrate(f,A,E,R,K,ne,e,T):te&128&&(M=A.type.hydrate(f,A,E,R,tt(a(f)),K,ne,e,m))}return oe!=null&&ft(oe,null,R,A),M},C=(f,A,E,R,K,ne)=>{ne=ne||!!A.dynamicChildren;const{type:X,props:I,patchFlag:ee,shapeFlag:oe,dirs:te}=A,Ae=X==="input"&&te||X==="option";if(Ae||ee!==-1){if(te&&Be(A,null,E,"created"),I)if(Ae||!ne||ee&48)for(const M in I)(Ae&&M.endsWith("value")||Gn(M)&&!zn(M))&&s(f,M,null,I[M],!1,void 0,E);else I.onClick&&s(f,"onClick",null,I.onClick,!1,void 0,E);let ie;if((ie=I&&I.onVnodeBeforeMount)&&be(ie,E,A),te&&Be(A,null,E,"beforeMount"),((ie=I&&I.onVnodeMounted)||te)&&wo(()=>{ie&&be(ie,E,A),te&&Be(A,null,E,"mounted")},R),oe&16&&!(I&&(I.innerHTML||I.textContent))){let M=T(f.firstChild,A,f,E,R,K,ne);for(;M;){We=!0;const Ce=M;M=M.nextSibling,r(Ce)}}else oe&8&&f.textContent!==A.children&&(We=!0,f.textContent=A.children)}return f.nextSibling},T=(f,A,E,R,K,ne,X)=>{X=X||!!A.dynamicChildren;const I=A.children,ee=I.length;for(let oe=0;oe<ee;oe++){const te=X?I[oe]:I[oe]=xe(I[oe]);if(f)f=m(f,te,R,K,ne,X);else{if(te.type===Kn&&!te.children)continue;We=!0,t(null,te,E,null,R,K,tt(E),ne)}}return f},N=(f,A,E,R,K,ne)=>{const{slotScopeIds:X}=A;X&&(K=K?K.concat(X):X);const I=a(f),ee=T(l(f),A,I,E,R,K,ne);return ee&&st(ee)&&ee.data==="]"?l(A.anchor=ee):(We=!0,c(A.anchor=d("]"),I,ee),ee)},S=(f,A,E,R,K,ne)=>{if(We=!0,A.el=null,ne){const ee=L(f);for(;;){const oe=l(f);if(oe&&oe!==ee)r(oe);else break}}const X=l(f),I=a(f);return r(f),t(null,A,I,X,E,R,tt(I),K),X},L=f=>{let A=0;for(;f;)if(f=l(f),f&&st(f)&&(f.data==="["&&A++,f.data==="]")){if(A===0)return l(f);A--}return f};return[_,m]}const he=wo;function La(e){return Ia(e,Na)}function Ia(e,n){const t=fl();t.__VUE__=!0;const{insert:s,remove:o,patchProp:l,createElement:a,createText:r,createComment:c,setText:d,setElementText:_,parentNode:m,nextSibling:C,setScopeId:T=Te,cloneNode:N,insertStaticContent:S}=e,L=(i,p,u,g=null,h=null,D=null,v=!1,F=null,b=!!p.dynamicChildren)=>{if(i===p)return;i&&!Pn(i,p)&&(g=Yn(i),Ke(i,h,D,!0),i=null),p.patchFlag===-2&&(b=!1,p.dynamicChildren=null);const{type:y,ref:w,shapeFlag:x}=p;switch(y){case Kn:f(i,p,u,g);break;case Je:A(i,p,u,g);break;case Rn:i==null&&E(p,u,g,v);break;case le:ie(i,p,u,g,h,D,v,F,b);break;default:x&1?ne(i,p,u,g,h,D,v,F,b):x&6?M(i,p,u,g,h,D,v,F,b):(x&64||x&128)&&y.process(i,p,u,g,h,D,v,F,b,pn)}w!=null&&h&&ft(w,i&&i.ref,D,p||i,!p)},f=(i,p,u,g)=>{if(i==null)s(p.el=r(p.children),u,g);else{const h=p.el=i.el;p.children!==i.children&&d(h,p.children)}},A=(i,p,u,g)=>{i==null?s(p.el=c(p.children||""),u,g):p.el=i.el},E=(i,p,u,g)=>{[i.el,i.anchor]=S(i.children,p,u,g,i.el,i.anchor)},R=({el:i,anchor:p},u,g)=>{let h;for(;i&&i!==p;)h=C(i),s(i,u,g),i=h;s(p,u,g)},K=({el:i,anchor:p})=>{let u;for(;i&&i!==p;)u=C(i),o(i),i=u;o(p)},ne=(i,p,u,g,h,D,v,F,b)=>{v=v||p.type==="svg",i==null?X(p,u,g,h,D,v,F,b):oe(i,p,h,D,v,F,b)},X=(i,p,u,g,h,D,v,F)=>{let b,y;const{type:w,props:x,shapeFlag:k,transition:z,patchFlag:O,dirs:W}=i;if(i.el&&N!==void 0&&O===-1)b=i.el=N(i.el);else{if(b=i.el=a(i.type,D,x&&x.is,x),k&8?_(b,i.children):k&16&&ee(i.children,b,null,g,h,D&&w!=="foreignObject",v,F),W&&Be(i,null,g,"created"),x){for(const Y in x)Y!=="value"&&!zn(Y)&&l(b,Y,null,x[Y],D,i.children,g,h,je);"value"in x&&l(b,"value",null,x.value),(y=x.onVnodeBeforeMount)&&be(y,g,i)}I(b,i,i.scopeId,v,g)}W&&Be(i,null,g,"beforeMount");const G=(!h||h&&!h.pendingBranch)&&z&&!z.persisted;G&&z.beforeEnter(b),s(b,p,u),((y=x&&x.onVnodeMounted)||G||W)&&he(()=>{y&&be(y,g,i),G&&z.enter(b),W&&Be(i,null,g,"mounted")},h)},I=(i,p,u,g,h)=>{if(u&&T(i,u),g)for(let D=0;D<g.length;D++)T(i,g[D]);if(h){let D=h.subTree;if(p===D){const v=h.vnode;I(i,v,v.scopeId,v.slotScopeIds,h.parent)}}},ee=(i,p,u,g,h,D,v,F,b=0)=>{for(let y=b;y<i.length;y++){const w=i[y]=F?Ve(i[y]):xe(i[y]);L(null,w,p,u,g,h,D,v,F)}},oe=(i,p,u,g,h,D,v)=>{const F=p.el=i.el;let{patchFlag:b,dynamicChildren:y,dirs:w}=p;b|=i.patchFlag&16;const x=i.props||V,k=p.props||V;let z;u&&en(u,!1),(z=k.onVnodeBeforeUpdate)&&be(z,u,p,i),w&&Be(p,i,u,"beforeUpdate"),u&&en(u,!0);const O=h&&p.type!=="foreignObject";if(y?te(i.dynamicChildren,y,F,u,g,O,D):v||Re(i,p,F,null,u,g,O,D,!1),b>0){if(b&16)Ae(F,p,x,k,u,g,h);else if(b&2&&x.class!==k.class&&l(F,"class",null,k.class,h),b&4&&l(F,"style",x.style,k.style,h),b&8){const W=p.dynamicProps;for(let G=0;G<W.length;G++){const Y=W[G],ve=x[Y],dn=k[Y];(dn!==ve||Y==="value")&&l(F,Y,ve,dn,h,i.children,u,g,je)}}b&1&&i.children!==p.children&&_(F,p.children)}else!v&&y==null&&Ae(F,p,x,k,u,g,h);((z=k.onVnodeUpdated)||w)&&he(()=>{z&&be(z,u,p,i),w&&Be(p,i,u,"updated")},g)},te=(i,p,u,g,h,D,v)=>{for(let F=0;F<p.length;F++){const b=i[F],y=p[F],w=b.el&&(b.type===le||!Pn(b,y)||b.shapeFlag&70)?m(b.el):u;L(b,y,w,null,g,h,D,v,!0)}},Ae=(i,p,u,g,h,D,v)=>{if(u!==g){for(const F in g){if(zn(F))continue;const b=g[F],y=u[F];b!==y&&F!=="value"&&l(i,F,y,b,v,p.children,h,D,je)}if(u!==V)for(const F in u)!zn(F)&&!(F in g)&&l(i,F,u[F],null,v,p.children,h,D,je);"value"in g&&l(i,"value",u.value,g.value)}},ie=(i,p,u,g,h,D,v,F,b)=>{const y=p.el=i?i.el:r(""),w=p.anchor=i?i.anchor:r("");let{patchFlag:x,dynamicChildren:k,slotScopeIds:z}=p;z&&(F=F?F.concat(z):z),i==null?(s(y,u,g),s(w,u,g),ee(p.children,u,w,h,D,v,F,b)):x>0&&x&64&&k&&i.dynamicChildren?(te(i.dynamicChildren,k,u,h,D,v,F),(p.key!=null||h&&p===h.subTree)&&jo(i,p,!0)):Re(i,p,u,w,h,D,v,F,b)},M=(i,p,u,g,h,D,v,F,b)=>{p.slotScopeIds=F,i==null?p.shapeFlag&512?h.ctx.activate(p,u,g,v,b):Ce(p,u,g,h,D,v,b):J(i,p,b)},Ce=(i,p,u,g,h,D,v)=>{const F=i.component=Wa(i,g,h);if(To(i)&&(F.ctx.renderer=pn),Ga(F),F.asyncDep){if(h&&h.registerDep(F,se),!i.el){const b=F.subTree=Z(Je);A(null,b,p,u)}return}se(F,i,p,u,h,D,v)},J=(i,p,u)=>{const g=p.component=i.component;if(ta(i,p,u))if(g.asyncDep&&!g.asyncResolved){Q(g,p,u);return}else g.next=p,Ql(g.update),g.update();else p.el=i.el,g.vnode=p},se=(i,p,u,g,h,D,v)=>{const F=()=>{if(i.isMounted){let{next:w,bu:x,u:k,parent:z,vnode:O}=i,W=w,G;en(i,!1),w?(w.el=O.el,Q(i,w,v)):w=O,x&&Pt(x),(G=w.props&&w.props.onVnodeBeforeUpdate)&&be(G,z,w,O),en(i,!0);const Y=Et(i),ve=i.subTree;i.subTree=Y,L(ve,Y,m(ve.el),Yn(ve),i,h,D),w.el=Y.el,W===null&&sa(i,Y.el),k&&he(k,h),(G=w.props&&w.props.onVnodeUpdated)&&he(()=>be(G,z,w,O),h)}else{let w;const{el:x,props:k}=p,{bm:z,m:O,parent:W}=i,G=In(p);if(en(i,!1),z&&Pt(z),!G&&(w=k&&k.onVnodeBeforeMount)&&be(w,W,p),en(i,!0),x&&kt){const Y=()=>{i.subTree=Et(i),kt(x,i.subTree,i,h,null)};G?p.type.__asyncLoader().then(()=>!i.isUnmounted&&Y()):Y()}else{const Y=i.subTree=Et(i);L(null,Y,u,g,i,h,D),p.el=Y.el}if(O&&he(O,h),!G&&(w=k&&k.onVnodeMounted)){const Y=p;he(()=>be(w,W,Y),h)}(p.shapeFlag&256||W&&In(W.vnode)&&W.vnode.shapeFlag&256)&&i.a&&he(i.a,h),i.isMounted=!0,p=u=g=null}},b=i.effect=new ts(F,()=>Do(y),i.scope),y=i.update=()=>b.run();y.id=i.uid,en(i,!0),y()},Q=(i,p,u)=>{p.component=i;const g=i.vnode.props;i.vnode=p,i.next=null,Pa(i,p.props,g,u),za(i,p.children,u),xn(),Dt(void 0,i.update),wn()},Re=(i,p,u,g,h,D,v,F,b=!1)=>{const y=i&&i.children,w=i?i.shapeFlag:0,x=p.children,{patchFlag:k,shapeFlag:z}=p;if(k>0){if(k&128){kn(y,x,u,g,h,D,v,F,b);return}else if(k&256){xt(y,x,u,g,h,D,v,F,b);return}}z&8?(w&16&&je(y,h,D),x!==y&&_(u,x)):w&16?z&16?kn(y,x,u,g,h,D,v,F,b):je(y,h,D,!0):(w&8&&_(u,""),z&16&&ee(x,u,g,h,D,v,F,b))},xt=(i,p,u,g,h,D,v,F,b)=>{i=i||_n,p=p||_n;const y=i.length,w=p.length,x=Math.min(y,w);let k;for(k=0;k<x;k++){const z=p[k]=b?Ve(p[k]):xe(p[k]);L(i[k],z,u,null,h,D,v,F,b)}y>w?je(i,h,D,!0,!1,x):ee(p,u,g,h,D,v,F,b,x)},kn=(i,p,u,g,h,D,v,F,b)=>{let y=0;const w=p.length;let x=i.length-1,k=w-1;for(;y<=x&&y<=k;){const z=i[y],O=p[y]=b?Ve(p[y]):xe(p[y]);if(Pn(z,O))L(z,O,u,null,h,D,v,F,b);else break;y++}for(;y<=x&&y<=k;){const z=i[x],O=p[k]=b?Ve(p[k]):xe(p[k]);if(Pn(z,O))L(z,O,u,null,h,D,v,F,b);else break;x--,k--}if(y>x){if(y<=k){const z=k+1,O=z<w?p[z].el:g;for(;y<=k;)L(null,p[y]=b?Ve(p[y]):xe(p[y]),u,O,h,D,v,F,b),y++}}else if(y>k)for(;y<=x;)Ke(i[y],h,D,!0),y++;else{const z=y,O=y,W=new Map;for(y=O;y<=k;y++){const _e=p[y]=b?Ve(p[y]):xe(p[y]);_e.key!=null&&W.set(_e.key,y)}let G,Y=0;const ve=k-O+1;let dn=!1,gs=0;const Tn=new Array(ve);for(y=0;y<ve;y++)Tn[y]=0;for(y=z;y<=x;y++){const _e=i[y];if(Y>=ve){Ke(_e,h,D,!0);continue}let Ee;if(_e.key!=null)Ee=W.get(_e.key);else for(G=O;G<=k;G++)if(Tn[G-O]===0&&Pn(_e,p[G])){Ee=G;break}Ee===void 0?Ke(_e,h,D,!0):(Tn[Ee-O]=y+1,Ee>=gs?gs=Ee:dn=!0,L(_e,p[Ee],u,null,h,D,v,F,b),Y++)}const ms=dn?Ra(Tn):_n;for(G=ms.length-1,y=ve-1;y>=0;y--){const _e=O+y,Ee=p[_e],ys=_e+1<w?p[_e+1].el:g;Tn[y]===0?L(null,Ee,u,ys,h,D,v,F,b):dn&&(G<0||y!==ms[G]?cn(Ee,u,ys,2):G--)}}},cn=(i,p,u,g,h=null)=>{const{el:D,type:v,transition:F,children:b,shapeFlag:y}=i;if(y&6){cn(i.component.subTree,p,u,g);return}if(y&128){i.suspense.move(p,u,g);return}if(y&64){v.move(i,p,u,pn);return}if(v===le){s(D,p,u);for(let x=0;x<b.length;x++)cn(b[x],p,u,g);s(i.anchor,p,u);return}if(v===Rn){R(i,p,u);return}if(g!==2&&y&1&&F)if(g===0)F.beforeEnter(D),s(D,p,u),he(()=>F.enter(D),h);else{const{leave:x,delayLeave:k,afterLeave:z}=F,O=()=>s(D,p,u),W=()=>{x(D,()=>{O(),z&&z()})};k?k(D,O,W):W()}else s(D,p,u)},Ke=(i,p,u,g=!1,h=!1)=>{const{type:D,props:v,ref:F,children:b,dynamicChildren:y,shapeFlag:w,patchFlag:x,dirs:k}=i;if(F!=null&&ft(F,null,u,i,!0),w&256){p.ctx.deactivate(i);return}const z=w&1&&k,O=!In(i);let W;if(O&&(W=v&&v.onVnodeBeforeUnmount)&&be(W,p,i),w&6)el(i.component,u,g);else{if(w&128){i.suspense.unmount(u,g);return}z&&Be(i,null,p,"beforeUnmount"),w&64?i.type.remove(i,p,u,h,pn,g):y&&(D!==le||x>0&&x&64)?je(y,p,u,!1,!0):(D===le&&x&384||!h&&w&16)&&je(b,p,u),g&&hs(i)}(O&&(W=v&&v.onVnodeUnmounted)||z)&&he(()=>{W&&be(W,p,i),z&&Be(i,null,p,"unmounted")},u)},hs=i=>{const{type:p,el:u,anchor:g,transition:h}=i;if(p===le){Zo(u,g);return}if(p===Rn){K(i);return}const D=()=>{o(u),h&&!h.persisted&&h.afterLeave&&h.afterLeave()};if(i.shapeFlag&1&&h&&!h.persisted){const{leave:v,delayLeave:F}=h,b=()=>v(u,D);F?F(i.el,D,b):b()}else D()},Zo=(i,p)=>{let u;for(;i!==p;)u=C(i),o(i),i=u;o(p)},el=(i,p,u)=>{const{bum:g,scope:h,update:D,subTree:v,um:F}=i;g&&Pt(g),h.stop(),D&&(D.active=!1,Ke(v,i,p,u)),F&&he(F,p),he(()=>{i.isUnmounted=!0},p),p&&p.pendingBranch&&!p.isUnmounted&&i.asyncDep&&!i.asyncResolved&&i.suspenseId===p.pendingId&&(p.deps--,p.deps===0&&p.resolve())},je=(i,p,u,g=!1,h=!1,D=0)=>{for(let v=D;v<i.length;v++)Ke(i[v],p,u,g,h)},Yn=i=>i.shapeFlag&6?Yn(i.component.subTree):i.shapeFlag&128?i.suspense.next():C(i.anchor||i.el),_s=(i,p,u)=>{i==null?p._vnode&&Ke(p._vnode,null,null,!0):L(p._vnode||null,i,p,null,null,null,u),ct(),p._vnode=i},pn={p:L,um:Ke,m:cn,r:hs,mt:Ce,mc:ee,pc:Re,pbc:te,n:Yn,o:e};let wt,kt;return n&&([wt,kt]=n(pn)),{render:_s,hydrate:wt,createApp:Ba(_s,wt)}}function en({effect:e,update:n},t){e.allowRecurse=n.allowRecurse=t}function jo(e,n,t=!1){const s=e.children,o=n.children;if(q(s)&&q(o))for(let l=0;l<s.length;l++){const a=s[l];let r=o[l];r.shapeFlag&1&&!r.dynamicChildren&&((r.patchFlag<=0||r.patchFlag===32)&&(r=o[l]=Ve(o[l]),r.el=a.el),t||jo(a,r))}}function Ra(e){const n=e.slice(),t=[0];let s,o,l,a,r;const c=e.length;for(s=0;s<c;s++){const d=e[s];if(d!==0){if(o=t[t.length-1],e[o]<d){n[s]=o,t.push(s);continue}for(l=0,a=t.length-1;l<a;)r=l+a>>1,e[t[r]]<d?l=r+1:a=r;d<e[t[l]]&&(l>0&&(n[s]=t[l-1]),t[l]=s)}}for(l=t.length,a=t[l-1];l-- >0;)t[l]=a,a=n[a];return t}const ja=e=>e.__isTeleport,le=Symbol(void 0),Kn=Symbol(void 0),Je=Symbol(void 0),Rn=Symbol(void 0),jn=[];let ke=null;function $(e=!1){jn.push(ke=e?null:[])}function Oa(){jn.pop(),ke=jn[jn.length-1]||null}let Hn=1;function Ls(e){Hn+=e}function Oo(e){return e.dynamicChildren=Hn>0?ke||_n:null,Oa(),Hn>0&&ke&&ke.push(e),e}function H(e,n,t,s,o,l){return Oo(P(e,n,t,s,o,l,!0))}function ht(e,n,t,s,o){return Oo(Z(e,n,t,s,o,!0))}function Ht(e){return e?e.__v_isVNode===!0:!1}function Pn(e,n){return e.type===n.type&&e.key===n.key}const Ct="__vInternal",$o=({key:e})=>e!=null?e:null,at=({ref:e,ref_key:n,ref_for:t})=>e!=null?re(e)||pe(e)||B(e)?{i:Ne,r:e,k:n,f:!!t}:e:null;function P(e,n=null,t=null,s=0,o=null,l=e===le?0:1,a=!1,r=!1){const c={__v_isVNode:!0,__v_skip:!0,type:e,props:n,key:n&&$o(n),ref:n&&at(n),scopeId:xo,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:s,dynamicProps:o,dynamicChildren:null,appContext:null};return r?(us(c,t),l&128&&e.normalize(c)):t&&(c.shapeFlag|=re(t)?8:16),Hn>0&&!a&&ke&&(c.patchFlag>0||l&6)&&c.patchFlag!==32&&ke.push(c),c}const Z=$a;function $a(e,n=null,t=null,s=0,o=null,l=!1){if((!e||e===Da)&&(e=Je),Ht(e)){const r=Dn(e,n,!0);return t&&us(r,t),Hn>0&&!l&&ke&&(r.shapeFlag&6?ke[ke.indexOf(e)]=r:ke.push(r)),r.patchFlag|=-2,r}if(Ja(e)&&(e=e.__vccOpts),n){n=Ua(n);let{class:r,style:c}=n;r&&!re(r)&&(n.class=an(r)),ae(c)&&(ho(c)&&!q(c)&&(c=fe({},c)),n.style=Cn(c))}const a=re(e)?1:oa(e)?128:ja(e)?64:ae(e)?4:B(e)?2:0;return P(e,n,t,s,o,a,l,!0)}function Ua(e){return e?ho(e)||Ct in e?fe({},e):e:null}function Dn(e,n,t=!1){const{props:s,ref:o,patchFlag:l,children:a}=e,r=n?Sa(s||{},n):s;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:r,key:r&&$o(r),ref:n&&n.ref?t&&o?q(o)?o.concat(at(n)):[o,at(n)]:at(n):o,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:a,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:n&&e.type!==le?l===-1?16:l|16:l,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Dn(e.ssContent),ssFallback:e.ssFallback&&Dn(e.ssFallback),el:e.el,anchor:e.anchor}}function Le(e=" ",n=0){return Z(Kn,null,e,n)}function sc(e,n){const t=Z(Rn,null,e);return t.staticCount=n,t}function ot(e="",n=!1){return n?($(),ht(Je,null,e)):Z(Je,null,e)}function xe(e){return e==null||typeof e=="boolean"?Z(Je):q(e)?Z(le,null,e.slice()):typeof e=="object"?Ve(e):Z(Kn,null,String(e))}function Ve(e){return e.el===null||e.memo?e:Dn(e)}function us(e,n){let t=0;const{shapeFlag:s}=e;if(n==null)n=null;else if(q(n))t=16;else if(typeof n=="object")if(s&65){const o=n.default;o&&(o._c&&(o._d=!1),us(e,o()),o._c&&(o._d=!0));return}else{t=32;const o=n._;!o&&!(Ct in n)?n._ctx=Ne:o===3&&Ne&&(Ne.slots._===1?n._=1:(n._=2,e.patchFlag|=1024))}else B(n)?(n={default:n,_ctx:Ne},t=32):(n=String(n),s&64?(t=16,n=[Le(n)]):t=8);e.children=n,e.shapeFlag|=t}function Sa(...e){const n={};for(let t=0;t<e.length;t++){const s=e[t];for(const o in s)if(o==="class")n.class!==s.class&&(n.class=an([n.class,s.class]));else if(o==="style")n.style=Cn([n.style,s.style]);else if(Gn(o)){const l=n[o],a=s[o];a&&l!==a&&!(q(l)&&l.includes(a))&&(n[o]=l?[].concat(l,a):a)}else o!==""&&(n[o]=s[o])}return n}function be(e,n,t,s=null){Pe(e,n,7,[t,s])}const Ka=Ro();let Ha=0;function Wa(e,n,t){const s=e.type,o=(n?n.appContext:e.appContext)||Ka,l={uid:Ha++,vnode:e,type:s,parent:n,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new hl(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:n?n.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Bo(s,o),emitsOptions:vo(s,o),emit:null,emitted:null,propsDefaults:V,inheritAttrs:s.inheritAttrs,ctx:V,data:V,props:V,attrs:V,slots:V,refs:V,setupState:V,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=n?n.root:l,l.emit=Jl.bind(null,l),e.ce&&e.ce(l),l}let ce=null;const bn=e=>{ce=e,e.scope.on()},ln=()=>{ce&&ce.scope.off(),ce=null};function Uo(e){return e.vnode.shapeFlag&4}let Wn=!1;function Ga(e,n=!1){Wn=n;const{props:t,children:s}=e.vnode,o=Uo(e);Ta(e,t,o,n),Ma(e,s);const l=o?Va(e,n):void 0;return Wn=!1,l}function Va(e,n){const t=e.type;e.accessCache=Object.create(null),e.proxy=qn(new Proxy(e.ctx,Aa));const{setup:s}=t;if(s){const o=e.setupContext=s.length>1?Ya(e):null;bn(e),xn();const l=Ye(s,e,0,[e.props,o]);if(wn(),ln(),Zs(l)){if(l.then(ln,ln),n)return l.then(a=>{Is(e,a,n)}).catch(a=>{Ft(a,e,0)});e.asyncDep=l}else Is(e,l,n)}else So(e,n)}function Is(e,n,t){B(n)?e.type.__ssrInlineRender?e.ssrRender=n:e.render=n:ae(n)&&(e.setupState=yo(n)),So(e,t)}let Rs;function So(e,n,t){const s=e.type;if(!e.render){if(!n&&Rs&&!s.render){const o=s.template;if(o){const{isCustomElement:l,compilerOptions:a}=e.appContext.config,{delimiters:r,compilerOptions:c}=s,d=fe(fe({isCustomElement:l,delimiters:r},a),c);s.render=Rs(o,d)}}e.render=s.render||Te}bn(e),xn(),Ca(e),wn(),ln()}function Qa(e){return new Proxy(e.attrs,{get(n,t){return Fe(e,"get","$attrs"),n[t]}})}function Ya(e){const n=s=>{e.exposed=s||{}};let t;return{get attrs(){return t||(t=Qa(e))},slots:e.slots,emit:e.emit,expose:n}}function fs(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(yo(qn(e.exposed)),{get(n,t){if(t in n)return n[t];if(t in dt)return dt[t](e)}}))}function Xa(e,n=!0){return B(e)?e.displayName||e.name:e.name||n&&e.__name}function Ja(e){return B(e)&&"__vccOpts"in e}const ze=(e,n)=>Wl(e,n,Wn);function Wt(e,n,t){const s=arguments.length;return s===2?ae(n)&&!q(n)?Ht(n)?Z(e,null,[n]):Z(e,n):Z(e,null,n):(s>3?t=Array.prototype.slice.call(arguments,2):s===3&&Ht(t)&&(t=[t]),Z(e,n,t))}const Za="3.2.37",er="http://www.w3.org/2000/svg",tn=typeof document<"u"?document:null,js=tn&&tn.createElement("template"),nr={insert:(e,n,t)=>{n.insertBefore(e,t||null)},remove:e=>{const n=e.parentNode;n&&n.removeChild(e)},createElement:(e,n,t,s)=>{const o=n?tn.createElementNS(er,e):tn.createElement(e,t?{is:t}:void 0);return e==="select"&&s&&s.multiple!=null&&o.setAttribute("multiple",s.multiple),o},createText:e=>tn.createTextNode(e),createComment:e=>tn.createComment(e),setText:(e,n)=>{e.nodeValue=n},setElementText:(e,n)=>{e.textContent=n},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>tn.querySelector(e),setScopeId(e,n){e.setAttribute(n,"")},cloneNode(e){const n=e.cloneNode(!0);return"_value"in e&&(n._value=e._value),n},insertStaticContent(e,n,t,s,o,l){const a=t?t.previousSibling:n.lastChild;if(o&&(o===l||o.nextSibling))for(;n.insertBefore(o.cloneNode(!0),t),!(o===l||!(o=o.nextSibling)););else{js.innerHTML=s?`<svg>${e}</svg>`:e;const r=js.content;if(s){const c=r.firstChild;for(;c.firstChild;)r.appendChild(c.firstChild);r.removeChild(c)}n.insertBefore(r,t)}return[a?a.nextSibling:n.firstChild,t?t.previousSibling:n.lastChild]}};function tr(e,n,t){const s=e._vtc;s&&(n=(n?[n,...s]:[...s]).join(" ")),n==null?e.removeAttribute("class"):t?e.setAttribute("class",n):e.className=n}function sr(e,n,t){const s=e.style,o=re(t);if(t&&!o){for(const l in t)Gt(s,l,t[l]);if(n&&!re(n))for(const l in n)t[l]==null&&Gt(s,l,"")}else{const l=s.display;o?n!==t&&(s.cssText=t):n&&e.removeAttribute("style"),"_vod"in e&&(s.display=l)}}const Os=/\s*!important$/;function Gt(e,n,t){if(q(t))t.forEach(s=>Gt(e,n,s));else if(t==null&&(t=""),n.startsWith("--"))e.setProperty(n,t);else{const s=or(e,n);Os.test(t)?e.setProperty(vn(s),t.replace(Os,""),"important"):e[s]=t}}const $s=["Webkit","Moz","ms"],Mt={};function or(e,n){const t=Mt[n];if(t)return t;let s=Ie(n);if(s!=="filter"&&s in e)return Mt[n]=s;s=mt(s);for(let o=0;o<$s.length;o++){const l=$s[o]+s;if(l in e)return Mt[n]=l}return n}const Us="http://www.w3.org/1999/xlink";function lr(e,n,t,s,o){if(s&&n.startsWith("xlink:"))t==null?e.removeAttributeNS(Us,n.slice(6,n.length)):e.setAttributeNS(Us,n,t);else{const l=tl(n);t==null||l&&!Ys(t)?e.removeAttribute(n):e.setAttribute(n,l?"":t)}}function ar(e,n,t,s,o,l,a){if(n==="innerHTML"||n==="textContent"){s&&a(s,o,l),e[n]=t==null?"":t;return}if(n==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=t;const c=t==null?"":t;(e.value!==c||e.tagName==="OPTION")&&(e.value=c),t==null&&e.removeAttribute(n);return}let r=!1;if(t===""||t==null){const c=typeof e[n];c==="boolean"?t=Ys(t):t==null&&c==="string"?(t="",r=!0):c==="number"&&(t=0,r=!0)}try{e[n]=t}catch{}r&&e.removeAttribute(n)}const[Ko,rr]=(()=>{let e=Date.now,n=!1;if(typeof window<"u"){Date.now()>document.createEvent("Event").timeStamp&&(e=performance.now.bind(performance));const t=navigator.userAgent.match(/firefox\/(\d+)/i);n=!!(t&&Number(t[1])<=53)}return[e,n]})();let Vt=0;const ir=Promise.resolve(),cr=()=>{Vt=0},pr=()=>Vt||(ir.then(cr),Vt=Ko());function dr(e,n,t,s){e.addEventListener(n,t,s)}function ur(e,n,t,s){e.removeEventListener(n,t,s)}function fr(e,n,t,s,o=null){const l=e._vei||(e._vei={}),a=l[n];if(s&&a)a.value=s;else{const[r,c]=hr(n);if(s){const d=l[n]=_r(s,o);dr(e,r,d,c)}else a&&(ur(e,r,a,c),l[n]=void 0)}}const Ss=/(?:Once|Passive|Capture)$/;function hr(e){let n;if(Ss.test(e)){n={};let t;for(;t=e.match(Ss);)e=e.slice(0,e.length-t[0].length),n[t[0].toLowerCase()]=!0}return[vn(e.slice(2)),n]}function _r(e,n){const t=s=>{const o=s.timeStamp||Ko();(rr||o>=t.attached-1)&&Pe(gr(s,t.value),n,5,[s])};return t.value=e,t.attached=pr(),t}function gr(e,n){if(q(n)){const t=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{t.call(e),e._stopped=!0},n.map(s=>o=>!o._stopped&&s&&s(o))}else return n}const Ks=/^on[a-z]/,mr=(e,n,t,s,o=!1,l,a,r,c)=>{n==="class"?tr(e,s,o):n==="style"?sr(e,t,s):Gn(n)?Xt(n)||fr(e,n,t,s,a):(n[0]==="."?(n=n.slice(1),!0):n[0]==="^"?(n=n.slice(1),!1):yr(e,n,s,o))?ar(e,n,s,l,a,r,c):(n==="true-value"?e._trueValue=s:n==="false-value"&&(e._falseValue=s),lr(e,n,s,o))};function yr(e,n,t,s){return s?!!(n==="innerHTML"||n==="textContent"||n in e&&Ks.test(n)&&B(t)):n==="spellcheck"||n==="draggable"||n==="translate"||n==="form"||n==="list"&&e.tagName==="INPUT"||n==="type"&&e.tagName==="TEXTAREA"||Ks.test(n)&&re(t)?!1:n in e}const Fr=fe({patchProp:mr},nr);let zt,Hs=!1;function Dr(){return zt=Hs?zt:La(Fr),Hs=!0,zt}const br=(...e)=>{const n=Dr().createApp(...e),{mount:t}=n;return n.mount=s=>{const o=Ar(s);if(o)return t(o,!0,o instanceof SVGElement)},n};function Ar(e){return re(e)?document.querySelector(e):e}const oc=(e,n)=>{const t=e.__vccOpts||e;for(const[s,o]of n)t[s]=o;return t},Cr="modulepreload",vr=function(e){return"/"+e},Ws={},xr=function(n,t,s){return!t||t.length===0?n():Promise.all(t.map(o=>{if(o=vr(o),o in Ws)return;Ws[o]=!0;const l=o.endsWith(".css"),a=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${o}"]${a}`))return;const r=document.createElement("link");if(r.rel=l?"stylesheet":Cr,l||(r.as="script",r.crossOrigin=""),r.href=o,document.head.appendChild(r),l)return new Promise((c,d)=>{r.addEventListener("load",c),r.addEventListener("error",()=>d(new Error(`Unable to preload CSS for ${o}`)))})})).then(()=>n())},wr=JSON.parse('{"lang":"zh-CN","title":"\u65E0\u5984p\u7684\u5C0F\u7AD9","description":"A VitePress site","base":"/","head":[],"appearance":true,"themeConfig":{"name":"\u65E0\u5984p","cover":"/img/ph_4.jpg","social":[{"icon":"fa-github","url":"https://github.com/zhuomingla"},{"icon":"fa-twitter","url":"https://twitter.com"},{"icon":"fa-weibo","url":"https://weibo.com"}],"waline":"https://mikumiku-kopht73q6-zhuomingla.vercel.app/"},"locales":{},"langs":{},"scrollOffset":90,"cleanUrls":"disabled"}'),kr=/^[a-z]+:/i,ge=typeof window<"u",Ho={relativePath:"",title:"404",description:"Not Found",headers:[],frontmatter:{sidebar:!1,layout:"page"},lastUpdated:0};function Tr(e,n){n.sort((t,s)=>{const o=s.split("/").length-t.split("/").length;return o!==0?o:s.length-t.length});for(const t of n)if(e.startsWith(t))return t}function Gs(e,n){const t=Tr(n,Object.keys(e));return t?e[t]:void 0}function Pr(e){const{locales:n}=e.themeConfig||{},t=e.locales;return n&&t?Object.keys(n).reduce((s,o)=>(s[o]={label:n[o].label,lang:t[o].lang},s),{}):{}}function Er(e,n){n=zr(e,n);const t=Gs(e.locales||{},n),s=Gs(e.themeConfig.locales||{},n);return Object.assign({},e,t,{themeConfig:Object.assign({},e.themeConfig,s,{locales:{}}),lang:(t||e).lang,locales:{},langs:Pr(e)})}function Wo(e,n){var l;const t=n.title||e.title,s=(l=n.titleTemplate)!=null?l:e.titleTemplate;if(typeof s=="string"&&s.includes(":title"))return s.replace(/:title/g,t);const o=Mr(e.title,s);return`${t}${o}`}function Mr(e,n){return n===!1?"":n===!0||n===void 0?` | ${e}`:e===n?"":` | ${n}`}function zr(e,n){if(!ge)return n;const t=e.base,s=t.endsWith("/")?t.slice(0,-1):t;return n.slice(s.length)}function qr(e,n){const[t,s]=n;if(t!=="meta")return!1;const o=Object.entries(s)[0];return o==null?!1:e.some(([l,a])=>l===t&&a[o[0]]===o[1])}function Br(e,n){return[...e.filter(t=>!qr(n,t)),...n]}function Nr(e,n){return`${e}${n}`.replace(/\/+/g,"/")}function Qt(e){return kr.test(e)?e:Nr(An.value.base,e)}function Go(e){let n=e.replace(/\.html$/,"");if(n=decodeURIComponent(n),n.endsWith("/")&&(n+="index"),ge){const t="/";n=(n.slice(t.length).replace(/\//g,"_")||"index")+".md";const s=__VP_HASH_MAP__[n.toLowerCase()];n=`${t}assets/${n}.${s}.js`}else n=`./${n.slice(1).replace(/\//g,"_")}.md.js`;return n}const Vo=Symbol(),An=Ul(wr);function Lr(e){const n=ze(()=>Er(An.value,e.path));return{site:n,theme:ze(()=>n.value.themeConfig),page:ze(()=>e.data),frontmatter:ze(()=>e.data.frontmatter),lang:ze(()=>n.value.lang),localePath:ze(()=>{const{langs:t,lang:s}=n.value,o=Object.keys(t).find(l=>t[l].lang===s);return Qt(o||"/")}),title:ze(()=>Wo(n.value,e.data)),description:ze(()=>e.data.description||n.value.description)}}function rn(){const e=Ln(Vo);if(!e)throw new Error("vitepress data not properly injected in app");return e}const Qo=Symbol(),Vs="http://a.com",Ir=()=>({path:"/",component:null,data:Ho});function Rr(e,n){const t=Vn(Ir());function s(a=ge?location.href:"/"){const r=new URL(a,Vs);return An.value.cleanUrls==="disabled"&&!r.pathname.endsWith("/")&&!r.pathname.endsWith(".html")&&(r.pathname+=".html",a=r.pathname+r.search+r.hash),ge&&(history.replaceState({scrollPosition:window.scrollY},document.title),history.pushState(null,"",a)),l(a)}let o=null;async function l(a,r=0,c=!1){const d=new URL(a,Vs),_=o=d.pathname;try{let m=await e(_);if(o===_){o=null;const{default:C,__pageData:T}=m;if(!C)throw new Error(`Invalid route component: ${C}`);t.path=ge?_:Qt(_),t.component=qn(C),t.data=qn(T),ge&&cs(()=>{if(d.hash&&!r){let N=null;try{N=document.querySelector(decodeURIComponent(d.hash))}catch(S){console.warn(S)}if(N){Qs(N,d.hash);return}}window.scrollTo(0,r)})}}catch(m){if(!/fetch/.test(m.message)&&!/^\/404(\.html|\/)?$/.test(a)&&console.error(m),!c)try{const C=await fetch(An.value.base+"hashmap.json");window.__VP_HASH_MAP__=await C.json(),await l(a,r,!0);return}catch{}o===_&&(o=null,t.path=ge?_:Qt(_),t.component=n?qn(n):null,t.data=Ho)}}return ge&&(window.addEventListener("click",a=>{const r=a.target.closest("a");if(r){const{href:c,origin:d,pathname:_,hash:m,search:C,target:T}=r,N=window.location,S=_.match(/\.\w+$/);!a.ctrlKey&&!a.shiftKey&&!a.altKey&&!a.metaKey&&T!=="_blank"&&d===N.origin&&!(S&&S[0]!==".html")&&(a.preventDefault(),_===N.pathname&&C===N.search?m&&m!==N.hash&&(history.pushState(null,"",m),window.dispatchEvent(new Event("hashchange")),Qs(r,m,r.classList.contains("header-anchor"))):s(c))}},{capture:!0}),window.addEventListener("popstate",a=>{l(location.href,a.state&&a.state.scrollPosition||0)}),window.addEventListener("hashchange",a=>{a.preventDefault()})),{route:t,go:s}}function jr(){const e=Ln(Qo);if(!e)throw new Error("useRouter() is called without provider.");return e}function vt(){return jr().route}function Qs(e,n,t=!1){let s=null;try{s=e.classList.contains("header-anchor")?e:document.querySelector(decodeURIComponent(n))}catch(o){console.warn(o)}if(s){let o=An.value.scrollOffset;typeof o=="string"&&(o=document.querySelector(o).getBoundingClientRect().bottom+24);const l=parseInt(window.getComputedStyle(s).paddingTop,10),a=window.scrollY+s.getBoundingClientRect().top-o+l;!t||Math.abs(a-window.scrollY)>window.innerHeight?window.scrollTo(0,a):window.scrollTo({left:0,top:a,behavior:"smooth"})}}const Or=De({name:"VitePressContent",setup(){const e=vt();return()=>Wt("div",{style:{position:"relative"}},[e.component?Wt(e.component):null])}}),$r=P("span",{class:"brand"},null,-1),Ur={class:"container"},Sr={class:"menu"},Kr=["href"],Hr=P("span",{class:"other"},[P("a",{class:"search"},[P("i",{class:"fa fa-search"})])],-1),Wr=De({__name:"Header",setup(e){const n=rn().site.value.base,t=[{icon:"fa-home",name:"\u9996\u9875",url:""},{icon:"fa-tag",name:"\u6807\u7B7E",url:"tags/"},{icon:"fa-leaf",name:"\u5173\u4E8E",url:"readme.html"}];return(s,o)=>($(),H("header",null,[$r,P("span",Ur,[P("span",Sr,[P("ul",null,[($(),H(le,null,on(t,l=>P("li",null,[P("a",{href:ye(n)+l.url},[P("span",null,[P("i",{class:an(["fa",l.icon])},null,2),Le(" "+ue(l.name),1)])],8,Kr)])),64))])])]),Hr]))}});const Gr=["data-text"],Vr=De({__name:"GlitchText",props:{text:null},setup(e){return(n,t)=>($(),H("div",{class:"glitch","data-text":e.text},ue(e.text),9,Gr))}});const Qr=P("div",{class:"wave1"},null,-1),Yr=P("div",{class:"wave2"},null,-1),Xr={class:"info"},Jr={class:"box"},Zr={class:"text"},ei=P("i",{class:"fa fa-quote-left"},null,-1),ni=P("i",{class:"fa fa-quote-right"},null,-1),ti={class:"contact"},si=["href"],oi=De({__name:"Banner",setup(e){const n=rn().theme.value,t=n.hello||"\u65E0\u5984p\u7684\u5C0F\u7AD9",s=n.motto||"\u7F51\u7EDC\u662F\u6781\u7AEF\u7684\u73B0\u5B9E",o=n.social||[],l=n.cover;return(a,r)=>($(),H("div",{class:"banner",style:Cn(`background-image: url(${ye(l)})`)},[Qr,Yr,P("div",Xr,[Z(Vr,{text:ye(t)},null,8,["text"]),P("span",Jr,[P("p",Zr,[ei,Le(" "+ue(ye(s))+" ",1),ni]),P("div",ti,[($(!0),H(le,null,on(ye(o),c=>($(),H("a",{href:c.url,"aria-label":"icon",target:"_blank"},[P("i",{class:an(["fab",c.icon])},null,2)],8,si))),256))])])])],4))}});const Oe=JSON.parse(`[{"title":"\u554A\u554A\u554A\u554A....","href":"posts/2024224.html","create":1704499200000,"update":1708759909274,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/dTTcmJH0.jpeg","excerpt":""},{"title":"\u554A\u554A\u554A\u554A....","href":"posts/lalala.html","create":1704499200000,"update":1714574130243,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/miku20240101.png","excerpt":""},{"title":"\u65B0\u5E74\u5566\uFF01\uFF01\uFF01","href":"posts/newyear.html","create":1704067200000,"update":1714574130242,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/miku20240101.png","excerpt":""},{"title":"R I P","href":"posts/RIP.html","create":1679788800000,"update":1708758454614,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":""},{"title":"\u6D4A\u97F3\u65E0\u5984","href":"posts/zyww.html","create":1678233600000,"update":1705991918003,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":""},{"title":"\u4F2A\u97F3\u52FF\u94ED","href":"posts/dont.html","create":1678147200000,"update":1705991917971,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":""},{"title":"\u53EF\u7B11","href":"posts/joke.html","create":1678060800000,"update":1714574130243,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":""},{"title":"\u53EF\u7B11","href":"posts/test.html","create":1678060800000,"update":1718441743540,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":"<h1 id=\\"\u6D4B\u8BD5\u4E86\u4E00\u4E0B-kimi\\" tabindex=\\"-1\\">\u6D4B\u8BD5\u4E86\u4E00\u4E0B kimi <a class=\\"header-anchor\\" href=\\"#\u6D4B\u8BD5\u4E86\u4E00\u4E0B-kimi\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>User: NameError: name '<strong>file</strong>' is not defined</p>\\n<p>Kimi: <code>NameError: name '__file__' is not defined</code> \u8FD9\u4E2A\u9519\u8BEF\u901A\u5E38\u53D1\u751F\u5728 Python \u811A\u672C\u4E2D\uFF0C\u5F53\u5C1D\u8BD5\u8BBF\u95EE\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u53D8\u91CF\u6216\u5C5E\u6027\u65F6\u3002\u5728 Python \u4E2D\uFF0C<code>__file__</code> \u662F\u4E00\u4E2A\u7279\u6B8A\u53D8\u91CF\uFF0C\u5B83\u5305\u542B\u4E86\u5F53\u524D\u811A\u672C\u7684\u8DEF\u5F84\u3002\u5982\u679C\u8FD9\u4E2A\u53D8\u91CF\u6CA1\u6709\u5B9A\u4E49\uFF0C\u53EF\u80FD\u662F\u56E0\u4E3A\u4EE5\u4E0B\u539F\u56E0\uFF1A</p>\\n<ol>\\n<li>\u4F60\u6B63\u5728\u8FD0\u884C\u7684\u662F\u4E00\u4E2A\u4EA4\u4E92\u5F0F Python \u4F1A\u8BDD\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u811A\u672C\u6587\u4EF6\u3002\u5728\u4EA4\u4E92\u5F0F\u4F1A\u8BDD\u4E2D\uFF0C<code>__file__</code> \u53D8\u91CF\u5E76\u4E0D\u5B58\u5728\u3002</li>\\n<li>\u4F60\u53EF\u80FD\u5728\u4E00\u4E2A\u6CA1\u6709\u6587\u4EF6\u540D\u7684\u811A\u672C\u4E2D\u8FD0\u884C\u4EE3\u7801\uFF0C\u6BD4\u5982\u4F7F\u7528 <code>python -c</code> \u547D\u4EE4\u76F4\u63A5\u6267\u884C\u4EE3\u7801\u3002</li>\\n</ol>\\n<p>\u5982\u679C\u4F60\u9700\u8981\u5728\u4EA4\u4E92\u5F0F\u4F1A\u8BDD\u4E2D\u4F7F\u7528 <code>__file__</code> \u53D8\u91CF\uFF0C\u4F60\u53EF\u4EE5\u624B\u52A8\u8BBE\u7F6E\u5B83\uFF0C\u4F8B\u5982\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">__file__ </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">your_script_name.py</span><span style=\\"color: #89DDFF\\">&#39;</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u4F46\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u53EA\u662F\u4E00\u4E2A\u6A21\u62DF\uFF0C\u5E76\u4E0D\u4F1A\u6539\u53D8\u5B9E\u9645\u7684\u811A\u672C\u8DEF\u5F84\u3002</p>\\n<p>\u5982\u679C\u4F60\u5728\u7F16\u5199\u811A\u672C\uFF0C\u786E\u4FDD\u4F60\u6B63\u5728\u8FD0\u884C\u7684\u662F\u811A\u672C\u6587\u4EF6\uFF0C\u800C\u4E0D\u662F\u5728\u4EA4\u4E92\u5F0F\u4F1A\u8BDD\u4E2D\u6267\u884C\u4EE3\u7801\u3002\u5982\u679C\u4F60\u786E\u5B9E\u9700\u8981\u5728\u4EA4\u4E92\u5F0F\u4F1A\u8BDD\u4E2D\u4F7F\u7528 <code>__file__</code>\uFF0C\u8003\u8651\u5C06\u4EE3\u7801\u79FB\u52A8\u5230\u4E00\u4E2A\u811A\u672C\u6587\u4EF6\u4E2D\uFF0C\u7136\u540E\u8FD0\u884C\u8BE5\u811A\u672C\u3002</p>\\n<p>User: len\uFF08\uFF09</p>\\n<p>Kimi: \u5728 Python \u4E2D\uFF0C<code>len()</code> \u51FD\u6570\u7528\u6765\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u7684\u957F\u5EA6\u3002\u6700\u5E38\u89C1\u7684\u7528\u6CD5\u662F\u83B7\u53D6\u5B57\u7B26\u4E32\u3001\u5217\u8868\u3001\u5143\u7EC4\u3001\u5B57\u5178\u7B49\u6570\u636E\u7ED3\u6784\u4E2D\u5143\u7D20\u7684\u6570\u91CF\u3002\u4EE5\u4E0B\u662F\u4E00\u4E9B\u793A\u4F8B\uFF1A</p>\\n<ul>\\n<li>\\n<p>\u83B7\u53D6\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">my_string </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">Hello, World!</span><span style=\\"color: #89DDFF\\">&quot;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">length </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">len</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">my_string</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8FD4\u56DE 13</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div></li>\\n<li>\\n<p>\u83B7\u53D6\u5217\u8868\u7684\u957F\u5EA6\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">my_list </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">3</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">4</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">5</span><span style=\\"color: #89DDFF\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">length </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">len</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">my_list</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8FD4\u56DE 5</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div></li>\\n<li>\\n<p>\u83B7\u53D6\u5143\u7EC4\u7684\u957F\u5EA6\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">my_tuple </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">3</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">length </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">len</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">my_tuple</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8FD4\u56DE 3</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div></li>\\n<li>\\n<p>\u83B7\u53D6\u5B57\u5178\u7684\u957F\u5EA6\uFF08\u5373\u952E\u503C\u5BF9\u7684\u6570\u91CF\uFF09\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">my_dict </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">a</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">b</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">c</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">3</span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">length </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">len</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">my_dict</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8FD4\u56DE 3</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div></li>\\n<li>\\n<p>\u83B7\u53D6\u96C6\u5408\u7684\u957F\u5EA6\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">my_set </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">3</span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">length </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">len</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">my_set</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8FD4\u56DE 3</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div></li>\\n</ul>\\n<p><code>len()</code> \u51FD\u6570\u662F Python \u5185\u7F6E\u7684\uFF0C\u56E0\u6B64\u65E0\u9700\u5BFC\u5165\u4EFB\u4F55\u6A21\u5757\u5373\u53EF\u4F7F\u7528\u3002\u5B83\u662F\u4E00\u4E2A\u975E\u5E38\u5FEB\u901F\u4E14\u5E38\u7528\u7684\u51FD\u6570\uFF0C\u7528\u4E8E\u83B7\u53D6\u6570\u636E\u7ED3\u6784\u7684\u5927\u5C0F\u3002</p>\\n<p>User: train_data = data[:int(n*0.9)]</p>\\n<p>Kimi: \u5728 Python \u4E2D\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u8868\u793A\u4ECE\u540D\u4E3A <code>data</code> \u7684\u5217\u8868\u6216\u6570\u7EC4\u4E2D\u9009\u62E9\u524D <code>n * 0.9</code> \u4E2A\u5143\u7D20\uFF0C\u5E76\u5C06\u8FD9\u4E9B\u5143\u7D20\u5B58\u50A8\u5728\u540D\u4E3A <code>train_data</code> \u7684\u65B0\u53D8\u91CF\u4E2D\u3002\u8FD9\u91CC <code>n</code> \u662F <code>data</code> \u7684\u957F\u5EA6\uFF0C<code>int()</code> \u51FD\u6570\u7528\u4E8E\u5C06\u6D6E\u70B9\u6570\u7ED3\u679C\u8F6C\u6362\u4E3A\u6574\u6570\uFF0C\u56E0\u4E3A\u5217\u8868\u5207\u7247\u9700\u8981\u6574\u6570\u7D22\u5F15\u3002</p>\\n<p>\u4F8B\u5982\uFF0C\u5982\u679C <code>data</code> \u662F\u4E00\u4E2A\u5305\u542B 100 \u4E2A\u5143\u7D20\u7684\u5217\u8868\uFF0C\u5E76\u4E14 <code>n</code> \u662F 100\uFF0C\u90A3\u4E48 <code>train_data</code> \u5C06\u5305\u542B\u524D 90 \u4E2A\u5143\u7D20\uFF0C\u56E0\u4E3A <code>int(100 * 0.9)</code> \u7B49\u4E8E 90\u3002</p>\\n<p>\u8FD9\u91CC\u662F\u4E00\u4E2A\u5177\u4F53\u7684\u793A\u4F8B\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">data </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #A6ACCD\\">i </span><span style=\\"color: #89DDFF\\">for</span><span style=\\"color: #A6ACCD\\"> i </span><span style=\\"color: #89DDFF\\">in</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">range</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F78C6C\\">100</span><span style=\\"color: #89DDFF\\">)]</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u521B\u5EFA\u4E00\u4E2A\u5305\u542B0\u523099\u7684\u5217\u8868</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">n </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">len</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">data</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u83B7\u53D6\u5217\u8868\u957F\u5EA6</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">train_data </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> data</span><span style=\\"color: #89DDFF\\">[:</span><span style=\\"color: #FFCB6B\\">int</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">n </span><span style=\\"color: #89DDFF\\">*</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">0.9</span><span style=\\"color: #89DDFF\\">)]</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u9009\u62E9\u524D90\u4E2A\u5143\u7D20</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A\u793A\u4F8B\u4E2D\uFF0C<code>train_data</code> \u5C06\u5305\u542B\u5217\u8868 <code>data</code> \u7684\u524D 90 \u4E2A\u5143\u7D20\u3002</p>\\n<p>\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C <code>n * 0.9</code> \u7684\u7ED3\u679C\u4E0D\u662F\u6574\u6570\uFF0C<code>int()</code> \u51FD\u6570\u5C06\u5411\u4E0B\u53D6\u6574\uFF0C\u8FD9\u610F\u5473\u7740\u53EF\u80FD\u4E0D\u4F1A\u7CBE\u786E\u5730\u9009\u62E9 <code>n * 0.9</code> \u4E2A\u5143\u7D20\uFF0C\u800C\u662F\u9009\u62E9\u5C11\u4E8E\u8FD9\u4E2A\u6570\u91CF\u7684\u6574\u6570\u4E2A\u5143\u7D20\u3002\u5982\u679C\u9700\u8981\u56DB\u820D\u4E94\u5165\u5230\u6700\u63A5\u8FD1\u7684\u6574\u6570\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>round()</code> \u51FD\u6570\u4EE3\u66FF <code>int()</code>\u3002</p>\\n<p>User: enc = tiktoken.get_encoding(&quot;gpt2&quot;)</p>\\n<p>Kimi: <code>enc = tiktoken.get_encoding(&quot;gpt2&quot;)</code> \u8FD9\u884C\u4EE3\u7801\u662F\u5728\u4F7F\u7528 <code>tiktoken</code> \u5E93\u6765\u83B7\u53D6\u4E0E &quot;gpt2&quot; \u6A21\u578B\u76F8\u5173\u7684\u7F16\u7801\u5668\u3002<code>tiktoken</code> \u662F\u4E00\u4E2A\u7528\u4E8E\u5904\u7406\u81EA\u7136\u8BED\u8A00\u7684\u5E93\uFF0C\u5B83\u63D0\u4F9B\u4E86\u591A\u79CD\u6A21\u578B\u7684\u7F16\u7801\u5668\uFF0C\u8FD9\u4E9B\u7F16\u7801\u5668\u53EF\u4EE5\u5C06\u6587\u672C\u8F6C\u6362\u4E3A\u6A21\u578B\u53EF\u4EE5\u7406\u89E3\u7684\u683C\u5F0F\uFF0C\u901A\u5E38\u662F\u4E00\u7CFB\u5217\u7684\u6570\u5B57\uFF08token IDs\uFF09\u3002</p>\\n<p>&quot;gpt2&quot; \u6307\u7684\u662F GPT-2 \u6A21\u578B\uFF0C\u8FD9\u662F\u7531 OpenAI \u5F00\u53D1\u7684\u4E00\u4E2A\u9884\u8BAD\u7EC3\u8BED\u8A00\u6A21\u578B\u3002\u5F53\u4F60\u8C03\u7528 <code>get_encoding</code> \u51FD\u6570\u5E76\u4F20\u5165 &quot;gpt2&quot; \u4F5C\u4E3A\u53C2\u6570\u65F6\uFF0C\u4F60\u5C06\u5F97\u5230\u4E00\u4E2A\u4E0E GPT-2 \u6A21\u578B\u517C\u5BB9\u7684\u7F16\u7801\u5668\u5BF9\u8C61\u3002</p>\\n<p>\u4EE5\u4E0B\u662F\u4F7F\u7528 <code>tiktoken</code> \u5E93\u8FDB\u884C\u7F16\u7801\u7684\u4E00\u4E2A\u7B80\u5355\u793A\u4F8B\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> tiktoken</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u83B7\u53D6 GPT-2 \u6A21\u578B\u7684\u7F16\u7801\u5668</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">enc </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> tiktoken</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">get_encoding</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">gpt2</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u8981\u7F16\u7801\u7684\u6587\u672C</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">text </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">Hello, how are you?</span><span style=\\"color: #89DDFF\\">&quot;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u4F7F\u7528\u7F16\u7801\u5668\u5C06\u6587\u672C\u8F6C\u6362\u4E3A token IDs</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">token_ids </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> enc</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">encode</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">text</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">print</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">token_ids</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A\u793A\u4F8B\u4E2D\uFF0C<code>enc.encode(text)</code> \u5C06\u6587\u672C &quot;Hello, how are you?&quot; \u8F6C\u6362\u4E3A\u4E00\u4E2A\u6574\u6570\u5217\u8868\uFF0C\u8FD9\u4E2A\u5217\u8868\u4EE3\u8868\u4E86\u6587\u672C\u5728 GPT-2 \u6A21\u578B\u4E2D\u7684 token \u8868\u793A\u3002</p>\\n<p>\u8BF7\u6CE8\u610F\uFF0C\u8981\u8FD0\u884C\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u4F60\u9700\u8981\u5148\u5B89\u88C5 <code>tiktoken</code> \u5E93\u3002\u53EF\u4EE5\u4F7F\u7528 pip \u6765\u5B89\u88C5\uFF1A</p>\\n<div class=\\"language-sh\\"><button class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">pip install tiktoken</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5982\u679C\u4F60\u6CA1\u6709\u5B89\u88C5 <code>tiktoken</code> \u6216\u8005\u4F60\u7684\u4EE3\u7801\u73AF\u5883\u4E2D\u6CA1\u6709\u8FD9\u4E2A\u5E93\uFF0C\u5C1D\u8BD5\u8FD0\u884C <code>enc = tiktoken.get_encoding(&quot;gpt2&quot;)</code> \u5C06\u4F1A\u5BFC\u81F4 <code>ImportError</code> \u6216 <code>AttributeError</code>\u3002</p>\\n<p>User: train_ids = enc.encode_ordinary(train_data)\\nval_ids = enc.encode_ordinary(val_data)\\nprint(f&quot;train has {len(train_ids):,} tokens&quot;)\\nprint(f&quot;val has {len(val_ids):,} tokens&quot;)</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F\u5728\u4F7F\u7528 <code>tiktoken</code> \u5E93\u7684\u7F16\u7801\u5668\u6765\u5C06\u6587\u672C\u6570\u636E\u8F6C\u6362\u4E3A\u6A21\u578B\u53EF\u4EE5\u7406\u89E3\u7684 token IDs\u3002\u8FD9\u91CC <code>train_data</code> \u548C <code>val_data</code> \u5E94\u8BE5\u662F\u6587\u672C\u6570\u636E\u7684\u5217\u8868\uFF0C<code>enc</code> \u662F\u4E4B\u524D\u901A\u8FC7 <code>tiktoken.get_encoding(&quot;gpt2&quot;)</code> \u83B7\u53D6\u7684\u7F16\u7801\u5668\u5BF9\u8C61\u3002</p>\\n<p><code>enc.encode_ordinary</code> \u51FD\u6570\u5C06\u6587\u672C\u6570\u636E\u8F6C\u6362\u4E3A token IDs\uFF0C\u7136\u540E <code>train_ids</code> \u548C <code>val_ids</code> \u5206\u522B\u5B58\u50A8\u4E86\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u7684 token IDs\u3002</p>\\n<p>\u4EE5\u4E0B\u662F\u8FD9\u6BB5\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><code>train_ids = enc.encode_ordinary(train_data)</code>\uFF1A\u8FD9\u884C\u4EE3\u7801\u5C06\u8BAD\u7EC3\u6570\u636E <code>train_data</code> \u8F6C\u6362\u4E3A token IDs\uFF0C\u5E76\u5C06\u7ED3\u679C\u5B58\u50A8\u5728 <code>train_ids</code> \u4E2D\u3002<code>encode_ordinary</code> \u65B9\u6CD5\u901A\u5E38\u8FD4\u56DE\u4E00\u4E2A\u5217\u8868\uFF0C\u5176\u4E2D\u6BCF\u4E2A\u5143\u7D20\u90FD\u662F\u4E00\u4E2A\u6574\u6570\u5217\u8868\uFF0C\u4EE3\u8868\u4E00\u4E2A\u6587\u672C\u5E8F\u5217\u7684 token IDs\u3002</p>\\n</li>\\n<li>\\n<p><code>val_ids = enc.encode_ordinary(val_data)</code>\uFF1A\u8FD9\u884C\u4EE3\u7801\u5C06\u9A8C\u8BC1\u6570\u636E <code>val_data</code> \u8F6C\u6362\u4E3A token IDs\uFF0C\u5E76\u5C06\u7ED3\u679C\u5B58\u50A8\u5728 <code>val_ids</code> \u4E2D\u3002</p>\\n</li>\\n<li>\\n<p><code>print(f&quot;train has {len(train_ids):,} tokens&quot;)</code>\uFF1A\u8FD9\u884C\u4EE3\u7801\u8BA1\u7B97\u8BAD\u7EC3\u6570\u636E\u7684\u603B token \u6570\u91CF\uFF0C\u5E76\u6253\u5370\u51FA\u6765\u3002<code>len(train_ids)</code> \u8BA1\u7B97\u7684\u662F\u5217\u8868\u7684\u957F\u5EA6\uFF0C\u5373\u8BAD\u7EC3\u96C6\u4E2D\u6240\u6709\u6587\u672C\u5E8F\u5217\u7684 token IDs \u6570\u91CF\u4E4B\u548C\u3002\u683C\u5F0F\u5316\u5B57\u7B26\u4E32 <code>{len(train_ids):,}</code> \u7528\u4E8E\u6DFB\u52A0\u5343\u4F4D\u5206\u9694\u7B26\uFF0C\u4F7F\u6570\u5B57\u66F4\u6613\u4E8E\u9605\u8BFB\u3002</p>\\n</li>\\n<li>\\n<p><code>print(f&quot;val has {len(val_ids):,} tokens&quot;)</code>\uFF1A\u8FD9\u884C\u4EE3\u7801\u8BA1\u7B97\u9A8C\u8BC1\u6570\u636E\u7684\u603B token \u6570\u91CF\uFF0C\u5E76\u6253\u5370\u51FA\u6765\u3002\u540C\u6837\uFF0C<code>len(val_ids)</code> \u8BA1\u7B97\u7684\u662F\u9A8C\u8BC1\u96C6\u4E2D\u6240\u6709\u6587\u672C\u5E8F\u5217\u7684 token IDs \u6570\u91CF\u4E4B\u548C\uFF0C\u683C\u5F0F\u5316\u5B57\u7B26\u4E32\u7528\u4E8E\u6DFB\u52A0\u5343\u4F4D\u5206\u9694\u7B26\u3002</p>\\n</li>\\n</ol>\\n<p>\u8BF7\u6CE8\u610F\uFF0C<code>encode_ordinary</code> \u65B9\u6CD5\u7684\u5177\u4F53\u884C\u4E3A\u53EF\u80FD\u53D6\u51B3\u4E8E <code>tiktoken</code> \u5E93\u7684\u7248\u672C\u548C\u4F7F\u7528\u7684\u6A21\u578B\u3002\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u5B83\u53EF\u80FD\u8FD4\u56DE\u4E00\u4E2A\u4E8C\u7EF4\u5217\u8868\uFF0C\u5176\u4E2D\u6BCF\u4E2A\u5185\u90E8\u5217\u8868\u4EE3\u8868\u4E00\u4E2A\u6587\u672C\u5E8F\u5217\u7684 token IDs\u3002</p>\\n<p>\u5982\u679C\u4F60\u7684\u73AF\u5883\u4E2D\u6CA1\u6709\u5B89\u88C5 <code>tiktoken</code> \u5E93\uFF0C\u4F60\u9700\u8981\u5148\u5B89\u88C5\u5B83\uFF0C\u7136\u540E\u624D\u80FD\u8FD0\u884C\u8FD9\u6BB5\u4EE3\u7801\u3002\u5982\u679C\u4F60\u5DF2\u7ECF\u5B89\u88C5\u4E86 <code>tiktoken</code> \u5E93\uFF0C\u4F46\u9047\u5230\u4EFB\u4F55\u95EE\u9898\uFF0C\u8BF7\u786E\u4FDD\u4F60\u7684 <code>train_data</code> \u548C <code>val_data</code> \u662F\u6B63\u786E\u7684\u6587\u672C\u6570\u636E\u5217\u8868\uFF0C\u5E76\u4E14 <code>enc</code> \u662F\u6709\u6548\u7684\u7F16\u7801\u5668\u5BF9\u8C61\u3002</p>\\n<p>User: train_ids = np.array(train_ids, dtype=np.uint16)\\nval_ids = np.array(val_ids, dtype=np.uint16)\\ntrain_ids.tofile(os.path.join(os.path.dirname(<strong>file</strong>), 'train.bin'))\\nval_ids.tofile(os.path.join(os.path.dirname(<strong>file</strong>), 'val.bin'))</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F\u5C06\u7F16\u7801\u540E\u7684\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u7684 token IDs \u8F6C\u6362\u4E3A NumPy \u6570\u7EC4\uFF0C\u5E76\u4FDD\u5B58\u5230\u4E8C\u8FDB\u5236\u6587\u4EF6\u4E2D\u3002\u4E0B\u9762\u662F\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><code>train_ids = np.array(train_ids, dtype=np.uint16)</code> \u548C <code>val_ids = np.array(val_ids, dtype=np.uint16)</code>\uFF1A\u8FD9\u4E24\u884C\u4EE3\u7801\u5C06 <code>train_ids</code> \u548C <code>val_ids</code> \uFF08\u5B83\u4EEC\u662F\u7F16\u7801\u540E\u7684 token IDs \u5217\u8868\uFF09\u8F6C\u6362\u4E3A NumPy \u6570\u7EC4\u3002<code>dtype=np.uint16</code> \u6307\u5B9A\u4E86\u6570\u7EC4\u7684\u6570\u636E\u7C7B\u578B\u4E3A\u65E0\u7B26\u53F7 16 \u4F4D\u6574\u6570\uFF0C\u8FD9\u901A\u5E38\u7528\u4E8E\u5B58\u50A8 token IDs\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u901A\u5E38\u662F\u975E\u8D1F\u6574\u6570\u3002</p>\\n</li>\\n<li>\\n<p><code>train_ids.tofile(os.path.join(os.path.dirname(__file__), 'train.bin'))</code> \u548C <code>val_ids.tofile(os.path.join(os.path.dirname(__file__), 'val.bin'))</code>\uFF1A\u8FD9\u4E24\u884C\u4EE3\u7801\u5C06\u8F6C\u6362\u540E\u7684 NumPy \u6570\u7EC4\u4FDD\u5B58\u4E3A\u4E8C\u8FDB\u5236\u6587\u4EF6\u3002<code>os.path.join</code> \u7528\u4E8E\u8FDE\u63A5\u8DEF\u5F84\uFF0C<code>os.path.dirname(__file__)</code> \u83B7\u53D6\u5F53\u524D\u811A\u672C\u6587\u4EF6\u7684\u76EE\u5F55\u8DEF\u5F84\u3002\u7136\u540E\uFF0C\u5B83\u5C06\u6587\u4EF6\u540D 'train.bin' \u548C 'val.bin' \u5206\u522B\u9644\u52A0\u5230\u8FD9\u4E2A\u8DEF\u5F84\u4E0A\uFF0C\u4F5C\u4E3A\u8F93\u51FA\u6587\u4EF6\u7684\u5B8C\u6574\u8DEF\u5F84\u3002</p>\\n<ul>\\n<li><code>'train.bin'</code> \u662F\u8BAD\u7EC3\u96C6 token IDs \u7684\u4E8C\u8FDB\u5236\u6587\u4EF6\u540D\u3002</li>\\n<li><code>'val.bin'</code> \u662F\u9A8C\u8BC1\u96C6 token IDs \u7684\u4E8C\u8FDB\u5236\u6587\u4EF6\u540D\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p><code>tofile</code> \u65B9\u6CD5\u7528\u4E8E\u5C06 NumPy \u6570\u7EC4\u76F4\u63A5\u5199\u5165\u5230\u4E00\u4E2A\u4E8C\u8FDB\u5236\u6587\u4EF6\u4E2D\u3002\u5982\u679C\u6587\u4EF6\u5DF2\u5B58\u5728\uFF0C\u5B83\u4F1A\u88AB\u8986\u76D6\uFF1B\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u5B83\u4F1A\u88AB\u521B\u5EFA\u3002</p>\\n<p>\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5047\u8BBE\uFF1A</p>\\n<ul>\\n<li>\u4F60\u5DF2\u7ECF\u6709\u4E00\u4E2A\u540D\u4E3A <code>__file__</code> \u7684\u53D8\u91CF\uFF0C\u5B83\u901A\u5E38\u5728 Python \u811A\u672C\u4E2D\u81EA\u52A8\u5B9A\u4E49\uFF0C\u8868\u793A\u5F53\u524D\u811A\u672C\u7684\u6587\u4EF6\u8DEF\u5F84\u3002\u5982\u679C\u4F60\u5728\u4EA4\u4E92\u5F0F\u73AF\u5883\uFF08\u5982 Jupyter Notebook \u6216 Python shell\uFF09\u4E2D\u8FD0\u884C\u8FD9\u6BB5\u4EE3\u7801\uFF0C<code>__file__</code> \u53EF\u80FD\u672A\u5B9A\u4E49\uFF0C\u4F60\u9700\u8981\u76F8\u5E94\u5730\u8C03\u6574\u4EE3\u7801\u3002</li>\\n<li><code>train_ids</code> \u548C <code>val_ids</code> \u662F\u4E4B\u524D\u901A\u8FC7 <code>enc.encode_ordinary</code> \u5F97\u5230\u7684 token IDs \u5217\u8868\u3002</li>\\n</ul>\\n<p>\u6B64\u5916\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u4F7F\u7528\u4E86 NumPy \u5E93\uFF0C\u5982\u679C\u4F60\u7684\u73AF\u5883\u4E2D\u6CA1\u6709\u5B89\u88C5 NumPy\uFF0C\u4F60\u9700\u8981\u5148\u5B89\u88C5\u5B83\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4\uFF1A</p>\\n<div class=\\"language-sh\\"><button class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">pip install numpy</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5982\u679C\u4F60\u5DF2\u7ECF\u5B89\u88C5\u4E86 NumPy \u5E76\u4E14 <code>__file__</code> \u53D8\u91CF\u5728\u4F60\u7684\u4EE3\u7801\u73AF\u5883\u4E2D\u662F\u53EF\u7528\u7684\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5E94\u8BE5\u80FD\u591F\u6B63\u5E38\u5DE5\u4F5C\u3002\u5982\u679C\u4F60\u5728\u4EA4\u4E92\u5F0F\u73AF\u5883\u4E2D\u5DE5\u4F5C\uFF0C\u4F60\u53EF\u80FD\u9700\u8981\u6307\u5B9A\u4E00\u4E2A\u5177\u4F53\u7684\u6587\u4EF6\u8DEF\u5F84\u800C\u4E0D\u662F\u4F7F\u7528 <code>__file__</code>\u3002</p>\\n<p>User: import os\\nimport requests\\nimport tiktoken\\nimport numpy as np</p>\\n<p>Kimi: \u5F88\u597D\uFF0C\u4F60\u5DF2\u7ECF\u5217\u51FA\u4E86\u4E00\u4E9B Python \u4E2D\u5E38\u7528\u7684\u5E93\uFF0C\u8FD9\u4E9B\u5E93\u5728\u6570\u636E\u79D1\u5B66\u3001\u673A\u5668\u5B66\u4E60\u548C\u7F51\u7EDC\u8BF7\u6C42\u7B49\u9886\u57DF\u975E\u5E38\u6709\u7528\u3002\u4E0B\u9762\u662F\u6BCF\u4E2A\u5E93\u7684\u7B80\u8981\u8BF4\u660E\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>os</strong>: \u8FD9\u4E2A\u5E93\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u4FBF\u7684\u65B9\u5F0F\u6765\u4F7F\u7528\u64CD\u4F5C\u7CFB\u7EDF\u4F9D\u8D56\u7684\u529F\u80FD\u3002\u5B83\u53EF\u4EE5\u7528\u6765\u6267\u884C\u5982\u6587\u4EF6\u8DEF\u5F84\u64CD\u4F5C\u3001\u73AF\u5883\u53D8\u91CF\u8BBF\u95EE\u7B49\u4EFB\u52A1\u3002</p>\\n</li>\\n<li>\\n<p><strong>requests</strong>: \u8FD9\u662F\u4E00\u4E2A\u7528\u4E8E\u53D1\u9001 HTTP \u8BF7\u6C42\u7684\u5E93\uFF0C\u5B83\u975E\u5E38\u5F3A\u5927\u4E14\u6613\u4E8E\u4F7F\u7528\uFF0C\u53EF\u4EE5\u7528\u6765\u4ECE\u7F51\u9875\u83B7\u53D6\u6570\u636E\u3002</p>\\n</li>\\n<li>\\n<p><strong>tiktoken</strong>: \u8FD9\u662F\u4E00\u4E2A\u7528\u4E8E\u81EA\u7136\u8BED\u8A00\u5904\u7406\u7684\u5E93\uFF0C\u5B83\u63D0\u4F9B\u4E86\u591A\u79CD\u6A21\u578B\u7684\u7F16\u7801\u5668\u548C\u89E3\u7801\u5668\uFF0C\u7528\u4E8E\u5C06\u6587\u672C\u8F6C\u6362\u4E3A\u6A21\u578B\u53EF\u4EE5\u7406\u89E3\u7684\u683C\u5F0F\u3002</p>\\n</li>\\n<li>\\n<p><strong>numpy</strong>: \u8FD9\u662F\u4E00\u4E2A\u7528\u4E8E\u79D1\u5B66\u8BA1\u7B97\u7684\u5E93\uFF0C\u5B83\u63D0\u4F9B\u4E86\u591A\u7EF4\u6570\u7EC4\u5BF9\u8C61\u3001\u6D3E\u751F\u5BF9\u8C61\uFF08\u5982\u63A9\u7801\u6570\u7EC4\u548C\u77E9\u9635\uFF09\u4EE5\u53CA\u7528\u4E8E\u5FEB\u901F\u64CD\u4F5C\u6570\u7EC4\u7684\u5404\u79CD\u4F8B\u7A0B\uFF0C\u5305\u62EC\u6570\u5B66\u3001\u903B\u8F91\u3001\u5F62\u72B6\u64CD\u4F5C\u3001\u6392\u5E8F\u3001\u9009\u62E9\u3001I/O\u3001\u79BB\u6563\u5085\u7ACB\u53F6\u53D8\u6362\u3001\u57FA\u672C\u7EBF\u6027\u4EE3\u6570\u3001\u57FA\u672C\u7EDF\u8BA1\u8FD0\u7B97\u3001\u968F\u673A\u6A21\u62DF\u7B49\u7B49\u3002</p>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E9B\u5E93\u5728 Python \u4E2D\u975E\u5E38\u6D41\u884C\uFF0C\u5E76\u4E14\u5B83\u4EEC\u4E4B\u95F4\u53EF\u4EE5\u534F\u540C\u5DE5\u4F5C\uFF0C\u4EE5\u5B8C\u6210\u590D\u6742\u7684\u4EFB\u52A1\u3002\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>requests</code> \u83B7\u53D6\u7F51\u7EDC\u6570\u636E\uFF0C\u7136\u540E\u4F7F\u7528 <code>numpy</code> \u8FDB\u884C\u6570\u636E\u5904\u7406\uFF0C\u63A5\u7740\u4F7F\u7528 <code>tiktoken</code> \u5BF9\u6570\u636E\u8FDB\u884C\u7F16\u7801\uFF0C\u6700\u540E\u4F7F\u7528 <code>os</code> \u6765\u5904\u7406\u6587\u4EF6\u8DEF\u5F84\u548C\u4FDD\u5B58\u6570\u636E\u3002</p>\\n<p>\u5982\u679C\u4F60\u9700\u8981\u8FDB\u4E00\u6B65\u7684\u5E2E\u52A9\uFF0C\u4F8B\u5982\u5982\u4F55\u4F7F\u7528\u8FD9\u4E9B\u5E93\u4E2D\u7684\u7279\u5B9A\u529F\u80FD\uFF0C\u6216\u8005\u5982\u4F55\u5C06\u5B83\u4EEC\u7ED3\u5408\u4F7F\u7528\u6765\u89E3\u51B3\u7279\u5B9A\u7684\u95EE\u9898\uFF0C\u8BF7\u968F\u65F6\u63D0\u95EE\u3002</p>\\n<p>User: import torch\\nimport torch.nn as nn\\nimport math\\nfrom torch.nn import functional as F\\nimport inspect</p>\\n<p>Kimi: \u4F60\u5217\u51FA\u7684\u8FD9\u4E9B Python \u5E93\u548C\u6A21\u5757\u4E3B\u8981\u7528\u4E8E\u6DF1\u5EA6\u5B66\u4E60\u9886\u57DF\uFF0C\u7279\u522B\u662F\u4F7F\u7528 PyTorch \u6846\u67B6\u3002\u4E0B\u9762\u662F\u6BCF\u4E2A\u7EC4\u4EF6\u7684\u7B80\u8981\u8BF4\u660E\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>torch</strong>: \u8FD9\u662F PyTorch \u7684\u6838\u5FC3\u5E93\uFF0C\u63D0\u4F9B\u4E86\u5F20\u91CF\uFF08Tensor\uFF09\u5BF9\u8C61\u3001\u81EA\u52A8\u5FAE\u5206\u7CFB\u7EDF autograd\u3001\u4EE5\u53CA\u7528\u4E8E\u6784\u5EFA\u548C\u8BAD\u7EC3\u795E\u7ECF\u7F51\u7EDC\u7684\u5DE5\u5177\u3002</p>\\n</li>\\n<li>\\n<p><strong>torch.nn</strong>: \u8FD9\u4E2A\u6A21\u5757\u5305\u542B\u4E86\u6784\u5EFA\u795E\u7ECF\u7F51\u7EDC\u6240\u9700\u7684\u6240\u6709\u57FA\u7840\u6784\u4EF6\uFF0C\u4F8B\u5982\u5C42\uFF08Layer\uFF09\u3001\u635F\u5931\u51FD\u6570\u3001\u4F18\u5316\u5668\u7B49\u3002</p>\\n</li>\\n<li>\\n<p><strong>math</strong>: \u8FD9\u662F\u4E00\u4E2A Python \u6807\u51C6\u5E93\uFF0C\u63D0\u4F9B\u4E86\u8BB8\u591A\u6570\u5B66\u8FD0\u7B97\u51FD\u6570\uFF0C\u5982\u4E09\u89D2\u51FD\u6570\u3001\u6307\u6570\u3001\u5BF9\u6570\u7B49\u3002</p>\\n</li>\\n<li>\\n<p><strong>torch.nn.functional</strong>: \u8FD9\u4E2A\u6A21\u5757\u63D0\u4F9B\u4E86\u4E00\u4E9B\u51FD\u6570\u5F0F\u7684\u63A5\u53E3\uFF0C\u7528\u4E8E\u5728\u795E\u7ECF\u7F51\u7EDC\u6784\u5EFA\u4E2D\u8FDB\u884C\u64CD\u4F5C\uFF0C\u4F8B\u5982\u6FC0\u6D3B\u51FD\u6570\uFF08ReLU\uFF09\u3001\u635F\u5931\u51FD\u6570\uFF08cross_entropy\uFF09\u3001\u5377\u79EF\u51FD\u6570\uFF08conv2d\uFF09\u7B49\u3002</p>\\n</li>\\n<li>\\n<p><strong>inspect</strong>: \u8FD9\u662F Python \u7684\u4E00\u4E2A\u6807\u51C6\u5E93\uFF0C\u7528\u4E8E\u83B7\u53D6\u5B9E\u65F6\u7684\u5BF9\u8C61\u4FE1\u606F\uFF0C\u5305\u62EC\u6A21\u5757\u3001\u7C7B\u3001\u65B9\u6CD5\u3001\u51FD\u6570\u3001\u8FFD\u8E2A\u6808\u7B49\u3002\u5728\u6DF1\u5EA6\u5B66\u4E60\u4E2D\uFF0C<code>inspect</code> \u53EF\u4EE5\u7528\u6765\u68C0\u67E5\u51FD\u6570\u7684\u53C2\u6570\u7B49\u3002</p>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E9B\u7EC4\u4EF6\u5171\u540C\u6784\u6210\u4E86\u4F7F\u7528 PyTorch \u8FDB\u884C\u6DF1\u5EA6\u5B66\u4E60\u7684\u57FA\u7840\u3002\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>torch</code> \u6765\u521B\u5EFA\u548C\u64CD\u4F5C\u5F20\u91CF\uFF0C\u4F7F\u7528 <code>torch.nn</code> \u6765\u5B9A\u4E49\u6A21\u578B\u7684\u5C42\u548C\u7F51\u7EDC\u7ED3\u6784\uFF0C\u4F7F\u7528 <code>torch.nn.functional</code> \u6765\u8FDB\u884C\u524D\u5411\u4F20\u64AD\u548C\u8BA1\u7B97\u635F\u5931\uFF0C\u4F7F\u7528 <code>math</code> \u6765\u8FDB\u884C\u4E00\u4E9B\u6570\u5B66\u8FD0\u7B97\uFF0C\u4EE5\u53CA\u4F7F\u7528 <code>inspect</code> \u6765\u68C0\u67E5\u4EE3\u7801\u6216\u8C03\u8BD5\u3002</p>\\n<p>\u5982\u679C\u4F60\u9700\u8981\u5177\u4F53\u7684\u5E2E\u52A9\uFF0C\u6BD4\u5982\u5982\u4F55\u5728 PyTorch \u4E2D\u5B9A\u4E49\u4E00\u4E2A\u6A21\u578B\uFF0C\u6216\u8005\u5982\u4F55\u4F7F\u7528\u8FD9\u4E9B\u6A21\u5757\u6765\u6267\u884C\u7279\u5B9A\u7684\u64CD\u4F5C\uFF0C\u8BF7\u968F\u65F6\u63D0\u95EE\u3002\u5982\u679C\u4F60\u8FD8\u6CA1\u6709\u5B89\u88C5 PyTorch\uFF0C\u53EF\u4EE5\u4F7F\u7528 pip \u6765\u5B89\u88C5\uFF1A</p>\\n<div class=\\"language-sh\\"><button class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">pip install torch</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u8BF7\u6CE8\u610F\uFF0CPyTorch \u7684\u5B89\u88C5\u53EF\u80FD\u4F9D\u8D56\u4E8E\u4F60\u7684\u7CFB\u7EDF\u914D\u7F6E\u548C CUDA \u7248\u672C\uFF0C\u6240\u4EE5\u5B89\u88C5\u547D\u4EE4\u53EF\u80FD\u4F1A\u6709\u6240\u4E0D\u540C\u3002\u4F60\u53EF\u4EE5\u8BBF\u95EE PyTorch \u7684\u5B98\u65B9\u7F51\u7AD9\u6765\u83B7\u53D6\u9002\u5408\u4F60\u7CFB\u7EDF\u7684\u5B89\u88C5\u6307\u4EE4\u3002</p>\\n<p>User: # \u6A21\u578B\u53C2\u6570\\nfrom dataclasses import dataclass\\n@dataclass\\nclass Model_args:\\nblock_size: int = 1024 # \u4F20\u5165\u7684\u6700\u5927\u5927\u5C0F\\nvocab_size: int = 50304 # GPT-2 vocab_size of 50257, padded up to nearest multiple of 64 for efficiency\\nn_layer: int = 12\\nn_head: int = 12\\nn_embed: int = 768\\ndropout: float = 0.0 # \u9ED8\u8BA4\u4E0D dropout\\nbias: bool = True # True: bias in Linears and LayerNorms, like GPT-2. False: a bit better and faster</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>Model_args</code> \u7684\u6570\u636E\u7C7B\uFF0C\u7528\u4E8E\u5B58\u50A8\u795E\u7ECF\u7F51\u7EDC\u6A21\u578B\u7684\u53C2\u6570\u3002\u6570\u636E\u7C7B\u662F Python 3.7 \u53CA\u4EE5\u540E\u7248\u672C\u4E2D\u5F15\u5165\u7684\u4E00\u79CD\u65B0\u7684\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7279\u6027\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u4FBF\u7684\u65B9\u5F0F\u6765\u5B9A\u4E49\u53EA\u5305\u542B\u6570\u636E\u7684\u7C7B\u3002</p>\\n<p>\u4E0B\u9762\u662F <code>Model_args</code> \u6570\u636E\u7C7B\u4E2D\u5404\u4E2A\u5B57\u6BB5\u7684\u89E3\u91CA\uFF1A</p>\\n<ul>\\n<li>\\n<p><code>block_size: int = 1024</code>: \u8FD9\u4E2A\u53C2\u6570\u6307\u5B9A\u4E86\u6A21\u578B\u4E00\u6B21\u5904\u7406\u7684\u6700\u5927\u8F93\u5165\u5927\u5C0F\u3002\u5728\u67D0\u4E9B\u6A21\u578B\u4E2D\uFF0C\u5982 Transformer \u6A21\u578B\uFF0C\u8FD9\u4E2A\u503C\u901A\u5E38\u5BF9\u5E94\u4E8E\u5E8F\u5217\u7684\u6700\u5927\u957F\u5EA6\u3002</p>\\n</li>\\n<li>\\n<p><code>vocab_size: int = 50304</code>: \u8BCD\u6C47\u8868\u7684\u5927\u5C0F\uFF0C\u5373\u6A21\u578B\u80FD\u591F\u7406\u89E3\u7684\u4E0D\u540C\u8BCD\u6C47\u7684\u603B\u6570\u3002\u8FD9\u91CC\u63D0\u5230\u7684 &quot;GPT-2 vocab_size of 50257, padded up to nearest multiple of 64 for efficiency&quot; \u610F\u5473\u7740\u539F\u59CB\u7684 GPT-2 \u6A21\u578B\u6709 50257 \u4E2A\u8BCD\u6C47\uFF0C\u4F46\u4E3A\u4E86\u8BA1\u7B97\u6548\u7387\uFF0C\u8FD9\u91CC\u5C06\u5176\u6269\u5C55\u5230\u6700\u63A5\u8FD1\u7684 64 \u7684\u500D\u6570\uFF0C\u5373 50304\u3002</p>\\n</li>\\n<li>\\n<p><code>n_layer: int = 12</code>: \u6A21\u578B\u4E2D\u7684\u5C42\u6570\u3002\u5728 Transformer \u67B6\u6784\u4E2D\uFF0C\u8FD9\u901A\u5E38\u6307\u7684\u662F\u6CE8\u610F\u529B\u5C42\u7684\u6570\u91CF\u3002</p>\\n</li>\\n<li>\\n<p><code>n_head: int = 12</code>: \u6BCF\u4E2A\u6CE8\u610F\u529B\u5C42\u4E2D\u7684\u5934\u6570\u3002\u591A\u5934\u6CE8\u610F\u529B\u5141\u8BB8\u6A21\u578B\u540C\u65F6\u4ECE\u4E0D\u540C\u7684\u8868\u793A\u5B50\u7A7A\u95F4\u4E2D\u5B66\u4E60\u3002</p>\\n</li>\\n<li>\\n<p><code>n_embed: int = 768</code>: \u5D4C\u5165\u5C42\u7684\u7EF4\u5EA6\u5927\u5C0F\u3002\u5728 Transformer \u6A21\u578B\u4E2D\uFF0C\u8FD9\u901A\u5E38\u662F\u6A21\u578B\u9690\u85CF\u5C42\u7684\u7EF4\u5EA6\u3002</p>\\n</li>\\n<li>\\n<p><code>dropout: float = 0.0</code>: dropout \u7387\uFF0C\u7528\u4E8E\u6B63\u5219\u5316\u4EE5\u9632\u6B62\u8FC7\u62DF\u5408\u3002\u8FD9\u91CC\u7684\u9ED8\u8BA4\u503C\u662F 0.0\uFF0C\u610F\u5473\u7740\u4E0D\u4F7F\u7528 dropout\u3002</p>\\n</li>\\n<li>\\n<p><code>bias: bool = True</code>: \u662F\u5426\u5728\u6A21\u578B\u7684\u7EBF\u6027\u5C42\u548C\u5C42\u5F52\u4E00\u5316\uFF08LayerNorm\uFF09\u4E2D\u4F7F\u7528\u504F\u7F6E\u3002GPT-2 \u6A21\u578B\u4E2D\u4F7F\u7528\u4E86\u504F\u7F6E\uFF0C\u4F46\u6709\u65F6\u5019\u53BB\u6389\u504F\u7F6E\u53EF\u4EE5\u63D0\u9AD8\u6027\u80FD\u5E76\u52A0\u5FEB\u8BA1\u7B97\u901F\u5EA6\u3002</p>\\n</li>\\n</ul>\\n<p>\u4F7F\u7528 <code>@dataclass</code> \u88C5\u9970\u5668\u53EF\u4EE5\u81EA\u52A8\u4E3A\u7C7B\u751F\u6210\u7279\u6B8A\u7684\u65B9\u6CD5\uFF0C\u5982 <code>__init__()</code> \u548C <code>__repr__()</code>\uFF0C\u8FD9\u6837\u4F60\u5C31\u4E0D\u9700\u8981\u624B\u52A8\u7F16\u5199\u8FD9\u4E9B\u65B9\u6CD5\u3002\u8FD9\u4F7F\u5F97\u5B9A\u4E49\u53EA\u5305\u542B\u6570\u636E\u7684\u7C7B\u53D8\u5F97\u66F4\u52A0\u7B80\u6D01\u548C\u65B9\u4FBF\u3002</p>\\n<p>\u5982\u679C\u4F60\u60F3\u4F7F\u7528\u8FD9\u4E2A <code>Model_args</code> \u7C7B\uFF0C\u53EF\u4EE5\u8FD9\u6837\u521B\u5EFA\u4E00\u4E2A\u5B9E\u4F8B\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">model_args </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">Model_args</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #A6ACCD\\">block_size</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F78C6C\\">512</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #A6ACCD\\">vocab_size</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F78C6C\\">10000</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u521B\u5EFA\u4E86\u4E00\u4E2A <code>Model_args</code> \u7684\u5B9E\u4F8B\uFF0C\u5176\u4E2D <code>block_size</code> \u548C <code>vocab_size</code> \u88AB\u8D4B\u4E88\u4E86\u65B0\u7684\u503C\uFF0C\u800C\u5176\u4ED6\u53C2\u6570\u5219\u4FDD\u6301\u4E86\u9ED8\u8BA4\u503C\u3002</p>\\n<p>User: \u6CE8\u610F\u529B\u5C42</p>\\n<p>Kimi: \u6CE8\u610F\u529B\u5C42\u662F\u6DF1\u5EA6\u5B66\u4E60\u4E2D\u7684\u4E00\u79CD\u673A\u5236\uFF0C\u7279\u522B\u662F\u5728\u5E8F\u5217\u5904\u7406\u6A21\u578B\u5982 Transformer \u4E2D\u53D1\u6325\u7740\u6838\u5FC3\u4F5C\u7528\u3002\u6CE8\u610F\u529B\u5C42\u5141\u8BB8\u6A21\u578B\u5728\u5904\u7406\u5E8F\u5217\u65F6\uFF0C\u80FD\u591F\u805A\u7126\u4E8E\u5E8F\u5217\u4E2D\u4E0E\u5F53\u524D\u5904\u7406\u4F4D\u7F6E\u6700\u76F8\u5173\u7684\u90E8\u5206\u3002\u8FD9\u79CD\u673A\u5236\u4F7F\u5F97\u6A21\u578B\u80FD\u591F\u6355\u6349\u5230\u957F\u8DDD\u79BB\u7684\u4F9D\u8D56\u5173\u7CFB\uFF0C\u5E76\u4E14\u63D0\u9AD8\u4E86\u6A21\u578B\u5BF9\u5E8F\u5217\u6570\u636E\u7684\u7406\u89E3\u80FD\u529B\u3002</p>\\n<p>\u6CE8\u610F\u529B\u5C42\u901A\u5E38\u5305\u542B\u4EE5\u4E0B\u51E0\u4E2A\u5173\u952E\u6982\u5FF5\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>Query\uFF08Q\uFF09</strong>\uFF1A\u5F53\u524D\u5904\u7406\u7684\u5143\u7D20\u6216\u4F4D\u7F6E\u7684\u8868\u793A\uFF0C\u7528\u4E8E\u4E0E\u5176\u5B83\u5143\u7D20\u8FDB\u884C\u6BD4\u8F83\u3002</p>\\n</li>\\n<li>\\n<p><strong>Key\uFF08K\uFF09</strong>\uFF1A\u5E8F\u5217\u4E2D\u6240\u6709\u5143\u7D20\u7684\u8868\u793A\uFF0C\u7528\u4E8E\u4E0E Query \u8FDB\u884C\u5339\u914D\u3002</p>\\n</li>\\n<li>\\n<p><strong>Value\uFF08V\uFF09</strong>\uFF1A\u5E8F\u5217\u4E2D\u6240\u6709\u5143\u7D20\u7684\u8868\u793A\uFF0C\u7528\u4E8E\u5728\u5339\u914D\u6210\u529F\u540E\uFF0C\u6839\u636E\u5339\u914D\u7A0B\u5EA6\u5BF9\u5143\u7D20\u8FDB\u884C\u52A0\u6743\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u6CE8\u610F\u529B\u5206\u6570\uFF08Attention Score\uFF09</strong>\uFF1A\u901A\u8FC7\u8BA1\u7B97 Query \u4E0E Key \u4E4B\u95F4\u7684\u76F8\u4F3C\u5EA6\u5F97\u5230\uFF0C\u901A\u5E38\u4F7F\u7528\u70B9\u79EF\uFF08dot product\uFF09\u6216\u7F29\u653E\u70B9\u79EF\uFF08scaled dot product\uFF09\u6765\u8BA1\u7B97\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u6CE8\u610F\u529B\u6743\u91CD\uFF08Attention Weights\uFF09</strong>\uFF1A\u901A\u8FC7 softmax \u51FD\u6570\u5BF9\u6CE8\u610F\u529B\u5206\u6570\u8FDB\u884C\u5F52\u4E00\u5316\u5904\u7406\uFF0C\u786E\u4FDD\u6240\u6709\u6743\u91CD\u7684\u548C\u4E3A 1\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u52A0\u6743\u548C\uFF08Weighted Sum\uFF09</strong>\uFF1A\u5C06\u6CE8\u610F\u529B\u6743\u91CD\u4E0E\u5BF9\u5E94\u7684 Value \u76F8\u4E58\uFF0C\u5E76\u6C42\u548C\uFF0C\u5F97\u5230\u6700\u7EC8\u7684\u8F93\u51FA\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u591A\u5934\u6CE8\u610F\u529B\uFF08Multi-Head Attention\uFF09</strong>\uFF1A\u5C06\u4E0A\u8FF0\u8FC7\u7A0B\u590D\u5236\u591A\u6B21\uFF0C\u6BCF\u4E2A\u201C\u5934\u201D\u5B66\u4E60\u5230\u4E0D\u540C\u7684\u8868\u793A\u5B50\u7A7A\u95F4\uFF0C\u7136\u540E\u5C06\u8FD9\u4E9B\u8868\u793A\u5408\u5E76\uFF0C\u4EE5\u6355\u83B7\u4E0D\u540C\u65B9\u9762\u7684\u4FE1\u606F\u3002</p>\\n</li>\\n</ol>\\n<p>\u5728 Transformer \u6A21\u578B\u4E2D\uFF0C\u6CE8\u610F\u529B\u5C42\u901A\u5E38\u5206\u4E3A\u4E24\u79CD\u7C7B\u578B\uFF1A</p>\\n<ul>\\n<li>\\n<p><strong>\u81EA\u6CE8\u610F\u529B\uFF08Self-Attention\uFF09</strong>\uFF1AQuery\u3001Key \u548C Value \u90FD\u6765\u81EA\u540C\u4E00\u5E8F\u5217\uFF0C\u8FD9\u79CD\u6CE8\u610F\u529B\u673A\u5236\u5141\u8BB8\u6A21\u578B\u5728\u5E8F\u5217\u5185\u90E8\u8FDB\u884C\u4FE1\u606F\u7684\u4EA4\u4E92\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u7F16\u7801\u5668-\u89E3\u7801\u5668\u6CE8\u610F\u529B\uFF08Encoder-Decoder Attention\uFF09</strong>\uFF1AQuery \u6765\u81EA\u89E3\u7801\u5668\u7684\u4E0A\u4E00\u5C42\uFF0C\u800C Key \u548C Value \u6765\u81EA\u7F16\u7801\u5668\u7684\u8F93\u51FA\u3002\u8FD9\u79CD\u6CE8\u610F\u529B\u673A\u5236\u5141\u8BB8\u6A21\u578B\u5728\u7F16\u7801\u5668\u7684\u8F93\u51FA\u4E0A\u8FDB\u884C\u805A\u7126\uFF0C\u4EE5\u751F\u6210\u5E8F\u5217\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\u3002</p>\\n</li>\\n</ul>\\n<p>\u6CE8\u610F\u529B\u5C42\u7684\u5F15\u5165\u6781\u5927\u5730\u63A8\u52A8\u4E86\u81EA\u7136\u8BED\u8A00\u5904\u7406\u9886\u57DF\u7684\u53D1\u5C55\uFF0C\u7279\u522B\u662F\u5728\u673A\u5668\u7FFB\u8BD1\u3001\u6587\u672C\u6458\u8981\u3001\u95EE\u7B54\u7CFB\u7EDF\u7B49\u4EFB\u52A1\u4E2D\u8868\u73B0\u51FA\u8272\u3002</p>\\n<p>User: \u504F\u7F6E</p>\\n<p>Kimi: \u5728\u795E\u7ECF\u7F51\u7EDC\u4E2D\uFF0C&quot;\u504F\u7F6E&quot;\uFF08Bias\uFF09\u662F\u4E00\u4E2A\u91CD\u8981\u7684\u6982\u5FF5\uFF0C\u5B83\u7528\u4E8E\u63D0\u4F9B\u989D\u5916\u7684\u81EA\u7531\u5EA6\uFF0C\u5E2E\u52A9\u6A21\u578B\u66F4\u597D\u5730\u62DF\u5408\u6570\u636E\u3002\u4EE5\u4E0B\u662F\u5173\u4E8E\u504F\u7F6E\u7684\u4E00\u4E9B\u5173\u952E\u70B9\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u5B9A\u4E49</strong>\uFF1A\u504F\u7F6E\u662F\u4E00\u4E2A\u6807\u91CF\u503C\uFF0C\u6DFB\u52A0\u5230\u795E\u7ECF\u7F51\u7EDC\u7684\u6BCF\u4E2A\u8F93\u51FA\u4E0A\uFF0C\u53EF\u4EE5\u770B\u4F5C\u662F\u8BE5\u5C42\u8F93\u51FA\u7684&quot;\u5E73\u79FB&quot;\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u4F5C\u7528</strong>\uFF1A</p>\\n<ul>\\n<li><strong>\u589E\u52A0\u7075\u6D3B\u6027</strong>\uFF1A\u504F\u7F6E\u5141\u8BB8\u6BCF\u4E00\u5C42\u7684\u8F93\u51FA\u5728\u4E0D\u540C\u7684\u8F93\u5165\u4E0B\u6709\u4E0D\u540C\u7684\u57FA\u7EBF\uFF0C\u589E\u52A0\u4E86\u6A21\u578B\u7684\u7075\u6D3B\u6027\u3002</li>\\n<li><strong>\u6539\u5584\u5B66\u4E60</strong>\uFF1A\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u504F\u7F6E\u6709\u52A9\u4E8E\u6A21\u578B\u66F4\u5FEB\u5730\u6536\u655B\u5230\u6700\u4F18\u89E3\u3002</li>\\n<li><strong>\u907F\u514D\u5BF9\u79F0\u6027\u95EE\u9898</strong>\uFF1A\u5728\u67D0\u4E9B\u7F51\u7EDC\u7ED3\u6784\u4E2D\uFF0C\u504F\u7F6E\u53EF\u4EE5\u9632\u6B62\u5BF9\u79F0\u6027\u95EE\u9898\uFF0C\u786E\u4FDD\u4E0D\u540C\u7684\u795E\u7ECF\u5143\u53EF\u4EE5\u5B66\u4E60\u5230\u4E0D\u540C\u7684\u7279\u5F81\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5B9E\u73B0</strong>\uFF1A\u5728\u6BCF\u4E00\u5C42\u7684\u8F93\u51FA\u8BA1\u7B97\u4E2D\uFF0C\u504F\u7F6E\u901A\u5E38\u4E0E\u6743\u91CD\u77E9\u9635\u7684\u8F93\u51FA\u76F8\u52A0\u3002\u4F8B\u5982\uFF0C\u5728\u5168\u8FDE\u63A5\u5C42\u4E2D\uFF0C\u8F93\u51FA\u8BA1\u7B97\u516C\u5F0F\u4E3A\uFF1A\\n[ \\\\text{output} = \\\\mathbf{W} \\\\times \\\\mathbf{x} + b ]\\n\u5176\u4E2D\uFF0C( \\\\mathbf{W} ) \u662F\u6743\u91CD\u77E9\u9635\uFF0C( \\\\mathbf{x} ) \u662F\u8F93\u5165\uFF0C( b ) \u662F\u504F\u7F6E\u5411\u91CF\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u6743\u91CD\u4E0E\u504F\u7F6E\u7684\u5173\u7CFB</strong>\uFF1A\u6743\u91CD\u51B3\u5B9A\u4E86\u8F93\u5165\u7279\u5F81\u4E0E\u8F93\u51FA\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u800C\u504F\u7F6E\u5219\u63D0\u4F9B\u4E86\u4E00\u4E2A\u989D\u5916\u7684\u8C03\u6574\u56E0\u5B50\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u8BAD\u7EC3</strong>\uFF1A\u5728\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\uFF0C\u504F\u7F6E\u548C\u6743\u91CD\u4E00\u6837\uFF0C\u4F1A\u901A\u8FC7\u53CD\u5411\u4F20\u64AD\u7B97\u6CD5\u8FDB\u884C\u66F4\u65B0\uFF0C\u4EE5\u6700\u5C0F\u5316\u635F\u5931\u51FD\u6570\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u9009\u62E9\u4F7F\u7528</strong>\uFF1A\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u4E3A\u4E86\u7B80\u5316\u6A21\u578B\u6216\u63D0\u9AD8\u6027\u80FD\uFF0C\u53EF\u4EE5\u9009\u62E9\u4E0D\u4F7F\u7528\u504F\u7F6E\u3002\u4F8B\u5982\uFF0C\u5728\u67D0\u4E9B\u53D8\u4F53\u7684 Transformer \u6A21\u578B\u4E2D\uFF0C\u5C42\u5F52\u4E00\u5316\uFF08Layer Normalization\uFF09\u53EF\u4EE5\u66FF\u4EE3\u504F\u7F6E\u7684\u4F5C\u7528\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u5728\u4E0D\u540C\u5C42\u4E2D\u7684\u5E94\u7528</strong>\uFF1A</p>\\n<ul>\\n<li><strong>\u5168\u8FDE\u63A5\u5C42</strong>\uFF1A\u5728\u5168\u8FDE\u63A5\u5C42\u4E2D\uFF0C\u504F\u7F6E\u901A\u5E38\u662F\u5FC5\u987B\u7684\uFF0C\u4EE5\u63D0\u4F9B\u989D\u5916\u7684\u81EA\u7531\u5EA6\u3002</li>\\n<li><strong>\u5377\u79EF\u5C42</strong>\uFF1A\u5728\u5377\u79EF\u5C42\u4E2D\uFF0C\u504F\u7F6E\u4E5F\u53EF\u4EE5\u63D0\u4F9B\u989D\u5916\u7684\u7075\u6D3B\u6027\uFF0C\u4F46\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8C03\u6574\u6FC0\u6D3B\u51FD\u6570\u6765\u66FF\u4EE3\u504F\u7F6E\u3002</li>\\n<li><strong>\u6CE8\u610F\u529B\u5C42</strong>\uFF1A\u5728\u6CE8\u610F\u529B\u5C42\u4E2D\uFF0C\u504F\u7F6E\u901A\u5E38\u7528\u4E8E\u8C03\u6574\u6CE8\u610F\u529B\u5206\u6570\uFF0C\u4EE5\u5F71\u54CD\u6CE8\u610F\u529B\u6743\u91CD\u7684\u5206\u5E03\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5F71\u54CD</strong>\uFF1A\u504F\u7F6E\u7684\u5927\u5C0F\u548C\u66F4\u65B0\u65B9\u5F0F\u53EF\u4EE5\u5F71\u54CD\u6A21\u578B\u7684\u6027\u80FD\u548C\u6536\u655B\u901F\u5EA6\u3002\u5408\u7406\u7684\u521D\u59CB\u5316\u548C\u8C03\u6574\u504F\u7F6E\u662F\u6A21\u578B\u8C03\u4F18\u7684\u4E00\u90E8\u5206\u3002</p>\\n</li>\\n</ol>\\n<p>\u603B\u7684\u6765\u8BF4\uFF0C\u504F\u7F6E\u662F\u795E\u7ECF\u7F51\u7EDC\u4E2D\u4E00\u4E2A\u91CD\u8981\u7684\u7EC4\u6210\u90E8\u5206\uFF0C\u5B83\u63D0\u4F9B\u4E86\u989D\u5916\u7684\u81EA\u7531\u5EA6\uFF0C\u5E2E\u52A9\u6A21\u578B\u66F4\u597D\u5730\u62DF\u5408\u6570\u636E\u548C\u5B66\u4E60\u7279\u5F81\u3002\u7136\u800C\uFF0C\u662F\u5426\u4F7F\u7528\u504F\u7F6E\u4EE5\u53CA\u5982\u4F55\u8C03\u6574\u504F\u7F6E\uFF0C\u9700\u8981\u6839\u636E\u5177\u4F53\u7684\u6A21\u578B\u7ED3\u6784\u548C\u4EFB\u52A1\u9700\u6C42\u6765\u51B3\u5B9A\u3002</p>\\n<p>User: class RMS_Norm(nn.Module): # \u53C2\u8003 llama \u4F7F\u7528 RMS Norm\\ndef <strong>init</strong>(self,hidden_size,eps=1e-6):\\nsuper().<strong>init</strong>()\\nself.weight = nn.Parameter(torch.ones(hidden_size))\\nself.eps = eps # \u5F15\u5165 eps \u907F\u514D\u5206\u6BCD\u4E3A 0</p>\\n<pre><code>def forward(self,hidden_states):\\n    input_dtype = hidden_states.dtype\\n    hidden_states = hidden_states.to(torch.float32)\\n    sqrt_pow_mean = torch.sqrt(hidden_states.pow(2).mean(-1, keepdim = True))\\n    # \u8FD9\u91CC\u8BA1\u7B97L2\u8303\u5F0F/n\u540E\u5F00\u6839\uFF0C\u8BE6\u89C1RMS Norm\u7684\u5B9A\u4E49\\n    return self.weight * hidden_states/(sqrt_pow_mean+self.eps)\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>RMS_Norm</code> \u7684\u7C7B\uFF0C\u5B83\u662F\u4E00\u4E2A PyTorch \u7684 <code>nn.Module</code> \u7684\u5B50\u7C7B\uFF0C\u5B9E\u73B0\u4E86\u4E00\u79CD\u79F0\u4E3A RMS\uFF08Root Mean Square\uFF09Norm \u7684\u5F52\u4E00\u5316\u65B9\u6CD5\u3002RMS Norm \u662F\u4E00\u79CD\u81EA\u5F52\u4E00\u5316\u673A\u5236\uFF0C\u901A\u5E38\u7528\u4E8E\u6539\u5584\u6DF1\u5EA6\u5B66\u4E60\u6A21\u578B\u7684\u8BAD\u7EC3\u8FC7\u7A0B\u3002</p>\\n<p>\u4EE5\u4E0B\u662F\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><code>__init__(self, hidden_size, eps=1e-6)</code>: \u8FD9\u662F <code>RMS_Norm</code> \u7C7B\u7684\u6784\u9020\u51FD\u6570\u3002</p>\\n<ul>\\n<li><code>hidden_size</code>: \u8868\u793A\u8F93\u5165\u7279\u5F81\u7684\u7EF4\u5EA6\u3002</li>\\n<li><code>eps</code>: \u662F\u4E00\u4E2A\u5C0F\u7684\u5E38\u6570\uFF0C\u7528\u4E8E\u6570\u503C\u7A33\u5B9A\u6027\uFF0C\u9632\u6B62\u9664\u4EE5\u96F6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>self.weight = nn.Parameter(torch.ones(hidden_size))</code>: \u5B9A\u4E49\u4E86\u4E00\u4E2A\u53EF\u5B66\u4E60\u7684\u53C2\u6570 <code>weight</code>\uFF0C\u5B83\u662F\u4E00\u4E2A\u957F\u5EA6\u4E3A <code>hidden_size</code> \u7684\u5411\u91CF\uFF0C\u521D\u59CB\u503C\u4E3A 1\u3002\u8FD9\u4E2A\u53C2\u6570\u5C06\u5728\u6A21\u578B\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u66F4\u65B0\u3002</p>\\n</li>\\n<li>\\n<p><code>self.eps</code>: \u5B58\u50A8\u4E86\u4F20\u5165\u7684 <code>eps</code> \u503C\uFF0C\u7528\u4E8E\u63D0\u4F9B\u6570\u503C\u7A33\u5B9A\u6027\u3002</p>\\n</li>\\n<li>\\n<p><code>forward(self, hidden_states)</code>: \u5B9A\u4E49\u4E86 <code>RMS_Norm</code> \u7684\u524D\u5411\u4F20\u64AD\u903B\u8F91\u3002</p>\\n<ul>\\n<li><code>input_dtype</code>: \u5B58\u50A8\u4E86\u8F93\u5165 <code>hidden_states</code> \u7684\u6570\u636E\u7C7B\u578B\uFF0C\u4EE5\u4FBF\u5728\u5F52\u4E00\u5316\u540E\u53EF\u4EE5\u5C06\u5176\u8F6C\u6362\u56DE\u539F\u59CB\u6570\u636E\u7C7B\u578B\u3002</li>\\n<li><code>hidden_states.to(torch.float32)</code>: \u5C06 <code>hidden_states</code> \u8F6C\u6362\u4E3A <code>float32</code> \u7C7B\u578B\uFF0C\u4EE5\u4FBF\u8FDB\u884C\u540E\u7EED\u7684\u6570\u5B66\u8FD0\u7B97\u3002</li>\\n<li><code>sqrt_pow_mean = torch.sqrt(hidden_states.pow(2).mean(-1, keepdim=True))</code>: \u8BA1\u7B97 <code>hidden_states</code> \u7684\u6BCF\u4E2A\u5143\u7D20\u7684\u5E73\u65B9\u7684\u5E73\u5747\u503C\u7684\u5E73\u65B9\u6839\u3002\u8FD9\u91CC <code>pow(2)</code> \u8BA1\u7B97\u5E73\u65B9\uFF0C<code>mean(-1, keepdim=True)</code> \u8BA1\u7B97\u6700\u540E\u4E00\u4E2A\u7EF4\u5EA6\u7684\u5E73\u5747\u503C\uFF0C\u5E76\u4F7F\u7528 <code>keepdim</code> \u4FDD\u6301\u7EF4\u5EA6\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u8FDB\u884C\u5E7F\u64AD\u64CD\u4F5C\u3002</li>\\n<li><code>return self.weight * hidden_states / (sqrt_pow_mean + self.eps)</code>: \u6267\u884C\u5F52\u4E00\u5316\u64CD\u4F5C\uFF0C\u5C06 <code>hidden_states</code> \u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u9664\u4EE5\u5176\u5E73\u65B9\u7684\u5E73\u5747\u503C\u7684\u5E73\u65B9\u6839\u52A0\u4E0A <code>eps</code>\uFF0C\u7136\u540E\u4E58\u4EE5 <code>weight</code> \u53C2\u6570\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>RMS Norm \u7684\u6838\u5FC3\u601D\u60F3\u662F\u52A8\u6001\u5730\u5BF9\u6BCF\u4E2A\u7279\u5F81\u7684\u5C3A\u5EA6\u8FDB\u884C\u8C03\u6574\uFF0C\u4F7F\u5F97\u6BCF\u4E2A\u7279\u5F81\u7684\u5747\u65B9\u6839\u503C\u63A5\u8FD1 1\u3002\u8FD9\u6709\u52A9\u4E8E\u7A33\u5B9A\u8BAD\u7EC3\u8FC7\u7A0B\uFF0C\u7279\u522B\u662F\u5728\u6DF1\u5EA6\u7F51\u7EDC\u4E2D\u3002</p>\\n<p>\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u4E2A\u5B9E\u73B0\u4E2D\uFF0C<code>hidden_states</code> \u88AB\u8F6C\u6362\u4E3A <code>float32</code> \u7C7B\u578B\u8FDB\u884C\u8BA1\u7B97\uFF0C\u4F46\u5728\u5B9E\u9645\u4F7F\u7528\u65F6\uFF0C\u4F60\u53EF\u80FD\u9700\u8981\u6839\u636E\u4F60\u7684\u6A21\u578B\u548C\u786C\u4EF6\u8003\u8651\u662F\u5426\u9700\u8981\u8F6C\u6362\u56DE\u539F\u59CB\u7684\u6570\u636E\u7C7B\u578B\u3002\u6B64\u5916\uFF0C\u8FD9\u4E2A\u7C7B\u6CA1\u6709\u5B9E\u73B0\u53CD\u5411\u4F20\u64AD\u903B\u8F91\uFF0C\u56E0\u4E3A\u4F5C\u4E3A <code>nn.Module</code> \u7684\u5B50\u7C7B\uFF0CPyTorch \u4F1A\u81EA\u52A8\u4F7F\u7528 <code>autograd</code> \u6765\u8BA1\u7B97\u68AF\u5EA6\u3002</p>\\n<p>User: \u81EA\u5F52\u4E00\u5316</p>\\n<p>Kimi: \u81EA\u5F52\u4E00\u5316\uFF08Self-Normalization\uFF09\u662F\u6DF1\u5EA6\u5B66\u4E60\u4E2D\u4E00\u79CD\u7528\u4E8E\u6539\u5584\u795E\u7ECF\u7F51\u7EDC\u8BAD\u7EC3\u548C\u6CDB\u5316\u6027\u80FD\u7684\u6280\u672F\u3002\u8FD9\u79CD\u6280\u672F\u7684\u6838\u5FC3\u601D\u60F3\u662F\u901A\u8FC7\u5F52\u4E00\u5316\u5C42\u7684\u8F93\u51FA\uFF0C\u4F7F\u5F97\u7F51\u7EDC\u7684\u6BCF\u4E00\u5C42\u8F93\u51FA\u7684\u5206\u5E03\u4FDD\u6301\u76F8\u5BF9\u7A33\u5B9A\uFF0C\u4ECE\u800C\u51CF\u5C11\u5185\u90E8\u534F\u53D8\u91CF\u504F\u79FB\uFF08Internal Covariate Shift\uFF09\u73B0\u8C61\uFF0C\u5373\u524D\u5C42\u7684\u8F93\u51FA\u5206\u5E03\u968F\u7740\u8BAD\u7EC3\u7684\u8FDB\u884C\u800C\u53D1\u751F\u663E\u8457\u53D8\u5316\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5F71\u54CD\u540E\u5C42\u7684\u5B66\u4E60\u3002</p>\\n<p>\u81EA\u5F52\u4E00\u5316\u6280\u672F\u901A\u5E38\u5305\u62EC\u4EE5\u4E0B\u51E0\u79CD\u65B9\u6CD5\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u6279\u91CF\u5F52\u4E00\u5316\uFF08Batch Normalization\uFF09</strong>:</p>\\n<ul>\\n<li>\u8FD9\u662F\u6700\u5E38\u7528\u7684\u81EA\u5F52\u4E00\u5316\u6280\u672F\u4E4B\u4E00\uFF0C\u901A\u8FC7\u5BF9\u6BCF\u4E2A\u5C0F\u6279\u91CF\u6570\u636E\u7684\u8F93\u51FA\u8FDB\u884C\u5F52\u4E00\u5316\u6765\u5DE5\u4F5C\u3002</li>\\n<li>\u5B83\u901A\u8FC7\u8BA1\u7B97\u5747\u503C\u548C\u65B9\u5DEE\uFF0C\u7136\u540E\u4F7F\u7528\u8FD9\u4E9B\u7EDF\u8BA1\u91CF\u6765\u5F52\u4E00\u5316\u8F93\u51FA\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5C42\u5F52\u4E00\u5316\uFF08Layer Normalization\uFF09</strong>:</p>\\n<ul>\\n<li>\u8FD9\u79CD\u6280\u672F\u5BF9\u6BCF\u4E2A\u6837\u672C\u7684\u6240\u6709\u6FC0\u6D3B\u8FDB\u884C\u5F52\u4E00\u5316\uFF0C\u800C\u4E0D\u662F\u5BF9\u5C0F\u6279\u91CF\u6570\u636E\u8FDB\u884C\u5F52\u4E00\u5316\u3002</li>\\n<li>\u5B83\u4FDD\u6301\u4E86\u4E0D\u540C\u6837\u672C\u95F4\u7684\u72EC\u7ACB\u6027\uFF0C\u9002\u7528\u4E8E\u5904\u7406\u5E8F\u5217\u6570\u636E\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5B9E\u4F8B\u5F52\u4E00\u5316\uFF08Instance Normalization\uFF09</strong>:</p>\\n<ul>\\n<li>\u4E3B\u8981\u7528\u4E8E\u98CE\u683C\u8FC1\u79FB\u4EFB\u52A1\uFF0C\u901A\u8FC7\u5BF9\u5355\u4E2A\u56FE\u50CF\u7684\u6BCF\u4E2A\u901A\u9053\u8FDB\u884C\u5F52\u4E00\u5316\u6765\u5DE5\u4F5C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u7EC4\u5F52\u4E00\u5316\uFF08Group Normalization\uFF09</strong>:</p>\\n<ul>\\n<li>\u8FD9\u79CD\u5F52\u4E00\u5316\u65B9\u5F0F\u5C06\u901A\u9053\u5206\u6210\u591A\u4E2A\u7EC4\uFF0C\u7136\u540E\u5728\u6BCF\u4E2A\u7EC4\u5185\u8FDB\u884C\u5F52\u4E00\u5316\u3002</li>\\n<li>\u5B83\u5728\u5904\u7406\u4E0D\u540C\u6279\u91CF\u5927\u5C0F\u7684\u6570\u636E\u65F6\u5177\u6709\u66F4\u597D\u7684\u7075\u6D3B\u6027\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u6743\u91CD\u5F52\u4E00\u5316\uFF08Weight Normalization\uFF09</strong>:</p>\\n<ul>\\n<li>\u8FD9\u79CD\u6280\u672F\u901A\u8FC7\u5F52\u4E00\u5316\u6743\u91CD\u5411\u91CF\u6765\u5DE5\u4F5C\uFF0C\u800C\u4E0D\u662F\u6FC0\u6D3B\u503C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>RMSNorm</strong>:</p>\\n<ul>\\n<li>\u8FD9\u662F\u4E00\u79CD\u7C7B\u4F3C\u4E8E\u6279\u91CF\u5F52\u4E00\u5316\u7684\u6280\u672F\uFF0C\u4F46\u5B83\u4F7F\u7528\u5747\u65B9\u6839\uFF08Root Mean Square\uFF09\u503C\u6765\u8FDB\u884C\u5F52\u4E00\u5316\u3002</li>\\n<li>\u5B83\u901A\u8FC7\u8BA1\u7B97\u8F93\u5165\u7684\u5E73\u65B9\u7684\u5E73\u5747\u503C\u7684\u5E73\u65B9\u6839\uFF0C\u7136\u540E\u9664\u4EE5\u8FD9\u4E2A\u503C\u6765\u8FDB\u884C\u5F52\u4E00\u5316\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u81EA\u5F52\u4E00\u5316\u6280\u672F\u7684\u4F18\u70B9\u5305\u62EC\uFF1A</p>\\n<ul>\\n<li><strong>\u52A0\u901F\u6536\u655B</strong>\uFF1A\u901A\u8FC7\u51CF\u5C11\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u7684\u68AF\u5EA6\u95EE\u9898\uFF0C\u53EF\u4EE5\u52A0\u5FEB\u6536\u655B\u901F\u5EA6\u3002</li>\\n<li><strong>\u63D0\u9AD8\u6027\u80FD</strong>\uFF1A\u901A\u8FC7\u7A33\u5B9A\u7F51\u7EDC\u7684\u4E2D\u95F4\u5C42\u8868\u793A\uFF0C\u53EF\u4EE5\u63D0\u9AD8\u6A21\u578B\u7684\u6CDB\u5316\u80FD\u529B\u3002</li>\\n<li><strong>\u51CF\u5C11\u8D85\u53C2\u6570\u8C03\u6574</strong>\uFF1A\u81EA\u5F52\u4E00\u5316\u51CF\u5C11\u4E86\u5BF9\u521D\u59CB\u5316\u548C\u5B66\u4E60\u7387\u7B49\u8D85\u53C2\u6570\u7684\u654F\u611F\u6027\u3002</li>\\n</ul>\\n<p>\u7136\u800C\uFF0C\u81EA\u5F52\u4E00\u5316\u6280\u672F\u4E5F\u6709\u4E00\u4E9B\u5C40\u9650\u6027\uFF0C\u6BD4\u5982\u6279\u91CF\u5F52\u4E00\u5316\u5728\u5C0F\u6279\u91CF\u5927\u5C0F\u4E0B\u53EF\u80FD\u6548\u679C\u4E0D\u4F73\uFF0C\u6216\u8005\u5728\u67D0\u4E9B\u7279\u5B9A\u4EFB\u52A1\u4E2D\u53EF\u80FD\u4E0D\u9002\u5408\u4F7F\u7528\u3002</p>\\n<p>\u5728\u4F60\u4E4B\u524D\u63D0\u4F9B\u7684 <code>RMS_Norm</code> \u7C7B\u4E2D\uFF0C\u5B9E\u73B0\u7684\u5C31\u662F RMSNorm\uFF0C\u5B83\u901A\u8FC7\u9664\u4EE5\u8F93\u5165\u7684\u5747\u65B9\u6839\u503C\u6765\u8FDB\u884C\u5F52\u4E00\u5316\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u6709\u52A9\u4E8E\u7A33\u5B9A\u7F51\u7EDC\u7684\u8F93\u51FA\u5206\u5E03\uFF0C\u4ECE\u800C\u63D0\u9AD8\u8BAD\u7EC3\u7684\u7A33\u5B9A\u6027\u548C\u6A21\u578B\u7684\u6027\u80FD\u3002</p>\\n<p>User: class flash_att(nn.Module): # \u53C2\u8003 NanoGPT\\ndef <strong>init</strong>(self,args):\\nsuper().<strong>init</strong>() # qkv \u5408\u5230\u4E00\u4E2A Linear \u91CC\u9762\u53BB\\nself.qkv_atten = nn.Linear(args.n_embed,3*args.n_embed,bias = args.bias) # \u8BB0\u5F97\u6709\u4E00\u7BC7\u8BBA\u6587\u8BF4 head_size \u8981\u7B49\u4E8E seq_length \u624D\u5408\u7406\\nself.n_head = args.n_head\\nself.n_embed = args.n_embed # \u8BA1\u7B97\u4E00\u4E0B head_size\\nassert args.n_embed % args.n_head == 0\\nself.head_size = args.n_embed//args.n_head # dropout\\nself.dropout = args.dropout # \u8FD9\u91CC\u662F\u5B58\u5E03\u5C14\u503C\uFF0C\u53C2\u6570 dropout \u6982\u7387\uFF0Cgenerate \u65F6\u8BBE\u7F6E\u4E3A 0 \u5373\u53EF\\nself.att_dropout = nn.Dropout(self.dropout) # \u7B49\u4EF7\u4E8E nn.Dropout(p=self.dropout) # projection layer\\nself.c_proj = nn.Linear(self.n_embed,self.n_embed, bias = args.bias)</p>\\n<pre><code>def forward(self, x):\\n    B,T,C = x.shape\\n    # x\u7684\u5C3A\u5BF8\uFF1A(B,T,C)\\n    q, k, v = self.qkv_atten(x).split(self.n_embed,dim = 2) # B,T,C\\n\\n    q = q.view(B,T,self.n_head,self.head_size).transpose(1,2)\\n    # (B,T,C) -&gt; (B,T,n_head,head_size) -&gt; (B,n_head,T,head_size)\\n    k = k.view(B,T,self.n_head,self.head_size).transpose(1,2)\\n    v = v.view(B,T,self.n_head,self.head_size).transpose(1,2)\\n\\n    # \u4F7F\u7528torch\u5C01\u88C5\u597D\u7684flash attention\\n    y = nn.functional.scaled_dot_product_attention(q,k,v,attn_mask=None,\\n                                                   dropout_p = self.dropout if self.training else 0,\\n                                                   is_causal=True)\\n    # \u8BAD\u7EC3\u65F6dropout\\n    # (B, nh, T, T) x (B, nh, T, hs) -&gt; (B, nh, T, hs)\\n    # \u4E4B\u540E\u8981transpose\u4E00\u4E0B\u8BA9\u5B83\u53D8\u6210(B,T,nh,hs)\\n    y = y.transpose(1,2)# (B,T,nh,hs)\\n    # .contiguous()\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5F20\u91CF\uFF0C\u4FDD\u8BC1\u4E86\u5176\u5728\u5185\u5B58\u4E2D\u7684\u8FDE\u7EED\u6027\\n    y = y.contiguous().view(B,T,C) # (B,T,C)\\n\\n    # \u8F93\u51FA\u65F6\u7ECF\u8FC7\u6295\u5F71\u5C42\u540Edropout\\n    return self.att_dropout(self.c_proj(y))\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>flash_att</code> \u7684\u7C7B\uFF0C\u5B83\u662F\u4E00\u4E2A PyTorch \u7684 <code>nn.Module</code> \u7684\u5B50\u7C7B\uFF0C\u5B9E\u73B0\u4E86\u4E00\u79CD\u6CE8\u610F\u529B\u673A\u5236\uFF0C\u79F0\u4E3A Flash Attention\uFF0C\u7075\u611F\u53EF\u80FD\u6765\u6E90\u4E8E NanoGPT\u3002\u8FD9\u4E2A\u7C7B\u7528\u4E8E\u6784\u5EFA Transformer \u6A21\u578B\u4E2D\u7684\u6CE8\u610F\u529B\u5C42\u3002\u4E0B\u9762\u662F\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><code>__init__(self, args)</code>: \u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A <code>args</code> \u53C2\u6570\uFF0C\u5B83\u662F\u4E00\u4E2A\u5305\u542B\u6A21\u578B\u53C2\u6570\u7684\u6570\u636E\u7C7B\u5B9E\u4F8B\u3002</p>\\n</li>\\n<li>\\n<p><code>self.qkv_atten = nn.Linear(args.n_embed, 3 * args.n_embed, bias=args.bias)</code>: \u521B\u5EFA\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF0C\u7528\u4E8E\u540C\u65F6\u751F\u6210 Query\uFF08Q\uFF09\u3001Key\uFF08K\uFF09\u548C Value\uFF08V\uFF09\u3002\u8FD9\u4E2A\u7EBF\u6027\u5C42\u5C06\u8F93\u5165\u7684\u7279\u5F81\u7EF4\u5EA6\u6269\u5C55\u4E3A\u4E09\u500D\uFF0C\u56E0\u4E3A Q\u3001K \u548C V \u90FD\u662F\u76F8\u540C\u7EF4\u5EA6\u7684\u3002</p>\\n</li>\\n<li>\\n<p><code>self.n_head = args.n_head</code> \u548C <code>self.n_embed = args.n_embed</code>: \u5B58\u50A8\u5934\u7684\u6570\u91CF\u548C\u5D4C\u5165\u7EF4\u5EA6\u3002</p>\\n</li>\\n<li>\\n<p><code>assert args.n_embed % args.n_head == 0</code>: \u786E\u4FDD\u5D4C\u5165\u7EF4\u5EA6\u53EF\u4EE5\u88AB\u5934\u7684\u6570\u91CF\u6574\u9664\uFF0C\u8FD9\u662F\u591A\u5934\u6CE8\u610F\u529B\u673A\u5236\u7684\u8981\u6C42\u3002</p>\\n</li>\\n<li>\\n<p><code>self.head_size = args.n_embed // args.n_head</code>: \u8BA1\u7B97\u6BCF\u4E2A\u5934\u7684\u7EF4\u5EA6\u5927\u5C0F\u3002</p>\\n</li>\\n<li>\\n<p><code>self.dropout = args.dropout</code> \u548C <code>self.att_dropout = nn.Dropout(self.dropout)</code>: \u5B58\u50A8 dropout \u6982\u7387\uFF0C\u5E76\u521B\u5EFA\u4E00\u4E2A dropout \u5C42\u3002</p>\\n</li>\\n<li>\\n<p><code>self.c_proj = nn.Linear(self.n_embed, self.n_embed, bias=args.bias)</code>: \u521B\u5EFA\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF0C\u7528\u4E8E\u6CE8\u610F\u529B\u8F93\u51FA\u7684\u6295\u5F71\u3002</p>\\n</li>\\n<li>\\n<p><code>forward(self, x)</code>: \u7C7B\u7684\u524D\u5411\u4F20\u64AD\u51FD\u6570\u3002</p>\\n<ul>\\n<li><code>B, T, C = x.shape</code>: \u83B7\u53D6\u8F93\u5165\u5F20\u91CF <code>x</code> \u7684\u5F62\u72B6\uFF0C\u5176\u4E2D <code>B</code> \u662F\u6279\u6B21\u5927\u5C0F\uFF0C<code>T</code> \u662F\u5E8F\u5217\u957F\u5EA6\uFF0C<code>C</code> \u662F\u7279\u5F81\u7EF4\u5EA6\u3002</li>\\n<li><code>q, k, v = self.qkv_atten(x).split(self.n_embed, dim=2)</code>: \u4F7F\u7528 <code>qkv_atten</code> \u7EBF\u6027\u5C42\u751F\u6210 Q\u3001K\u3001V\uFF0C\u5E76\u5C06\u7ED3\u679C\u6CBF\u6700\u540E\u4E00\u4E2A\u7EF4\u5EA6\u5206\u5272\u4E3A\u4E09\u90E8\u5206\u3002</li>\\n<li><code>q.view(...)</code>, <code>k.view(...)</code>, <code>v.view(...)</code>: \u5C06 Q\u3001K\u3001V \u91CD\u5851\u5E76\u8F6C\u7F6E\uFF0C\u4EE5\u9002\u5E94\u591A\u5934\u6CE8\u610F\u529B\u673A\u5236\u7684\u683C\u5F0F\u3002</li>\\n<li><code>y = nn.functional.scaled_dot_product_attention(...)</code>: \u4F7F\u7528 PyTorch \u7684 <code>scaled_dot_product_attention</code> \u51FD\u6570\u5B9E\u73B0 Flash Attention\u3002\u6CE8\u610F\uFF0C\u8FD9\u91CC\u7684\u5B9E\u73B0\u4F7F\u7528\u4E86 <code>is_causal=True</code> \u53C2\u6570\uFF0C\u8FD9\u53EF\u80FD\u610F\u5473\u7740\u5B83\u5B9E\u73B0\u4E86\u4E00\u79CD\u56E0\u679C\u8BED\u8A00\u6A21\u578B\u7684\u6CE8\u610F\u529B\u673A\u5236\uFF0C\u5176\u4E2D\u6BCF\u4E2A\u4F4D\u7F6E\u53EA\u80FD\u5173\u6CE8\u5230\u5B83\u4E4B\u524D\u7684\u5E8F\u5217\u3002</li>\\n<li><code>y = y.transpose(1,2)</code>: \u8F6C\u7F6E\u6CE8\u610F\u529B\u8F93\u51FA\uFF0C\u4EE5\u9002\u5E94\u540E\u7EED\u7684\u6295\u5F71\u5C42\u3002</li>\\n<li><code>y = y.contiguous().view(B, T, C)</code>: \u786E\u4FDD\u5F20\u91CF\u5728\u5185\u5B58\u4E2D\u8FDE\u7EED\uFF0C\u5E76\u5C06\u5176\u89C6\u56FE\u8F6C\u6362\u56DE\u539F\u59CB\u7684\u6279\u6B21\u548C\u5E8F\u5217\u5F62\u72B6\u3002</li>\\n<li><code>return self.att_dropout(self.c_proj(y))</code>: \u5E94\u7528\u6295\u5F71\u5C42\u548C dropout\uFF0C\u7136\u540E\u8FD4\u56DE\u6700\u7EC8\u7684\u8F93\u51FA\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A <code>flash_att</code> \u7C7B\u5B9E\u73B0\u4E86\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u6CE8\u610F\u529B\u673A\u5236\uFF0C\u5B83\u7ED3\u5408\u4E86\u591A\u5934\u6CE8\u610F\u529B\u3001\u7EBF\u6027\u6295\u5F71\u548C dropout\u3002\u8FD9\u79CD\u6CE8\u610F\u529B\u673A\u5236\u53EF\u4EE5\u4F5C\u4E3A Transformer \u6A21\u578B\u7684\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u7528\u4E8E\u5904\u7406\u5E8F\u5217\u6570\u636E\u3002\u4EE3\u7801\u4E2D\u7684 <code>scaled_dot_product_attention</code> \u51FD\u6570\u662F PyTorch \u63D0\u4F9B\u7684\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u4E8E\u8BA1\u7B97\u6CE8\u610F\u529B\u5206\u6570\u548C\u52A0\u6743\u8F93\u51FA\u3002\u6CE8\u610F\uFF0C\u8FD9\u91CC\u7684\u5B9E\u73B0\u53EF\u80FD\u9700\u8981\u6839\u636E\u5B9E\u9645\u7684\u6A21\u578B\u67B6\u6784\u548C\u4EFB\u52A1\u9700\u6C42\u8FDB\u884C\u8C03\u6574\u3002</p>\\n<p>User: dropout</p>\\n<p>Kimi: Dropout \u662F\u4E00\u79CD\u5728\u8BAD\u7EC3\u6DF1\u5EA6\u795E\u7ECF\u7F51\u7EDC\u65F6\u5E38\u7528\u7684\u6B63\u5219\u5316\u6280\u672F\uFF0C\u7531 Geoffrey Hinton \u548C\u4ED6\u7684\u540C\u4E8B\u5728 2012 \u5E74\u63D0\u51FA\u3002Dropout \u7684\u4E3B\u8981\u76EE\u7684\u662F\u9632\u6B62\u6A21\u578B\u8FC7\u62DF\u5408\uFF0C\u63D0\u9AD8\u6A21\u578B\u7684\u6CDB\u5316\u80FD\u529B\u3002</p>\\n<p>\u4EE5\u4E0B\u662F Dropout \u7684\u5173\u952E\u6982\u5FF5\u548C\u5DE5\u4F5C\u539F\u7406\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u968F\u673A\u4E22\u5F03</strong>\uFF1A\u5728\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\uFF0CDropout \u968F\u673A\u5C06\u4E00\u90E8\u5206\u795E\u7ECF\u5143\u7684\u6FC0\u6D3B\u8F93\u51FA\u8BBE\u7F6E\u4E3A\u96F6\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u6BCF\u4E2A\u795E\u7ECF\u5143\u8F93\u51FA\u88AB\u4E22\u5F03\u7684\u6982\u7387\u662F\u76F8\u540C\u7684\uFF0C\u901A\u5E38\u7531\u8D85\u53C2\u6570 <code>p</code> \u51B3\u5B9A\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u4FDD\u7559\u7A00\u758F\u6027</strong>\uFF1A\u7531\u4E8E\u795E\u7ECF\u5143\u7684\u968F\u673A\u4E22\u5F03\uFF0C\u7F51\u7EDC\u5728\u6BCF\u6B21\u8BAD\u7EC3\u8FED\u4EE3\u4E2D\u90FD\u4F1A\u6709\u4E0D\u540C\u7684\u67B6\u6784\uFF0C\u8FD9\u8FEB\u4F7F\u7F51\u7EDC\u5B66\u4E60\u66F4\u52A0\u9C81\u68D2\u7684\u7279\u5F81\u8868\u793A\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u8BAD\u7EC3\u4E0E\u63A8\u7406\u65F6\u7684\u533A\u522B</strong>\uFF1A\u5728\u8BAD\u7EC3\u65F6\u5E94\u7528 Dropout\uFF0C\u800C\u5728\u6A21\u578B\u63A8\u7406\uFF08\u6216\u6D4B\u8BD5\uFF09\u9636\u6BB5\u4E0D\u5E94\u7528\u3002\u5728\u63A8\u7406\u65F6\uFF0C\u4E3A\u4E86\u4FDD\u6301\u795E\u7ECF\u5143\u7684\u671F\u671B\u503C\u4E0D\u53D8\uFF0C\u901A\u5E38\u4F1A\u5C06\u795E\u7ECF\u5143\u7684\u8F93\u51FA\u4E58\u4EE5 <code>(1-p)</code>\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u8D85\u53C2\u6570 <code>p</code></strong>\uFF1ADropout \u7684\u4E22\u5F03\u6982\u7387\uFF0C\u662F\u4E00\u4E2A\u91CD\u8981\u7684\u8D85\u53C2\u6570\u3002\u5E38\u89C1\u7684\u503C\u6709 0.2\u30010.5 \u7B49\uFF0C\u5177\u4F53\u503C\u9700\u8981\u6839\u636E\u6A21\u578B\u548C\u4EFB\u52A1\u8FDB\u884C\u8C03\u6574\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u5B9E\u73B0\u65B9\u5F0F</strong>\uFF1A\u5728 PyTorch \u4E2D\uFF0CDropout \u53EF\u4EE5\u901A\u8FC7 <code>nn.Dropout</code> \u6A21\u5757\u5B9E\u73B0\u3002\u4F8B\u5982\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">dropout_layer </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">Dropout</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #A6ACCD\\">p</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F78C6C\\">0.5</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div></li>\\n<li>\\n<p><strong>\u5E94\u7528\u573A\u666F</strong>\uFF1ADropout \u901A\u5E38\u5E94\u7528\u4E8E\u5168\u8FDE\u63A5\u5C42\uFF08\u4E5F\u79F0\u4E3A\u5BC6\u96C6\u5C42\u6216\u7EBF\u6027\u5C42\uFF09\u7684\u8F93\u51FA\u4E0A\u3002\u5728\u5377\u79EF\u795E\u7ECF\u7F51\u7EDC\uFF08CNN\uFF09\u4E2D\uFF0C\u6709\u65F6\u4E5F\u4F1A\u5E94\u7528\u4E8E\u5377\u79EF\u5C42\u7684\u8F93\u51FA\u4E0A\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u4E0E\u5176\u4ED6\u6B63\u5219\u5316\u6280\u672F\u7684\u6BD4\u8F83</strong>\uFF1ADropout \u4E0E L1\u3001L2 \u6B63\u5219\u5316\u7B49\u5176\u4ED6\u6B63\u5219\u5316\u6280\u672F\u76F8\u6BD4\uFF0C\u63D0\u4F9B\u4E86\u4E00\u79CD\u4E0D\u540C\u7684\u6B63\u5219\u5316\u65B9\u5F0F\uFF0C\u5B83\u53EF\u4EE5\u51CF\u5C11\u6A21\u578B\u5BF9\u8BAD\u7EC3\u6570\u636E\u4E2D\u7279\u5B9A\u6837\u672C\u7684\u4F9D\u8D56\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u7F3A\u70B9</strong>\uFF1A\u867D\u7136 Dropout \u6709\u52A9\u4E8E\u51CF\u5C11\u8FC7\u62DF\u5408\uFF0C\u4F46\u6709\u65F6\u53EF\u80FD\u4F1A\u5BFC\u81F4\u8BAD\u7EC3\u65F6\u95F4\u53D8\u957F\uFF0C\u56E0\u4E3A\u9700\u8981\u66F4\u591A\u7684\u8FED\u4EE3\u6765\u8FBE\u5230\u76F8\u540C\u7684\u6027\u80FD\u6C34\u5E73\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u53D8\u4F53</strong>\uFF1A\u5B58\u5728\u4E00\u4E9B Dropout \u7684\u53D8\u4F53\uFF0C\u4F8B\u5982 Spatial Dropout\uFF08\u7528\u4E8E\u5377\u79EF\u795E\u7ECF\u7F51\u7EDC\uFF09\uFF0C\u5B83\u968F\u673A\u4E22\u5F03\u6574\u4E2A\u7279\u5F81\u56FE\uFF1B\u6216\u8005 Inverted Dropout\uFF08\u6216\u79F0 DropConnect\uFF09\uFF0C\u5B83\u968F\u673A\u4E22\u5F03\u6743\u91CD\u800C\u4E0D\u662F\u6FC0\u6D3B\u3002</p>\\n</li>\\n</ol>\\n<p>\u5728\u4F60\u7684 <code>flash_att</code> \u7C7B\u4E2D\uFF0C<code>self.dropout</code> \u5B58\u50A8\u4E86 Dropout \u7684\u6982\u7387\u503C\uFF0C<code>self.att_dropout</code> \u662F <code>nn.Dropout</code> \u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u7528\u4E8E\u5728\u6CE8\u610F\u529B\u673A\u5236\u7684\u8F93\u51FA\u4E0A\u5E94\u7528 Dropout\u3002\u5728\u6A21\u578B\u8BAD\u7EC3\u65F6\uFF0CDropout \u6709\u52A9\u4E8E\u6A21\u578B\u5B66\u4E60\u66F4\u52A0\u6CDB\u5316\u7684\u7279\u5F81\uFF0C\u800C\u5728\u6A21\u578B\u63A8\u7406\u65F6\uFF0C\u901A\u8FC7\u4E58\u4EE5 <code>(1-self.dropout)</code> \u6765\u8865\u507F\u8BAD\u7EC3\u65F6\u7684\u4E22\u5F03\u64CD\u4F5C\u3002</p>\\n<p>User: args</p>\\n<p>Kimi: \u5728 Python \u4E2D\uFF0C<code>args</code> \u901A\u5E38\u662F\u5728\u5B9A\u4E49\u51FD\u6570\u6216\u65B9\u6CD5\u65F6\uFF0C\u7528\u4E8E\u6307\u4EE3\u4F20\u5165\u8BE5\u51FD\u6570\u6216\u65B9\u6CD5\u7684\u6240\u6709\u53C2\u6570\u3002\u7136\u800C\uFF0C\u5728\u4F60\u4E4B\u524D\u63D0\u5230\u7684\u4E0A\u4E0B\u6587\u4E2D\uFF0C<code>args</code> \u662F\u4E00\u4E2A\u5B9E\u4F8B\u5316\u7684\u7C7B\uFF0C\u5B83\u4F7F\u7528 <code>dataclasses</code> \u6A21\u5757\u7684 <code>@dataclass</code> \u88C5\u9970\u5668\u6765\u5B9A\u4E49\u3002\u8FD9\u4E2A <code>args</code> \u5B9E\u4F8B\u5305\u542B\u4E86\u6A21\u578B\u7684\u53C2\u6570\u914D\u7F6E\uFF0C\u7528\u4E8E\u521D\u59CB\u5316\u548C\u914D\u7F6E\u795E\u7ECF\u7F51\u7EDC\u6A21\u578B\u3002</p>\\n<p>\u4F8B\u5982\uFF0C\u4F60\u4E4B\u524D\u5B9A\u4E49\u7684 <code>Model_args</code> \u6570\u636E\u7C7B\u53EF\u80FD\u770B\u8D77\u6765\u50CF\u8FD9\u6837\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #89DDFF\\">from</span><span style=\\"color: #A6ACCD\\"> dataclasses </span><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> dataclass</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">@</span><span style=\\"color: #82AAFF\\">dataclass</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">class</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">Model_args</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    block_size</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">int</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">1024</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    vocab_size</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">int</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">50257</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    n_layer</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">int</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">12</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    n_head</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">int</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">12</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    n_embed</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">int</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">768</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    dropout</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">float</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">0.1</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    bias</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">bool</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">True</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A <code>Model_args</code> \u7C7B\u4E2D\uFF0C\u6BCF\u4E2A\u5C5E\u6027\u90FD\u6709\u4E00\u4E2A\u9ED8\u8BA4\u503C\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFA\u8FD9\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u5E76\u4F20\u9012\u7279\u5B9A\u7684\u503C\u6765\u8986\u76D6\u8FD9\u4E9B\u9ED8\u8BA4\u503C\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">args </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">Model_args</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #A6ACCD\\">block_size</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F78C6C\\">512</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #A6ACCD\\">vocab_size</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F78C6C\\">10000</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C<code>args</code> \u662F <code>Model_args</code> \u7C7B\u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u5176 <code>block_size</code> \u548C <code>vocab_size</code> \u5C5E\u6027\u88AB\u8BBE\u7F6E\u4E3A\u7279\u5B9A\u503C\uFF0C\u800C\u5176\u4ED6\u5C5E\u6027\u5219\u4FDD\u6301\u9ED8\u8BA4\u503C\u3002</p>\\n<p>\u5728\u4F60\u7684 <code>flash_att</code> \u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\uFF0C<code>args</code> \u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF0C\u7136\u540E\u7528\u4E8E\u8BBE\u7F6E\u7C7B\u7684\u5C5E\u6027\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #C792EA\\">class</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">flash_att</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #FFCB6B\\">nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #FFCB6B\\">Module</span><span style=\\"color: #89DDFF\\">):</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    </span><span style=\\"color: #C792EA\\">def</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">__init__</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F07178\\">self</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #A6ACCD\\">args</span><span style=\\"color: #89DDFF\\">):</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">        </span><span style=\\"color: #FFCB6B\\">super</span><span style=\\"color: #89DDFF\\">().</span><span style=\\"color: #82AAFF\\">__init__</span><span style=\\"color: #89DDFF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">        </span><span style=\\"color: #676E95\\"># \u4F7F\u7528 args \u4E2D\u7684\u5C5E\u6027\u6765\u914D\u7F6E\u6A21\u578B</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">        self</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">qkv_atten</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">Linear</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">args</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">n_embed</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">3</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #89DDFF\\">*</span><span style=\\"color: #82AAFF\\"> args</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">n_embed</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #A6ACCD\\">bias</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #82AAFF\\">args</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">bias</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">        </span><span style=\\"color: #676E95\\"># ... \u5176\u4ED6\u5C5E\u6027\u548C\u521D\u59CB\u5316\u4EE3\u7801 ...</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A <code>flash_att</code> \u7C7B\u4E2D\uFF0C<code>args</code> \u5B9E\u4F8B\u88AB\u7528\u6765\u8BBF\u95EE\u6A21\u578B\u53C2\u6570\uFF0C\u5982 <code>args.n_embed</code> \u7528\u4E8E\u8BBE\u7F6E\u5D4C\u5165\u7EF4\u5EA6\uFF0C<code>args.bias</code> \u7528\u4E8E\u51B3\u5B9A\u662F\u5426\u5728\u7F51\u7EDC\u5C42\u4E2D\u4F7F\u7528\u504F\u7F6E\u3002</p>\\n<p>\u7B80\u800C\u8A00\u4E4B\uFF0C\u5728\u6DF1\u5EA6\u5B66\u4E60\u6A21\u578B\u4E2D\uFF0C<code>args</code> \u901A\u5E38\u662F\u4E00\u4E2A\u914D\u7F6E\u5BF9\u8C61\uFF0C\u5B83\u5305\u542B\u4E86\u6A21\u578B\u7684\u6240\u6709\u8D85\u53C2\u6570\u548C\u914D\u7F6E\u9009\u9879\uFF0C\u4F7F\u5F97\u6A21\u578B\u7684\u914D\u7F6E\u66F4\u52A0\u7075\u6D3B\u548C\u53EF\u91CD\u7528\u3002</p>\\n<p>User: B,T,C = x.shape # x \u7684\u5C3A\u5BF8\uFF1A(B,T,C)\\nq, k, v = self.qkv_atten(x).split(self.n_embed,dim = 2) # B,T,C</p>\\n<pre><code>    q = q.view(B,T,self.n_head,self.head_size).transpose(1,2)\\n    # (B,T,C) -&gt; (B,T,n_head,head_size) -&gt; (B,n_head,T,head_size)\\n    k = k.view(B,T,self.n_head,self.head_size).transpose(1,2)\\n    v = v.view(B,T,self.n_head,self.head_size).transpose(1,2)\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F\u591A\u5934\u81EA\u6CE8\u610F\u529B\u673A\u5236\u7684\u4E00\u90E8\u5206\uFF0C\u7528\u4E8E\u5904\u7406\u8F93\u5165\u5F20\u91CF <code>x</code> \u5E76\u51C6\u5907 Query\uFF08Q\uFF09\u3001Key\uFF08K\uFF09\u548C Value\uFF08V\uFF09\u7684\u8868\u793A\u3002\u4E0B\u9762\u662F\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><code>B, T, C = x.shape</code>: \u8FD9\u884C\u4EE3\u7801\u4ECE\u8F93\u5165\u5F20\u91CF <code>x</code> \u4E2D\u83B7\u53D6\u5176\u5F62\u72B6\uFF0C\u5E76\u5C06\u5176\u5206\u89E3\u4E3A\u4E09\u4E2A\u7EF4\u5EA6\uFF1A</p>\\n<ul>\\n<li><code>B</code>\uFF1A\u6279\u6B21\u5927\u5C0F\uFF08Batch size\uFF09\uFF0C\u8868\u793A\u540C\u65F6\u5904\u7406\u7684\u6570\u636E\u6837\u672C\u6570\u91CF\u3002</li>\\n<li><code>T</code>\uFF1A\u5E8F\u5217\u957F\u5EA6\uFF08Sequence length\uFF09\uFF0C\u5728\u81EA\u7136\u8BED\u8A00\u5904\u7406\u4E2D\u901A\u5E38\u5BF9\u5E94\u4E8E\u53E5\u5B50\u6216\u6587\u672C\u5E8F\u5217\u7684\u957F\u5EA6\u3002</li>\\n<li><code>C</code>\uFF1A\u7279\u5F81\u7EF4\u5EA6\uFF08Feature dimension\uFF09\uFF0C\u8868\u793A\u6BCF\u4E2A\u5E8F\u5217\u5143\u7D20\u7684\u7279\u5F81\u6570\u91CF\uFF0C\u4F8B\u5982\u5728 Transformer \u6A21\u578B\u4E2D\u5BF9\u5E94\u4E8E\u5D4C\u5165\u7EF4\u5EA6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>q, k, v = self.qkv_atten(x).split(self.n_embed, dim=2)</code>: \u8FD9\u884C\u4EE3\u7801\u9996\u5148\u901A\u8FC7 <code>self.qkv_atten</code> \u7EBF\u6027\u5C42\u5C06\u8F93\u5165 <code>x</code> \u6620\u5C04\u5230\u4E00\u4E2A\u65B0\u5F20\u91CF\uFF0C\u8BE5\u5F20\u91CF\u7684\u6700\u540E\u4E00\u4E2A\u7EF4\u5EA6\u662F <code>3 * C</code>\uFF0C\u7136\u540E\u6CBF\u7740\u6700\u540E\u4E00\u4E2A\u7EF4\u5EA6\u5C06\u8FD9\u4E2A\u65B0\u5F20\u91CF\u5206\u5272\u6210\u4E09\u4E2A\u90E8\u5206\uFF1AQ\u3001K \u548C V\uFF0C\u6BCF\u4E2A\u90E8\u5206\u7684\u7EF4\u5EA6\u90FD\u662F <code>B, T, self.n_embed</code>\u3002</p>\\n</li>\\n<li>\\n<p><code>q = q.view(B, T, self.n_head, self.head_size).transpose(1, 2)</code>: \u8FD9\u884C\u4EE3\u7801\u9996\u5148\u5C06 Q \u91CD\u5851\u4E3A <code>(B, T, self.n_head, self.head_size)</code> \u7684\u5F62\u72B6\uFF0C\u7136\u540E\u901A\u8FC7 <code>transpose</code> \u51FD\u6570\u4EA4\u6362\u7B2C\u4E8C\u7EF4\u548C\u7B2C\u4E09\u7EF4\uFF0C\u5F97\u5230 <code>(B, self.n_head, T, self.head_size)</code> \u7684\u5F62\u72B6\u3002\u8FD9\u662F\u4E3A\u4E86\u5C06 Q \u51C6\u5907\u4E3A\u591A\u5934\u6CE8\u610F\u529B\u673A\u5236\u4E2D\u7684\u9002\u5F53\u5F62\u72B6\u3002</p>\\n</li>\\n<li>\\n<p>\u7C7B\u4F3C\u7684\uFF0C<code>k.view(...).transpose(...)</code> \u548C <code>v.view(...).transpose(...)</code> \u5C06 K \u548C V \u4E5F\u91CD\u5851\u5E76\u8F6C\u7F6E\u5230 <code>(B, self.n_head, T, self.head_size)</code> \u7684\u5F62\u72B6\u3002</p>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E9B\u64CD\u4F5C\u7684\u76EE\u7684\u662F\u5C06\u8F93\u5165\u5F20\u91CF <code>x</code> \u8F6C\u6362\u4E3A\u9002\u5408\u591A\u5934\u6CE8\u610F\u529B\u8BA1\u7B97\u7684\u5F62\u5F0F\u3002\u5728\u591A\u5934\u6CE8\u610F\u529B\u4E2D\uFF0C\u8F93\u5165\u88AB\u5206\u5272\u6210\u591A\u4E2A &quot;\u5934&quot;\uFF0C\u6BCF\u4E2A\u5934\u5B66\u4E60\u5230\u5E8F\u5217\u7684\u4E0D\u540C\u8868\u793A\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u6A21\u578B\u53EF\u4EE5\u5E76\u884C\u5730\u4ECE\u4E0D\u540C\u7684\u5B50\u7A7A\u95F4\u6355\u6349\u4FE1\u606F\uFF0C\u589E\u5F3A\u6A21\u578B\u7684\u8868\u8FBE\u80FD\u529B\u3002</p>\\n<p><code>self.n_head</code> \u662F\u6A21\u578B\u4E2D\u5934\u7684\u6570\u91CF\uFF0C<code>self.head_size</code> \u662F\u6BCF\u4E2A\u5934\u7684\u7279\u5F81\u7EF4\u5EA6\u5927\u5C0F\uFF0C\u4E14 <code>self.n_embed</code> \u5FC5\u987B\u80FD\u88AB <code>self.n_head</code> \u6574\u9664\uFF0C\u4EE5\u786E\u4FDD\u6BCF\u4E2A\u5934\u90FD\u80FD\u83B7\u5F97\u76F8\u540C\u6570\u91CF\u7684\u7279\u5F81\u3002\u8FD9\u79CD\u5206\u5272\u548C\u91CD\u5851\u64CD\u4F5C\u662F\u5B9E\u73B0\u591A\u5934\u6CE8\u610F\u529B\u7684\u5173\u952E\u6B65\u9AA4\u3002</p>\\n<p>User: y = nn.functional.scaled_dot_product_attention(q,k,v,attn_mask=None,\\ndropout_p = self.dropout if self.training else 0,\\nis_causal=True)</p>\\n<p>Kimi: \u5728\u8FD9\u6BB5\u4EE3\u7801\u4E2D\uFF0C<code>scaled_dot_product_attention</code> \u51FD\u6570\u662F PyTorch \u5E93\u4E2D\u7528\u4E8E\u8BA1\u7B97\u81EA\u6CE8\u610F\u529B\uFF08Self-Attention\uFF09\u7684\u51FD\u6570\u3002\u8FD9\u4E2A\u51FD\u6570\u5B9E\u73B0\u4E86 Transformer \u6A21\u578B\u4E2D\u7684\u6CE8\u610F\u529B\u673A\u5236\uFF0C\u5B83\u901A\u8FC7\u8BA1\u7B97 Query\uFF08Q\uFF09\u3001Key\uFF08K\uFF09\u548C Value\uFF08V\uFF09\u4E4B\u95F4\u7684\u70B9\u79EF\u6765\u8861\u91CF\u5B83\u4EEC\u4E4B\u95F4\u7684\u76F8\u5173\u6027\u3002\u4E0B\u9762\u662F\u53C2\u6570\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ul>\\n<li>\\n<p><code>q</code>: \u67E5\u8BE2\u5F20\u91CF\uFF0C\u5176\u5F62\u72B6\u901A\u5E38\u662F <code>(B, N, H, D)</code>\uFF0C\u5176\u4E2D <code>B</code> \u662F\u6279\u6B21\u5927\u5C0F\uFF0C<code>N</code> \u662F\u5E8F\u5217\u957F\u5EA6\uFF0C<code>H</code> \u662F\u5934\u7684\u6570\u91CF\uFF0C<code>D</code> \u662F\u6BCF\u4E2A\u5934\u7684\u7279\u5F81\u7EF4\u5EA6\u3002</p>\\n</li>\\n<li>\\n<p><code>k</code>: \u952E\u5F20\u91CF\uFF0C\u5F62\u72B6\u5E94\u4E0E <code>q</code> \u76F8\u540C\u3002</p>\\n</li>\\n<li>\\n<p><code>v</code>: \u503C\u5F20\u91CF\uFF0C\u5F62\u72B6\u4E5F\u5E94\u4E0E <code>q</code> \u76F8\u540C\u3002</p>\\n</li>\\n<li>\\n<p><code>attn_mask</code>: \u4E00\u4E2A\u53EF\u9009\u53C2\u6570\uFF0C\u7528\u4E8E\u5C4F\u853D\uFF08masking\uFF09\u6CE8\u610F\u529B\u8BA1\u7B97\u4E2D\u7684\u67D0\u4E9B\u90E8\u5206\u3002\u4F8B\u5982\uFF0C\u5728\u5904\u7406\u5E8F\u5217\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u63A9\u7801\u6765\u9632\u6B62\u672A\u6765\u4F4D\u7F6E\u7684\u4FE1\u606F\u6D41\u5165\u5F53\u524D\u4F4D\u7F6E\u3002</p>\\n</li>\\n<li>\\n<p><code>dropout_p</code>: \u8FD9\u662F dropout \u7684\u6982\u7387\u503C\u3002\u5982\u679C\u6A21\u578B\u5904\u4E8E\u8BAD\u7EC3\u6A21\u5F0F\uFF08<code>self.training</code> \u4E3A <code>True</code>\uFF09\uFF0C\u5219\u4F7F\u7528 <code>self.dropout</code> \u6307\u5B9A\u7684\u503C\uFF1B\u5982\u679C\u5904\u4E8E\u8BC4\u4F30\u6A21\u5F0F\uFF08<code>self.training</code> \u4E3A <code>False</code>\uFF09\uFF0C\u5219\u5C06 dropout \u8BBE\u7F6E\u4E3A 0\uFF0C\u4EE5\u786E\u4FDD\u5728\u63A8\u7406\u65F6\u4FDD\u6301\u4E00\u81F4\u6027\u3002</p>\\n</li>\\n<li>\\n<p><code>is_causal</code>: \u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E3A <code>True</code>\uFF0C\u5219\u5B9E\u73B0\u56E0\u679C\uFF08Causal\uFF09\u6CE8\u610F\u529B\uFF0C\u5373\u53EA\u5141\u8BB8\u5E8F\u5217\u4E2D\u7684\u4F4D\u7F6E i \u4E0E i \u4E4B\u524D\u7684\u4F4D\u7F6E\u5EFA\u7ACB\u8FDE\u63A5\u3002\u8FD9\u5728\u751F\u6210\u4EFB\u52A1\u4E2D\u5F88\u6709\u7528\uFF0C\u5982\u6587\u672C\u751F\u6210\u6216\u8BED\u8A00\u6A21\u578B\uFF0C\u56E0\u4E3A\u5B83\u786E\u4FDD\u4E86\u751F\u6210\u7684\u6BCF\u4E2A\u5143\u7D20\u53EA\u4F9D\u8D56\u4E8E\u5B83\u4E4B\u524D\u7684\u6240\u6709\u5143\u7D20\u3002</p>\\n</li>\\n</ul>\\n<p><code>scaled_dot_product_attention</code> \u51FD\u6570\u7684\u5DE5\u4F5C\u65B9\u5F0F\u5982\u4E0B\uFF1A</p>\\n<ol>\\n<li>\\n<p>\u9996\u5148\uFF0C\u5B83\u8BA1\u7B97 Query \u548C Key \u4E4B\u95F4\u7684\u70B9\u79EF\uFF0C\u7136\u540E\u901A\u8FC7\u9664\u4EE5\u7F29\u653E\u56E0\u5B50\uFF08\u901A\u5E38\u662F Key \u7EF4\u5EA6\u7684\u5E73\u65B9\u6839\uFF09\u6765\u7F29\u653E\u8FD9\u4E9B\u70B9\u79EF\uFF0C\u4EE5\u9632\u6B62\u68AF\u5EA6\u8FC7\u5C0F\u3002</p>\\n</li>\\n<li>\\n<p>\u5982\u679C\u63D0\u4F9B\u4E86 <code>attn_mask</code>\uFF0C\u5219\u5C06\u63A9\u7801\u5E94\u7528\u4E8E\u70B9\u79EF\u7ED3\u679C\uFF0C\u901A\u5E38\u662F\u901A\u8FC7\u6DFB\u52A0\u4E00\u4E2A\u975E\u5E38\u5927\u7684\u8D1F\u6570\uFF08\u5982\u901A\u8FC7 <code>-1e9</code> \u5B9E\u73B0\uFF09\uFF0C\u8FD9\u6837\u5728\u5E94\u7528 softmax \u51FD\u6570\u65F6\uFF0C\u63A9\u7801\u4F4D\u7F6E\u7684\u6743\u91CD\u4F1A\u63A5\u8FD1\u4E8E 0\u3002</p>\\n</li>\\n<li>\\n<p>\u63A5\u7740\uFF0C\u4F7F\u7528 softmax \u51FD\u6570\u5BF9\u7F29\u653E\u540E\u7684\u70B9\u79EF\u8FDB\u884C\u5F52\u4E00\u5316\uFF0C\u5F97\u5230\u6CE8\u610F\u529B\u6743\u91CD\u3002</p>\\n</li>\\n<li>\\n<p>\u6700\u540E\uFF0C\u8FD9\u4E9B\u6CE8\u610F\u529B\u6743\u91CD\u4E0E Value \u5F20\u91CF\u76F8\u4E58\uFF0C\u7136\u540E\u6C42\u548C\uFF0C\u5F97\u5230\u6700\u7EC8\u7684\u8F93\u51FA\u3002</p>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A\u51FD\u6570\u7684\u8F93\u51FA\u662F\u4E00\u4E2A\u5F20\u91CF\uFF0C\u5176\u5305\u542B\u4E86\u52A0\u6743\u7684 Value\uFF0C\u5373\u7ECF\u8FC7\u6CE8\u610F\u529B\u52A0\u6743\u7684\u5E8F\u5217\u8868\u793A\u3002\u8FD9\u4E2A\u8F93\u51FA\u53EF\u4EE5\u8FDB\u4E00\u6B65\u7528\u4E8E\u4E0B\u6E38\u4EFB\u52A1\uFF0C\u5982\u7F16\u7801\u6216\u89E3\u7801\u3002\u5728\u4F60\u7684 <code>flash_att</code> \u7C7B\u4E2D\uFF0C\u8FD9\u4E2A\u51FD\u6570\u88AB\u7528\u6765\u5B9E\u73B0\u5FEB\u901F\u7684\u6CE8\u610F\u529B\u8BA1\u7B97\uFF0C\u53EF\u80FD\u4E0E Flash Attention \u6709\u5173\uFF0C\u8FD9\u662F\u4E00\u79CD\u4F18\u5316\u7684\u6CE8\u610F\u529B\u673A\u5236\uFF0C\u65E8\u5728\u51CF\u5C11\u8BA1\u7B97\u91CF\u548C\u63D0\u9AD8\u6548\u7387\u3002</p>\\n<p>User: # \u8BAD\u7EC3\u65F6 dropout # (B, nh, T, T) x (B, nh, T, hs) -&gt; (B, nh, T, hs) # \u4E4B\u540E\u8981 transpose \u4E00\u4E0B\u8BA9\u5B83\u53D8\u6210(B,T,nh,hs)\\ny = y.transpose(1,2)# (B,T,nh,hs) # .contiguous()\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5F20\u91CF\uFF0C\u4FDD\u8BC1\u4E86\u5176\u5728\u5185\u5B58\u4E2D\u7684\u8FDE\u7EED\u6027\\ny = y.contiguous().view(B,T,C) # (B,T,C)</p>\\n<pre><code>    # \u8F93\u51FA\u65F6\u7ECF\u8FC7\u6295\u5F71\u5C42\u540Edropout\\n    return self.att_dropout(self.c_proj(y))\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F\u591A\u5934\u81EA\u6CE8\u610F\u529B\u673A\u5236\u540E\u5904\u7406\u7684\u4E00\u90E8\u5206\uFF0C\u5B83\u63CF\u8FF0\u4E86\u5982\u4F55\u5C06\u6CE8\u610F\u529B\u673A\u5236\u7684\u8F93\u51FA\u8F6C\u6362\u4E3A\u6700\u7EC8\u7684\u5C42\u8F93\u51FA\u3002\u4EE5\u4E0B\u662F\u4EE3\u7801\u7684\u8BE6\u7EC6\u6B65\u9AA4\u548C\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u8F6C\u7F6E\u6CE8\u610F\u529B\u8F93\u51FA</strong>\uFF1A<code>y = y.transpose(1, 2)</code> \u8FD9\u884C\u4EE3\u7801\u5C06 <code>scaled_dot_product_attention</code> \u51FD\u6570\u7684\u8F93\u51FA <code>y</code> \u8FDB\u884C\u8F6C\u7F6E\u3002\u539F\u59CB\u8F93\u51FA\u7684\u5F62\u72B6\u662F <code>(B, nh, T, T)</code>\uFF0C\u5176\u4E2D <code>B</code> \u662F\u6279\u6B21\u5927\u5C0F\uFF0C<code>nh</code> \u662F\u5934\u7684\u6570\u91CF\uFF0C<code>T</code> \u662F\u5E8F\u5217\u957F\u5EA6\uFF0C\u7B2C\u4E8C\u4E2A <code>T</code> \u8868\u793A\u81EA\u6CE8\u610F\u529B\uFF0C\u5373\u6BCF\u4E2A\u5143\u7D20\u90FD\u4E0E\u5E8F\u5217\u4E2D\u7684\u6BCF\u4E2A\u5176\u4ED6\u5143\u7D20\u8BA1\u7B97\u6CE8\u610F\u529B\u3002\u8F6C\u7F6E\u64CD\u4F5C\u5C06\u5F62\u72B6\u53D8\u4E3A <code>(B, T, nh, hs)</code>\uFF0C\u5176\u4E2D <code>hs</code> \u662F\u6BCF\u4E2A\u5934\u7684\u5C3A\u5BF8\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u5185\u5B58\u8FDE\u7EED\u6027</strong>\uFF1A<code>y = y.contiguous()</code> \u8FD9\u884C\u4EE3\u7801\u786E\u4FDD\u5F20\u91CF <code>y</code> \u5728\u5185\u5B58\u4E2D\u662F\u8FDE\u7EED\u7684\u3002\u8FD9\u901A\u5E38\u5728\u8FDB\u884C\u89C6\u56FE\u64CD\u4F5C\uFF08view\uFF09\u4E4B\u524D\u4F7F\u7528\uFF0C\u4EE5\u907F\u514D\u7531\u4E8E\u975E\u8FDE\u7EED\u5185\u5B58\u5BFC\u81F4\u7684\u6027\u80FD\u95EE\u9898\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u91CD\u5851\u8F93\u51FA</strong>\uFF1A<code>y = y.view(B, T, C)</code> \u8FD9\u884C\u4EE3\u7801\u5C06\u8F6C\u7F6E\u540E\u7684\u5F20\u91CF\u91CD\u5851\u4E3A <code>(B, T, C)</code> \u7684\u5F62\u72B6\uFF0C\u5176\u4E2D <code>C</code> \u662F\u539F\u59CB\u8F93\u5165\u7684\u7279\u5F81\u7EF4\u5EA6\uFF0C\u7B49\u4E8E <code>nh * hs</code>\u3002\u8FD9\u6837\uFF0C\u8F93\u51FA\u7684\u5F62\u72B6\u4E0E\u539F\u59CB\u8F93\u5165 <code>x</code> \u7684\u5F62\u72B6\u76F8\u5339\u914D\uFF0C\u4F46\u5185\u5BB9\u5DF2\u7ECF\u901A\u8FC7\u6CE8\u610F\u529B\u673A\u5236\u8FDB\u884C\u4E86\u52A0\u6743\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u5E94\u7528\u6295\u5F71\u5C42</strong>\uFF1A<code>self.c_proj(y)</code> \u8FD9\u884C\u4EE3\u7801\u5C06\u8F93\u51FA <code>y</code> \u901A\u8FC7\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF08\u4E5F\u79F0\u4E3A\u5168\u8FDE\u63A5\u5C42\u6216\u7A20\u5BC6\u5C42\uFF09\u8FDB\u884C\u6295\u5F71\u3002\u8FD9\u4E2A\u6295\u5F71\u5C42\u5C06\u7279\u5F81\u7EF4\u5EA6\u4ECE <code>C</code> \u6620\u5C04\u56DE\u539F\u59CB\u7684\u7279\u5F81\u7EF4\u5EA6\uFF0C\u786E\u4FDD\u8F93\u51FA\u53EF\u4EE5\u4E0E\u6A21\u578B\u7684\u4E0B\u4E00\u5C42\u517C\u5BB9\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u5E94\u7528 Dropout</strong>\uFF1A<code>self.att_dropout</code> \u662F\u4E00\u4E2A <code>nn.Dropout</code> \u5B9E\u4F8B\uFF0C\u5B83\u5728\u8F93\u51FA\u4E0A\u5E94\u7528 dropout \u64CD\u4F5C\u3002\u5982\u679C\u6A21\u578B\u5904\u4E8E\u8BAD\u7EC3\u6A21\u5F0F\uFF08<code>self.training</code> \u4E3A <code>True</code>\uFF09\uFF0C\u5219\u4F7F\u7528 <code>self.dropout</code> \u6307\u5B9A\u7684\u6982\u7387\u8FDB\u884C dropout\uFF1B\u5982\u679C\u5904\u4E8E\u8BC4\u4F30\u6A21\u5F0F\uFF0C\u5219 dropout \u6982\u7387\u4E3A 0\uFF0C\u5373\u4E0D\u8FDB\u884C dropout\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u8FD4\u56DE\u6700\u7EC8\u8F93\u51FA</strong>\uFF1A\u6700\u540E\uFF0C<code>return self.att_dropout(self.c_proj(y))</code> \u8FD9\u884C\u4EE3\u7801\u8FD4\u56DE\u7ECF\u8FC7\u6295\u5F71\u5C42\u548C dropout \u5904\u7406\u540E\u7684\u6700\u7EC8\u8F93\u51FA\u3002</p>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A\u8FC7\u7A0B\u662F Transformer \u6A21\u578B\u4E2D\u81EA\u6CE8\u610F\u529B\u673A\u5236\u7684\u6807\u51C6\u540E\u5904\u7406\u6B65\u9AA4\uFF0C\u5B83\u786E\u4FDD\u4E86\u6CE8\u610F\u529B\u673A\u5236\u7684\u8F93\u51FA\u53EF\u4EE5\u88AB\u8FDB\u4E00\u6B65\u5904\u7406\uFF0C\u5E76\u4E14\u901A\u8FC7 dropout \u589E\u52A0\u4E86\u6A21\u578B\u7684\u6CDB\u5316\u80FD\u529B\u3002</p>\\n<p>User: class MLP(nn.Module): # MLP \u90E8\u5206\u53C2\u8003 llama MLP \u7ED3\u6784\\ndef <strong>init</strong>(self,args):\\nsuper().<strong>init</strong>()\\nself.dropout = nn.Dropout(args.dropout)\\nself.up_proj = nn.Linear(args.n_embed, 4<em>args.n_embed, bias = args.bias)\\nself.down_c_proj = nn.Linear(4</em>args.n_embed, args.n_embed, bias = args.bias) # \u4F7F\u7528 relu\\nself.act_func = nn.functional.relu # \u5B66\u4E60 llama \u589E\u52A0\u4E00\u4E2A\u95E8\u63A7\\nself.gate = nn.Linear(args.n_embed, 4*args.n_embed, bias = args.bias)</p>\\n<pre><code>def forward(self, x):\\n    # llama\u4EE3\u7801\u628AMLP\u8F93\u5165X\u5207\u7247\u6210slice\uFF0C\u6211\u8FD9\u91CC\u5C31\u4E0D\u5207\u7247\u4E86\\n    gate_proj = self.gate(x)\\n    x = self.up_proj(x)\\n\\n    # llama\u4E2D\u7684\u4EE3\u7801\uFF1A\\n    # intermediate_states = (self.act_fn(gate_proj) * up_proj).split(slice, dim=2)\\n    # nanogpt\u7684\\n    # x = self.act_func(x)\\n    # \u53D1\u73B0\u8FD9\u91CC\u533A\u522B\u4E3B\u8981\u5728\uFF0Cnanogpt\u5BF9upproj\u7684x\u4F7F\u7528\u6FC0\u6D3B\u51FD\u6570\uFF0Cllama\u5219\u662F\u5BF9gate\u4F7F\u7528\\n\\n    x = self.act_func(gate_proj)*x # \u548C\u95E8\u63A7gate\u6309\u7167\u5BF9\u5E94\u4F4D\u7F6E\u76F8\u4E58\\n    x = self.down_c_proj(x)\\n    return self.dropout(x)\\n</code></pre>\\n<p>class Block(nn.Module): # \u4E4B\u540E\u7528\u6765\u5806\u53E0\u7684 block\\ndef <strong>init</strong>(self, args):\\nsuper().<strong>init</strong>()\\nself.norm = RMS_Norm(args.n_embed)\\nself.attn = flash_att(args)\\nself.mlp = MLP(args)</p>\\n<pre><code>def forward(self,x):\\n    # \u4F7F\u7528pre norm\\n    x = x + self.attn(self.norm(x))# residual\\n    return x + self.mlp(self.norm(x)) # \u6B8B\u5DEE\u94FE\u63A5\\n</code></pre>\\n<p>class GPT(nn.Module): # llama \u548C GPT2 \u7684\u7F1D\u5408\u602A\\ndef <strong>init</strong>(self, args):\\nsuper().<strong>init</strong>()</p>\\n<pre><code>    self.args = args\\n    self.transformer = nn.ModuleDict(dict(\\n        wte = nn.Embedding(args.vocab_size, args.n_embed),\\n        # \u83B7\u53D6token_embed\\n        wpe = nn.Embedding(args.block_size, args.n_embed),\\n        # \u4F7F\u7528\u4E00\u7EC4\u53EF\u5B66\u4E60\u7684\u4F4D\u7F6E\u7F16\u7801pos_embed\\n        drop = nn.Dropout(args.dropout),\\n        h = nn.ModuleList([Block(args) for i in range(args.n_layer)]),\\n        norm = RMS_Norm(args.n_embed)\\n    ))\\n\\n    self.lm_head = nn.Linear(args.n_embed, args.vocab_size,bias=False)\\n    self.transformer.wte.weight = self.lm_head.weight\\n    # \u8FD9\u91CC\u4E0D\u662F\u7B80\u7B80\u5355\u5355\u7684\u8D4B\u503C\uFF0C\u800C\u662Fwte\u548Clm_head\u5171\u4EAB\u53C2\u6570\\n    # lm_head (n_embed,vocab_size)\u76F8\u5F53\u4E8E\u4ECE\u8BCD\u5411\u91CF\u5230token\u7684\u9884\u6D4B\\n    # wte ()\\n\\n    self.apply(self._init_weights) # \u521D\u59CB\u5316\u6743\u91CD\\n    n_sum = 0\\n    # \u6B63\u6001\u5206\u5E03\u521D\u59CB\u5316attention\u7684\u6295\u5F71\u5C42\u548CMLP\u7684\u4E0B\u91C7\u6837\\n    for pname,p in self.named_parameters():\\n        n_sum = n_sum + p.numel() # \u987A\u5E26\u7EDF\u8BA1\u4E00\u4E0B\u53C2\u6570\\n        if pname.endswith('c_proj.weight'):# c_proj\u662F\u4E0A\u4E0B\u6587\u611F\u77E5\u7684\u6295\u5F71\u5C42\\n            torch.nn.init.normal_(p,mean=0.0, std=0.02/math.sqrt(2*args.n_layer))\\n\\n    print(f&quot;\u6A21\u578B\u53C2\u6570\u91CF\uFF1A{n_sum}&quot;)\\n\\ndef _init_weights(self,module):# \u521D\u59CB\u5316\u5148\u884C\u5C42\u548Cembedding\\n    if isinstance(module, nn.Linear):\\n        torch.nn.init.normal_(module.weight, mean=0.0, std=0.02)\\n        if module.bias is not None:\\n            torch.nn.init.zeros_(module.bias)\\n    elif isinstance(module, nn.Embedding):\\n        torch.nn.init.normal_(module.weight, mean=0.0, std=0.02)\\n\\ndef forward(self, idx, targets = None): # targets\u662F\u8BAD\u7EC3\u65F6\u4F20\u5165\u7684\u76EE\u6807\uFF0C\u7528\u6765\u8BA1\u7B97\u4EA4\u53C9\u71B5loss\\n    device = idx.device\\n    B,T = idx.size()\\n    pos = torch.arange(0,T,dtype=torch.long,device=device) # \u4F4D\u7F6E\\n\\n    # embedding\\n    token_embed = self.transformer.wte(idx) # (B,T,n_embed)\\n    pos_embed = self.transformer.wpe(pos)# (t,n_embed)\\n    # \u4F4D\u7F6Eembed\u53EF\u5B66\u4E60\\n\\n    x = self.transformer.drop(token_embed+pos_embed) # \u5408\u5E76token\u548Cpos\\n    for block in self.transformer.h:\\n        x = block(x)\\n    x = self.transformer.norm(x)\\n\\n    # \u7ECF\u8FC7lm_head\\n    # target= True \u8868\u793A\u6A21\u578B\u6B63\u5728\u8BAD\u7EC3\u9636\u6BB5\uFF0C\u9700\u8981\u56DE\u4F20loss\\n    # logits\u53D6\u6700\u540E\u4E00\u4E2A\uFF08-1\uFF09\u5373\u751F\u6210\u51FA\u6765\u7684\u4E1C\u897F\uFF0C\u8FD9\u6837\u548C\u76EE\u6807\u7684\u4E00\u4E2Atoken\u7EF4\u5EA6\u76F8\u540C\uFF0C\u624D\u597D\u8BA1\u7B97\u635F\u5931\\n\\n    if targets is not None:\\n        logits = self.lm_head(x)\\n        # \u7528-1\u53D6\u6700\u540E\u4E00\u7EF4\u5EA6\u4E2A\uFF0C\u628A\u524D\u9762\u7684t\u4E22\u6389(t,vocab_size)-&gt;(vocab_size)\\n        loss = F.cross_entropy(logits.view(-1,logits.size(-1)),targets.view(-1),ignore_index=-1) # \u4EA4\u53C9\u71B5\u635F\u5931\\n    else: # generate\u65F6\u4F7F\u7528\\n        logits = self.lm_head(x)\\n        loss = None\\n\\n    return logits,loss\\n\\ndef configure_optimizers(self,weight_decay,learning_rate,betas,device_type):\\n    # \u5EFA\u7ACB\u4E00\u4E2A\u4ECE\u53C2\u6570\u540D\u5230\u53C2\u6570\u7684dict\\n    param_dict = {pn:p for pn,p in self.named_parameters()}\\n    # \u518D\u53BB\u6389\u4E0D\u7528\u8BA1\u7B97\u68AF\u5EA6\u7684\u90E8\u5206\\n    param_dict = {pn:p for pn,p in param_dict.items() if p.requires_grad }\\n\\n    # weight decay\\n    # \u5BF9\u4E8C\u7EF4\u7684\u53C2\u6570\u4F7F\u7528weight decay\uFF0C\u5176\u4ED6\u4E0D\u7528\uFF0C\u8FD9\u6837\u5206\u6210\u4E24\u7EC4\\n    decay_params = [p for pn,p in param_dict.items() if p.dim() &gt;= 2]\\n    nodecay_params = [p for pn,p in param_dict.items() if p.dim() &lt; 2]\\n    # dict.items()\u662F\u8FD4\u56DE\u4E00\u4E2Akey\u548Cvalue\u5143\u7EC4\u7684list [(k1,v1),(k2,v2)]\\n    optim_groups = [\\n        {'params': decay_params, 'weight_decay': weight_decay},\\n        {'params': nodecay_params, 'weight_decay': 0.0}\\n    ]\\n    # \u7EDF\u8BA1\u4E00\u4E0Bdecay\u548C\u4E0Ddecay\u7684\u53C2\u6570\u91CF\\n    num_decay = sum(p.numel() for p in decay_params)\\n    num_nodecay = sum(p.numel() for p in nodecay_params)\\n    print(f&quot;\u4F7F\u7528weight decay\u7684\u53C2\u6570\u91CF\u4E3A{num_decay},\u4E0D\u4F7F\u7528weight decay\u7684\u53C2\u6570\u91CF\u4E3A{num_nodecay}&quot;)\\n\\n    # \u8FD9\u6BB5\u662F\u5EFA\u7ACB\u4E00\u4E2AAdamW\u4F18\u5316\u5668\uFF0C\u770B\u7248\u672C\u662F\u5426\u652F\u6301fused\u878D\u5408\\n    # \u5224\u65ADAdam\u7684\u53C2\u6570\u5B57\u5178\u4E2D\u662F\u5426\u5305\u542Bfused\uFF0C\u5982\u679C\u6709\uFF0C\u628A\u5B83\u6DFB\u52A0\u5230extra args\u4E2D\\n    fused_avail = 'fused' in inspect.signature(torch.optim.AdamW).parameters\\n    # inspect.signature(fn).parameters\u8FD4\u56DE\u53C2\u6570list\\n    use_fused = fused_avail and device_type == 'cuda' # \u5E76\u4E14\u8981\u6709gpu\\n    if use_fused:\\n        print(&quot;AdamW optimiser use fused!&quot;)\\n    extra_args = {'fused':True} if use_fused else dict()\\n    optimizer = torch.optim.AdamW(optim_groups,lr = learning_rate,betas = betas,**extra_args)\\n    # betas:\u8BA1\u7B97\u68AF\u5EA6\u4EE5\u53CA\u68AF\u5EA6\u5E73\u65B9\u7684\u8FD0\u884C\u5E73\u5747\u503C\u7684\u7CFB\u6570\\n    # ** \u7528\u4E8E\u5C06\u4E00\u4E2A\u5B57\u5178\u89E3\u5305\u6210\u5173\u952E\u5B57\u53C2\u6570\u4F20\u9012\u7ED9\u51FD\u6570\\n\\n    return optimizer\\n\\ndef generate(self, idx, max_generate_tokens, tempreture=1.0, top_k=None):\\n    # topp\uFF0Ctopk\u548Ctempreture\u7684\u6982\u5FF5\\n    # max_generate_tokens\u4E3A\u751F\u6210\u7684\u65B0tokens\u7684\u6700\u5927\u6570\u91CF\\n    for _ in range(max_generate_tokens):\\n        idx = idx if idx.shape[1] &lt;= self.args.block_size else idx[:,-self.args.block_size:]\\n        # \u5982\u679C\u5927\u4E8E\u4F20\u5165\u7684\u6700\u5927\u5927\u5C0F\u5219\u622A\u53D6\u540E\u9762\u4E00\u6BB5\\n        # \u5176\u5B9E\u8FD9\u91CC\u6211\u6709\u70B9\u4E0D\u61C2\uFF0C\u5982\u679Cidx\u957F\u5EA6\u4E0D\u8DB3blocksize\uFF0C\u662F\u54EA\u4E00\u6B65\u7ED9\u4ED6\u586B\u5145\u5230blocksize\u5927\u5C0F\u7684\u5462\uFF1F\\n        logits, _ = self(idx)\\n        logits = logits[:,-1,:]/tempreture #(B,T,C)\u53D6\u6700\u540E\u4E00\u4E2A\u5373\u65B0\u751F\u6210\u7684\\n        # tempreture\u66F4\u9AD8\uFF0C\u751F\u6210\u7684\u968F\u673A\u6027\u66F4\u9AD8\\n        # \u4ECE\u8FD9\u91CC\u80FD\u77E5\u9053\uFF0C\u662Fsoftmax\u7684\u6027\u8D28\u51B3\u5B9A\u7684\uFF0C\u6307\u6570\u51FD\u6570\u5C0F\u7684\u65F6\u5019\u53D8\u5316\u5C0F\uFF0C\u4E0D\u540Ctoken\u7684probs\u5DEE\u8DDD\u4F1A\u88AB\u51CF\u5C11\uFF0C\u968F\u673A\u6027\u5C31\u5F3A\u4E86\\n\\n        if top_k is not None:\\n            v, _ = torch.topk(logits, min(top_k, logits.size(-1)))\\n            logits[logits &lt; v[:, [-1]]] = -float('Inf') # \u5FFD\u7565topk\u540D\u4EE5\u540E\u7684token\\n\\n        probs = F.softmax(logits,dim=-1)\\n        idx_next = torch.multinomial(probs, num_samples=1) # \u6309\u7167probs\u6982\u7387\u9009\u4E00\u4E2A\\n        idx = torch.cat((idx, idx_next), dim=1)\\n\\n    return idx\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u57FA\u4E8E Transformer \u67B6\u6784\u7684 GPT\uFF08General Purpose Transformer\uFF09\u6A21\u578B\uFF0C\u5305\u62EC\u51E0\u4E2A\u5173\u952E\u7EC4\u4EF6\uFF1A\u4E00\u4E2A\u591A\u5C42\u611F\u77E5\u5668\uFF08MLP\uFF09\u6A21\u5757\u3001\u4E00\u4E2A Transformer \u5757\uFF08Block\uFF09\u3001\u4EE5\u53CA\u6574\u4E2A GPT \u6A21\u578B\u672C\u8EAB\u3002\u6B64\u5916\uFF0C\u8FD8\u63D0\u4F9B\u4E86\u4E00\u4E2A\u751F\u6210\u6587\u672C\u7684\u65B9\u6CD5\u3002\u4E0B\u9762\u662F\u6BCF\u4E2A\u90E8\u5206\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<h3 id=\\"mlp-\u7C7B\\" tabindex=\\"-1\\">MLP \u7C7B <a class=\\"header-anchor\\" href=\\"#mlp-\u7C7B\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li><code>MLP</code> \u7C7B\u5B9E\u73B0\u4E86\u4E00\u4E2A\u4E24\u5C42\u7684\u524D\u9988\u795E\u7ECF\u7F51\u7EDC\uFF0C\u4F7F\u7528\u4E86 ReLU \u6FC0\u6D3B\u51FD\u6570\u548C\u4E00\u4E2A\u95E8\u63A7\u673A\u5236\uFF0C\u8FD9\u662F\u57FA\u4E8E &quot;llama&quot; \u6A21\u578B\u7684\u7ED3\u6784\u3002</li>\\n</ul>\\n<h3 id=\\"block-\u7C7B\\" tabindex=\\"-1\\">Block \u7C7B <a class=\\"header-anchor\\" href=\\"#block-\u7C7B\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li><code>Block</code> \u7C7B\u5B9A\u4E49\u4E86\u4E00\u4E2A Transformer \u5757\uFF0C\u5305\u62EC\u5C42\u5F52\u4E00\u5316\uFF08<code>RMS_Norm</code>\uFF09\u3001\u4E00\u4E2A Flash Attention \u673A\u5236\uFF08<code>flash_att</code>\uFF09\u548C\u4E00\u4E2A MLP\u3002\u8FD9\u4E2A\u5757\u4F7F\u7528\u4E86\u6B8B\u5DEE\u8FDE\u63A5\u548C\u5C42\u5F52\u4E00\u5316\u6765\u63D0\u9AD8\u6A21\u578B\u7684\u8868\u8FBE\u80FD\u529B\u548C\u7A33\u5B9A\u6027\u3002</li>\\n</ul>\\n<h3 id=\\"gpt-\u7C7B\\" tabindex=\\"-1\\">GPT \u7C7B <a class=\\"header-anchor\\" href=\\"#gpt-\u7C7B\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li><code>GPT</code> \u7C7B\u6784\u5EFA\u4E86\u6574\u4E2A\u6A21\u578B\uFF0C\u5305\u62EC\u8BCD\u5D4C\u5165\uFF08<code>wte</code>\uFF09\u3001\u4F4D\u7F6E\u7F16\u7801\uFF08<code>wpe</code>\uFF09\u3001\u591A\u4E2A Transformer \u5757\uFF08<code>h</code>\uFF09\u3001\u4E00\u4E2A\u6700\u7EC8\u7684\u5C42\u5F52\u4E00\u5316\uFF08<code>norm</code>\uFF09\u548C\u4E00\u4E2A\u7EBF\u6027\u8F93\u51FA\u5C42\uFF08<code>lm_head</code>\uFF09\u3002\u5B83\u8FD8\u5B9E\u73B0\u4E86\u6743\u91CD\u521D\u59CB\u5316\u3001\u524D\u5411\u4F20\u64AD\u548C\u4F18\u5316\u5668\u914D\u7F6E\u3002</li>\\n</ul>\\n<h4 id=\\"\u521D\u59CB\u5316\u548C\u6743\u91CD\u914D\u7F6E\\" tabindex=\\"-1\\">\u521D\u59CB\u5316\u548C\u6743\u91CD\u914D\u7F6E <a class=\\"header-anchor\\" href=\\"#\u521D\u59CB\u5316\u548C\u6743\u91CD\u914D\u7F6E\\" aria-hidden=\\"true\\">#</a></h4>\\n<ul>\\n<li>\u5728\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0C<code>GPT</code> \u7C7B\u4F7F\u7528 <code>nn.ModuleDict</code> \u6765\u5B58\u50A8\u6A21\u578B\u7684\u5404\u4E2A\u7EC4\u4EF6\uFF0C\u5E76\u5B9E\u73B0\u4E86\u6743\u91CD\u5171\u4EAB\uFF0C\u5176\u4E2D\u8BCD\u5D4C\u5165\uFF08<code>wte</code>\uFF09\u548C\u8BED\u8A00\u6A21\u578B\u5934\u90E8\uFF08<code>lm_head</code>\uFF09\u5171\u4EAB\u76F8\u540C\u7684\u6743\u91CD\u3002</li>\\n<li><code>_init_weights</code> \u65B9\u6CD5\u7528\u4E8E\u521D\u59CB\u5316\u6A21\u578B\u7684\u6743\u91CD\uFF0C\u4F7F\u7528\u4E86\u6B63\u6001\u5206\u5E03\u3002</li>\\n</ul>\\n<h4 id=\\"\u524D\u5411\u4F20\u64AD\\" tabindex=\\"-1\\">\u524D\u5411\u4F20\u64AD <a class=\\"header-anchor\\" href=\\"#\u524D\u5411\u4F20\u64AD\\" aria-hidden=\\"true\\">#</a></h4>\\n<ul>\\n<li><code>forward</code> \u65B9\u6CD5\u5B9E\u73B0\u4E86\u6A21\u578B\u7684\u524D\u5411\u4F20\u64AD\u3002\u5B83\u9996\u5148\u5C06\u8F93\u5165\u7684\u7D22\u5F15\uFF08<code>idx</code>\uFF09\u8F6C\u6362\u4E3A\u8BCD\u5D4C\u5165\u548C\u4F4D\u7F6E\u7F16\u7801\uFF0C\u7136\u540E\u901A\u8FC7 Dropout\u3001\u591A\u4E2A Transformer \u5757\u548C\u6700\u7EC8\u7684\u5C42\u5F52\u4E00\u5316\u3002\u5982\u679C\u63D0\u4F9B\u4E86\u76EE\u6807\uFF08<code>targets</code>\uFF09\uFF0C\u5B83\u8FD8\u4F1A\u8BA1\u7B97\u4EA4\u53C9\u71B5\u635F\u5931\u3002</li>\\n</ul>\\n<h4 id=\\"\u751F\u6210\u65B9\u6CD5\\" tabindex=\\"-1\\">\u751F\u6210\u65B9\u6CD5 <a class=\\"header-anchor\\" href=\\"#\u751F\u6210\u65B9\u6CD5\\" aria-hidden=\\"true\\">#</a></h4>\\n<ul>\\n<li><code>generate</code> \u65B9\u6CD5\u7528\u4E8E\u751F\u6210\u6587\u672C\u3002\u5B83\u63A5\u53D7\u521D\u59CB\u7D22\u5F15\uFF08<code>idx</code>\uFF09\u3001\u6700\u5927\u751F\u6210\u4EE4\u724C\u6570\uFF08<code>max_generate_tokens</code>\uFF09\u3001\u6E29\u5EA6\u53C2\u6570\uFF08<code>tempreture</code>\uFF09\u548C\u53EF\u9009\u7684 <code>top_k</code> \u53C2\u6570\u3002\u8FD9\u4E2A\u65B9\u6CD5\u901A\u8FC7\u91C7\u6837\u4ECE\u6A21\u578B\u751F\u6210\u65B0\u7684\u4EE4\u724C\uFF0C\u53EF\u4EE5\u9009\u62E9\u6027\u5730\u5E94\u7528\u6E29\u5EA6\u8C03\u6574\u548C top-k \u91C7\u6837\u6765\u63A7\u5236\u751F\u6210\u8FC7\u7A0B\u7684\u968F\u673A\u6027\u548C\u591A\u6837\u6027\u3002</li>\\n</ul>\\n<h4 id=\\"\u4F18\u5316\u5668\u914D\u7F6E\\" tabindex=\\"-1\\">\u4F18\u5316\u5668\u914D\u7F6E <a class=\\"header-anchor\\" href=\\"#\u4F18\u5316\u5668\u914D\u7F6E\\" aria-hidden=\\"true\\">#</a></h4>\\n<ul>\\n<li><code>configure_optimizers</code> \u65B9\u6CD5\u7528\u4E8E\u914D\u7F6E AdamW \u4F18\u5316\u5668\uFF0C\u5B83\u6839\u636E\u53C2\u6570\u7684\u7EF4\u5EA6\u5C06\u53C2\u6570\u5206\u4E3A\u4E24\u7EC4\uFF0C\u5E76\u5BF9\u4E0D\u540C\u7EC4\u7684\u53C2\u6570\u5E94\u7528\u4E0D\u540C\u7684\u6743\u91CD\u8870\u51CF\u7B56\u7565\u3002</li>\\n</ul>\\n<p>\u6574\u4F53\u6765\u770B\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5C55\u793A\u4E86\u5982\u4F55\u6784\u5EFA\u548C\u4F7F\u7528\u4E00\u4E2A\u57FA\u4E8E Transformer \u7684\u8BED\u8A00\u6A21\u578B\uFF0C\u5305\u62EC\u5176\u8BAD\u7EC3\u548C\u751F\u6210\u6587\u672C\u7684\u80FD\u529B\u3002\u4EE3\u7801\u4E2D\u8FD8\u5305\u542B\u4E86\u4E00\u4E9B\u6CE8\u91CA\uFF0C\u6709\u52A9\u4E8E\u7406\u89E3\u6BCF\u4E2A\u90E8\u5206\u7684\u4F5C\u7528\u548C\u5B9E\u73B0\u7EC6\u8282\u3002</p>\\n<p>User: def <strong>init</strong>(self, args):\\nsuper().<strong>init</strong>()</p>\\n<pre><code>    self.args = args\\n    self.transformer = nn.ModuleDict(dict(\\n        wte = nn.Embedding(args.vocab_size, args.n_embed),\\n        # \u83B7\u53D6token_embed\\n        wpe = nn.Embedding(args.block_size, args.n_embed),\\n        # \u4F7F\u7528\u4E00\u7EC4\u53EF\u5B66\u4E60\u7684\u4F4D\u7F6E\u7F16\u7801pos_embed\\n        drop = nn.Dropout(args.dropout),\\n        h = nn.ModuleList([Block(args) for i in range(args.n_layer)]),\\n        norm = RMS_Norm(args.n_embed)\\n    ))\\n\\n    self.lm_head = nn.Linear(args.n_embed, args.vocab_size,bias=False)\\n    self.transformer.wte.weight = self.lm_head.weight\\n    # \u8FD9\u91CC\u4E0D\u662F\u7B80\u7B80\u5355\u5355\u7684\u8D4B\u503C\uFF0C\u800C\u662Fwte\u548Clm_head\u5171\u4EAB\u53C2\u6570\\n    # lm_head (n_embed,vocab_size)\u76F8\u5F53\u4E8E\u4ECE\u8BCD\u5411\u91CF\u5230token\u7684\u9884\u6D4B\\n    # wte ()\\n\\n    self.apply(self._init_weights) # \u521D\u59CB\u5316\u6743\u91CD\\n    n_sum = 0\\n    # \u6B63\u6001\u5206\u5E03\u521D\u59CB\u5316attention\u7684\u6295\u5F71\u5C42\u548CMLP\u7684\u4E0B\u91C7\u6837\\n    for pname,p in self.named_parameters():\\n        n_sum = n_sum + p.numel() # \u987A\u5E26\u7EDF\u8BA1\u4E00\u4E0B\u53C2\u6570\\n        if pname.endswith('c_proj.weight'):# c_proj\u662F\u4E0A\u4E0B\u6587\u611F\u77E5\u7684\u6295\u5F71\u5C42\\n            torch.nn.init.normal_(p,mean=0.0, std=0.02/math.sqrt(2*args.n_layer))\\n\\n    print(f&quot;\u6A21\u578B\u53C2\u6570\u91CF\uFF1A{n_sum}&quot;)\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F GPT \u6A21\u578B\u7684\u521D\u59CB\u5316\u65B9\u6CD5 <code>__init__</code>\uFF0C\u5B83\u914D\u7F6E\u4E86\u6A21\u578B\u7684\u4E3B\u8981\u7EC4\u4EF6\u5E76\u521D\u59CB\u5316\u4E86\u6743\u91CD\u3002\u4EE5\u4E0B\u662F\u8BE6\u7EC6\u6B65\u9AA4\u548C\u5173\u952E\u70B9\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u7EE7\u627F\u548C\u521D\u59CB\u5316</strong>: <code>super().__init__()</code> \u8C03\u7528\u4E86\u57FA\u7C7B <code>nn.Module</code> \u7684\u6784\u9020\u51FD\u6570\uFF0C\u521D\u59CB\u5316\u4E86\u6A21\u578B\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u53C2\u6570\u5B58\u50A8</strong>: <code>self.args</code> \u5B58\u50A8\u4E86\u6A21\u578B\u53C2\u6570\uFF0C\u8FD9\u4E9B\u53C2\u6570\u901A\u8FC7 <code>args</code> \u5BF9\u8C61\u4F20\u9012\u8FDB\u6765\u3002</p>\\n</li>\\n<li>\\n<p><strong>ModuleDict \u521B\u5EFA</strong>: \u4F7F\u7528 <code>nn.ModuleDict</code> \u521B\u5EFA\u4E86\u4E00\u4E2A\u540D\u4E3A <code>self.transformer</code> \u7684\u5B57\u5178\uFF0C\u5B83\u5C06\u6A21\u578B\u7EC4\u4EF6\u540D\u79F0\u6620\u5C04\u5230\u76F8\u5E94\u7684\u6A21\u5757\u3002</p>\\n<ul>\\n<li><code>wte</code>: \u8BCD\u5D4C\u5165\u5C42\uFF0C\u5C06\u8BCD\u6C47\u6620\u5C04\u5230\u5D4C\u5165\u7A7A\u95F4\u3002</li>\\n<li><code>wpe</code>: \u4F4D\u7F6E\u7F16\u7801\u5C42\uFF0C\u4E3A\u5E8F\u5217\u4E2D\u6BCF\u4E2A\u4F4D\u7F6E\u63D0\u4F9B\u53EF\u5B66\u4E60\u7684\u5D4C\u5165\u3002</li>\\n<li><code>drop</code>: Dropout \u5C42\uFF0C\u7528\u4E8E\u6B63\u5219\u5316\u4EE5\u9632\u6B62\u8FC7\u62DF\u5408\u3002</li>\\n<li><code>h</code>: \u4E00\u4E2A\u7531\u591A\u4E2A <code>Block</code> \u7EC4\u6210\u7684\u5217\u8868\uFF0C\u6BCF\u4E2A <code>Block</code> \u5305\u542B\u6CE8\u610F\u529B\u673A\u5236\u548C MLP\u3002</li>\\n<li><code>norm</code>: \u6700\u7EC8\u7684\u5C42\u5F52\u4E00\u5316\u5C42\uFF0C\u7528\u4E8E\u89C4\u8303\u5316\u6A21\u578B\u8F93\u51FA\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5171\u4EAB\u6743\u91CD</strong>: <code>self.lm_head</code> \u662F\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF0C\u7528\u4E8E\u5C06\u6A21\u578B\u7684\u8F93\u51FA\u8F6C\u6362\u4E3A\u8BCD\u6C47\u8868\u4E0A\u7684\u6982\u7387\u5206\u5E03\u3002\u901A\u8FC7 <code>self.transformer.wte.weight = self.lm_head.weight</code>\uFF0C\u5B9E\u73B0\u4E86\u8BCD\u5D4C\u5165\u5C42 (<code>wte</code>) \u548C\u8BED\u8A00\u6A21\u578B\u5934\u90E8 (<code>lm_head)</code> \u7684\u6743\u91CD\u5171\u4EAB\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u6743\u91CD\u521D\u59CB\u5316</strong>: <code>self.apply(self._init_weights)</code> \u5E94\u7528\u4E86\u81EA\u5B9A\u4E49\u7684\u6743\u91CD\u521D\u59CB\u5316\u65B9\u6CD5 <code>_init_weights</code> \u5230\u6A21\u578B\u7684\u6240\u6709\u5B50\u6A21\u5757\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u53C2\u6570\u91CF\u7EDF\u8BA1</strong>: <code>n_sum</code> \u53D8\u91CF\u7528\u4E8E\u7EDF\u8BA1\u6A21\u578B\u7684\u603B\u53C2\u6570\u91CF\u3002\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u901A\u8FC7\u904D\u5386\u6A21\u578B\u7684\u547D\u540D\u53C2\u6570\u5E76\u4F7F\u7528 <code>p.numel()</code> \u8BA1\u7B97\u6BCF\u4E2A\u53C2\u6570\u7684\u5143\u7D20\u6570\u91CF\u6765\u5B9E\u73B0\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u7279\u6B8A\u521D\u59CB\u5316</strong>: \u5BF9\u4E8E\u4EE5 'c_proj.weight' \u7ED3\u5C3E\u7684\u53C2\u6570\u540D\uFF08\u5373\u4E0A\u4E0B\u6587\u611F\u77E5\u7684\u6295\u5F71\u5C42\uFF09\uFF0C\u4F7F\u7528\u6B63\u6001\u5206\u5E03\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5176\u6807\u51C6\u5DEE\u662F\u4F9D\u636E\u53C2\u6570\u7684\u7EF4\u5EA6\u548C\u5C42\u6570\u6765\u8C03\u6574\u7684\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u6253\u5370\u53C2\u6570\u91CF</strong>: \u6700\u540E\uFF0C\u6253\u5370\u51FA\u6A21\u578B\u7684\u603B\u53C2\u6570\u91CF\uFF0C\u8FD9\u6709\u52A9\u4E8E\u4E86\u89E3\u6A21\u578B\u7684\u5927\u5C0F\u3002</p>\\n</li>\\n</ol>\\n<p>\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0CGPT \u6A21\u578B\u88AB\u914D\u7F6E\u4E3A\u5177\u6709\u591A\u4E2A Transformer \u5757\uFF0C\u6BCF\u5757\u90FD\u5305\u542B\u81EA\u6CE8\u610F\u529B\u548C\u524D\u9988\u7F51\u7EDC\uFF0C\u4EE5\u53CA\u8BCD\u5D4C\u5165\u548C\u4F4D\u7F6E\u7F16\u7801\u5C42\u3002\u6743\u91CD\u5171\u4EAB\u51CF\u5C11\u4E86\u6A21\u578B\u7684\u53C2\u6570\u6570\u91CF\uFF0C\u800C\u5B9A\u5236\u7684\u521D\u59CB\u5316\u65B9\u6CD5\u6709\u52A9\u4E8E\u6A21\u578B\u7684\u5B66\u4E60\u3002</p>\\n<p>User: self.transformer = nn.ModuleDict(dict(\\nwte = nn.Embedding(args.vocab_size, args.n_embed), # \u83B7\u53D6 token_embed\\nwpe = nn.Embedding(args.block_size, args.n_embed), # \u4F7F\u7528\u4E00\u7EC4\u53EF\u5B66\u4E60\u7684\u4F4D\u7F6E\u7F16\u7801 pos_embed\\ndrop = nn.Dropout(args.dropout),\\nh = nn.ModuleList([Block(args) for i in range(args.n_layer)]),\\nnorm = RMS_Norm(args.n_embed)\\n))</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u4F7F\u7528 PyTorch \u7684 <code>nn.ModuleDict</code> \u521B\u5EFA\u4E86\u4E00\u4E2A\u5305\u542B\u6A21\u578B\u5404\u4E2A\u7EC4\u4EF6\u7684\u5B57\u5178\uFF0C\u6BCF\u4E2A\u7EC4\u4EF6\u90FD\u6620\u5C04\u5230\u4E00\u4E2A\u552F\u4E00\u7684\u540D\u79F0\u3002<code>ModuleDict</code> \u7EE7\u627F\u81EA Python \u7684\u5B57\u5178\uFF0C\u5E76\u6DFB\u52A0\u4E86\u5BF9\u952E\u4E3A\u6A21\u5757\u540D\u79F0\u3001\u503C\u4E3A <code>nn.Module</code> \u7684\u7279\u6B8A\u5904\u7406\u3002\u4E0B\u9762\u662F\u5BF9\u5404\u4E2A\u7EC4\u4EF6\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>wte (Word Token Embedding)</strong>:</p>\\n<ul>\\n<li><code>nn.Embedding(args.vocab_size, args.n_embed)</code> \u521B\u5EFA\u4E86\u4E00\u4E2A\u8BCD\u5D4C\u5165\u5C42\uFF0C\u5B83\u5C06\u8BCD\u6C47\u8868\u4E2D\u7684\u6BCF\u4E2A\u5355\u8BCD\uFF08token\uFF09\u6620\u5C04\u5230\u4E00\u4E2A\u56FA\u5B9A\u5927\u5C0F\u7684\u5D4C\u5165\u5411\u91CF\u3002<code>args.vocab_size</code> \u662F\u8BCD\u6C47\u8868\u7684\u5927\u5C0F\uFF0C\u800C <code>args.n_embed</code> \u662F\u5D4C\u5165\u5411\u91CF\u7684\u7EF4\u5EA6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>wpe (Weighted Positional Encoding)</strong>:</p>\\n<ul>\\n<li><code>nn.Embedding(args.block_size, args.n_embed)</code> \u521B\u5EFA\u4E86\u4F4D\u7F6E\u7F16\u7801\u5C42\uFF0C\u4E3A\u8F93\u5165\u5E8F\u5217\u4E2D\u7684\u6BCF\u4E2A\u4F4D\u7F6E\u63D0\u4F9B\u4E00\u7EC4\u53EF\u5B66\u4E60\u7684\u5D4C\u5165\u5411\u91CF\u3002<code>args.block_size</code> \u662F\u6A21\u578B\u5904\u7406\u7684\u6700\u5927\u5E8F\u5217\u957F\u5EA6\uFF0C<code>args.n_embed</code> \u662F\u5D4C\u5165\u5411\u91CF\u7684\u7EF4\u5EA6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>drop (Dropout)</strong>:</p>\\n<ul>\\n<li><code>nn.Dropout(args.dropout)</code> \u521B\u5EFA\u4E86\u4E00\u4E2A Dropout \u5C42\uFF0C\u7528\u4E8E\u5728\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u968F\u673A\u4E22\u5F03\u4E00\u4E9B\u6FC0\u6D3B\u503C\uFF0C\u4EE5\u51CF\u5C11\u8FC7\u62DF\u5408\u7684\u98CE\u9669\u3002<code>args.dropout</code> \u662F\u4E22\u5F03\u7684\u6982\u7387\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>h (Hidden Layers)</strong>:</p>\\n<ul>\\n<li><code>nn.ModuleList([Block(args) for i in range(args.n_layer)])</code> \u521B\u5EFA\u4E86\u4E00\u4E2A\u7531\u591A\u4E2A <code>Block</code> \u7EC4\u6210\u7684\u5217\u8868\uFF0C\u6BCF\u4E2A <code>Block</code> \u5B9E\u4F8B\u5316\u4E86\u4E00\u4E2A Transformer \u5C42\uFF0C\u5305\u542B\u81EA\u6CE8\u610F\u529B\u673A\u5236\u548C\u524D\u9988\u7F51\u7EDC\u3002<code>args.n_layer</code> \u6307\u5B9A\u4E86\u6A21\u578B\u4E2D Transformer \u5C42\u7684\u6570\u91CF\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>norm (Normalization)</strong>:</p>\\n<ul>\\n<li><code>RMS_Norm(args.n_embed)</code> \u521B\u5EFA\u4E86\u4E00\u4E2A\u5C42\u5F52\u4E00\u5316\u5C42\uFF0C\u7528\u4E8E\u89C4\u8303\u5316\u6A21\u578B\u7684\u8F93\u51FA\uFF0C\u4EE5\u7A33\u5B9A\u8BAD\u7EC3\u8FC7\u7A0B\u3002<code>args.n_embed</code> \u662F\u5F52\u4E00\u5316\u5C42\u7684\u8F93\u5165\u7EF4\u5EA6\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u4F7F\u7528 <code>nn.ModuleDict</code> \u7684\u597D\u5904\u662F\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u6E05\u6670\u7684\u65B9\u5F0F\u6765\u8BBF\u95EE\u548C\u64CD\u4F5C\u6A21\u578B\u7684\u5404\u4E2A\u7EC4\u4EF6\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u4F60\u60F3\u8981\u83B7\u53D6\u8BCD\u5D4C\u5165\u5C42\uFF0C\u4F60\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7\u540D\u79F0 <code>self.transformer['wte']</code> \u6765\u8BBF\u95EE\u5B83\u3002\u6B64\u5916\uFF0C<code>ModuleDict</code> \u4F1A\u81EA\u52A8\u5C06\u5B57\u5178\u4E2D\u7684\u6240\u6709\u6A21\u5757\u6CE8\u518C\u4E3A\u6A21\u578B\u7684\u5B50\u6A21\u5757\uFF0C\u8FD9\u610F\u5473\u7740\u5B83\u4EEC\u5C06\u88AB\u6B63\u786E\u5730\u7EB3\u5165\u6A21\u578B\u7684\u53C2\u6570\u5217\u8868\uFF0C\u5E76\u4E14 PyTorch \u7684\u4F18\u5316\u5668\u548C\u8BAD\u7EC3\u5FAA\u73AF\u5C06\u80FD\u591F\u8BC6\u522B\u5E76\u64CD\u4F5C\u5B83\u4EEC\u3002</p>\\n<p>\u8FD9\u79CD\u7EC4\u7EC7\u65B9\u5F0F\u4F7F\u5F97\u6A21\u578B\u7684\u7ED3\u6784\u66F4\u52A0\u6A21\u5757\u5316\uFF0C\u6613\u4E8E\u7406\u89E3\u548C\u7EF4\u62A4\u3002\u540C\u65F6\uFF0C\u5B83\u4E5F\u65B9\u4FBF\u4E86\u6A21\u578B\u7EC4\u4EF6\u7684\u6269\u5C55\u548C\u4FEE\u6539\u3002</p>\\n<p>User: nn.Embedding</p>\\n<p>Kimi: <code>nn.Embedding</code> \u662F PyTorch \u4E2D\u7684\u4E00\u4E2A\u6A21\u5757\uFF0C\u7528\u4E8E\u5C06\u79BB\u6563\u7684\u8F93\u5165\u6570\u636E\uFF08\u5982\u5355\u8BCD\u6216\u5B57\u7B26\u7684\u7D22\u5F15\uFF09\u5D4C\u5165\u5230\u8FDE\u7EED\u7684\u5411\u91CF\u7A7A\u95F4\u4E2D\u3002\u8FD9\u79CD\u5D4C\u5165\u901A\u5E38\u7528\u4E8E\u5904\u7406\u81EA\u7136\u8BED\u8A00\u5904\u7406\uFF08NLP\uFF09\u4E2D\u7684\u8BCD\u6C47\u8868\uFF0C\u4EE5\u53CA\u5176\u4ED6\u7C7B\u578B\u7684\u5206\u7C7B\u6570\u636E\u3002</p>\\n<p>\u4EE5\u4E0B\u662F <code>nn.Embedding</code> \u7684\u4E00\u4E9B\u5173\u952E\u7279\u6027\u548C\u7528\u6CD5\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u53C2\u6570</strong>:</p>\\n<ul>\\n<li><code>num_embeddings</code>: \u8BCD\u6C47\u8868\u7684\u5927\u5C0F\uFF0C\u5373\u9700\u8981\u5D4C\u5165\u7684\u4E0D\u540C\u5143\u7D20\u7684\u6570\u91CF\u3002</li>\\n<li><code>embedding_dim</code>: \u6BCF\u4E2A\u5143\u7D20\u5D4C\u5165\u5411\u91CF\u7684\u7EF4\u5EA6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u6743\u91CD</strong>:</p>\\n<ul>\\n<li><code>nn.Embedding</code> \u6709\u4E00\u4E2A\u53EF\u5B66\u4E60\u7684\u6743\u91CD\u77E9\u9635\uFF0C\u5176\u5F62\u72B6\u4E3A <code>(num_embeddings, embedding_dim)</code>\u3002\u8FD9\u4E2A\u77E9\u9635\u5728\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u88AB\u4F18\u5316\uFF0C\u4EE5\u6700\u597D\u5730\u8868\u793A\u8F93\u5165\u6570\u636E\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4F7F\u7528</strong>:</p>\\n<ul>\\n<li>\u5C06\u4E00\u4E2A\u5305\u542B\u7D22\u5F15\u7684\u5F20\u91CF\u4F5C\u4E3A\u8F93\u5165\uFF0C<code>nn.Embedding</code> \u4F1A\u8F93\u51FA\u4E00\u4E2A\u5F62\u72B6\u4E3A <code>(batch_size, num_embeddings, embedding_dim)</code> \u7684\u5F20\u91CF\uFF0C\u5176\u4E2D <code>batch_size</code> \u662F\u8F93\u5165\u5F20\u91CF\u4E2D\u7D22\u5F15\u5E8F\u5217\u7684\u6570\u91CF\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li>\u5D4C\u5165\u6743\u91CD\u901A\u5E38\u4F7F\u7528\u968F\u673A\u521D\u59CB\u5316\uFF0C\u4F46 PyTorch \u4E5F\u63D0\u4F9B\u4E86\u4E0D\u540C\u7684\u521D\u59CB\u5316\u65B9\u6CD5\uFF0C\u5982\u5747\u5300\u5206\u5E03\u3001\u6B63\u6001\u5206\u5E03\u7B49\uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>torch.nn.init</code> \u6A21\u5757\u8FDB\u884C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5171\u4EAB\u6743\u91CD</strong>:</p>\\n<ul>\\n<li>\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u4F60\u53EF\u80FD\u5E0C\u671B\u4E24\u4E2A\u4E0D\u540C\u7684\u5D4C\u5165\u5C42\u5171\u4EAB\u76F8\u540C\u7684\u6743\u91CD\u77E9\u9635\u3002\u8FD9\u53EF\u4EE5\u901A\u8FC7\u76F4\u63A5\u5C06\u4E00\u4E2A\u5D4C\u5165\u5C42\u7684\u6743\u91CD\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u5C42\u6765\u5B9E\u73B0\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u7A00\u758F\u6027</strong>:</p>\\n<ul>\\n<li>\u5982\u679C\u8BCD\u6C47\u8868\u975E\u5E38\u5927\uFF0C\u4F7F\u7528 <code>nn.Embedding</code> \u53EF\u80FD\u4F1A\u5360\u7528\u5927\u91CF\u5185\u5B58\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528\u7A00\u758F\u5D4C\u5165\u6765\u51CF\u5C11\u5185\u5B58\u4F7F\u7528\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4F18\u5316</strong>:</p>\\n<ul>\\n<li>\u67D0\u4E9B\u786C\u4EF6\u5E73\u53F0\uFF08\u5982 GPU\uFF09\u5BF9\u5D4C\u5165\u5C42\u7684\u4F18\u5316\u53EF\u4EE5\u63D0\u9AD8\u6027\u80FD\u3002PyTorch \u4F1A\u81EA\u52A8\u5229\u7528\u8FD9\u4E9B\u4F18\u5316\uFF0C\u4F46\u6839\u636E\u5177\u4F53\u60C5\u51B5\uFF0C\u53EF\u80FD\u9700\u8981\u8C03\u6574\u6279\u6B21\u5927\u5C0F\u6216\u5176\u4ED6\u53C2\u6570\u4EE5\u83B7\u5F97\u6700\u4F73\u6027\u80FD\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u4F7F\u7528\u793A\u4F8B\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> torch</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> torch</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">nn</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">as</span><span style=\\"color: #A6ACCD\\"> nn</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u5047\u8BBE\u6211\u4EEC\u6709\u4E00\u4E2A\u8BCD\u6C47\u8868\u5927\u5C0F\u4E3A1000\uFF0C\u5D4C\u5165\u7EF4\u5EA6\u4E3A300</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">vocab_size </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">1000</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">embedding_dim </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #F78C6C\\">300</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u521B\u5EFA\u5D4C\u5165\u5C42</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">embedding_layer </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">Embedding</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #A6ACCD\\">num_embeddings</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #82AAFF\\">vocab_size</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #A6ACCD\\">embedding_dim</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #82AAFF\\">embedding_dim</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u5047\u8BBE\u6211\u4EEC\u6709\u4E00\u4E9B\u5355\u8BCD\u7D22\u5F15\uFF0C\u5F62\u72B6\u4E3A (batch_size, sequence_length)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">input_indices </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> torch</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">randint</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> vocab_size</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">5</span><span style=\\"color: #89DDFF\\">))</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u968F\u673A\u751F\u6210\u4E00\u4E9B\u7D22\u5F15\u4F5C\u4E3A\u793A\u4F8B</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u901A\u8FC7\u5D4C\u5165\u5C42\u83B7\u53D6\u5D4C\u5165\u5411\u91CF</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">embedded_vectors </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">embedding_layer</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">input_indices</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">print</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">embedded_vectors</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">shape</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8F93\u51FA: (batch_size, sequence_length, embedding_dim)</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A\u793A\u4F8B\u4E2D\uFF0C<code>input_indices</code> \u662F\u4E00\u4E2A\u5305\u542B\u968F\u673A\u7D22\u5F15\u7684\u5F20\u91CF\uFF0C\u4EE3\u8868\u4E00\u6279\u5E8F\u5217\u3002<code>embedding_layer</code> \u5C06\u8FD9\u4E9B\u7D22\u5F15\u8F6C\u6362\u4E3A\u5BF9\u5E94\u7684\u5D4C\u5165\u5411\u91CF\u3002</p>\\n<p>User: nn.ModuleDict</p>\\n<p>Kimi: <code>nn.ModuleDict</code> \u662F PyTorch \u4E2D\u7684\u4E00\u4E2A\u5BB9\u5668\u7C7B\uFF0C\u7528\u4E8E\u5B58\u50A8\u548C\u7BA1\u7406\u4E00\u4E2A\u6709\u5E8F\u5B57\u5178\uFF08OrderedDict\uFF09\u7684 <code>nn.Module</code> \u5BF9\u8C61\u3002\u5B83\u7EE7\u627F\u81EA Python \u7684\u5B57\u5178\uFF0C\u5E76\u6DFB\u52A0\u4E86\u5BF9\u6A21\u578B\u7EC4\u4EF6\u7684\u7279\u6B8A\u5904\u7406\uFF0C\u4F7F\u5F97\u8FD9\u4E9B\u7EC4\u4EF6\u53EF\u4EE5\u4F5C\u4E3A\u795E\u7ECF\u7F51\u7EDC\u6A21\u578B\u7684\u5B50\u6A21\u5757\u8FDB\u884C\u6CE8\u518C\u548C\u8DDF\u8E2A\u3002\u4EE5\u4E0B\u662F <code>nn.ModuleDict</code> \u7684\u4E00\u4E9B\u5173\u952E\u7279\u6027\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u6709\u5E8F\u6027</strong>: <code>ModuleDict</code> \u4FDD\u7559\u4E86\u952E\u7684\u987A\u5E8F\uFF0C\u8FD9\u610F\u5473\u7740\u5728\u8FED\u4EE3\u6216\u5904\u7406\u5B57\u5178\u4E2D\u7684\u6A21\u5757\u65F6\uFF0C\u5B83\u4EEC\u5C06\u6309\u7167\u5B83\u4EEC\u88AB\u6DFB\u52A0\u7684\u987A\u5E8F\u51FA\u73B0\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u6A21\u5757\u6CE8\u518C</strong>: \u5F53\u4F60\u5411 <code>ModuleDict</code> \u6DFB\u52A0\u4E00\u4E2A <code>nn.Module</code> \u5BF9\u8C61\u65F6\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u4F1A\u81EA\u52A8\u88AB\u6CE8\u518C\u4E3A\u6A21\u578B\u7684\u5B50\u6A21\u5757\u3002\u8FD9\u4F7F\u5F97 PyTorch \u7684\u8BAD\u7EC3\u5FAA\u73AF\u80FD\u591F\u8BC6\u522B\u5E76\u66F4\u65B0\u8FD9\u4E9B\u5B50\u6A21\u5757\u7684\u53C2\u6570\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u8BBF\u95EE\u5B50\u6A21\u5757</strong>: \u4F60\u53EF\u4EE5\u4F7F\u7528\u6807\u51C6\u7684\u5B57\u5178\u8BED\u6CD5\u901A\u8FC7\u952E\u6765\u8BBF\u95EE <code>ModuleDict</code> \u4E2D\u7684\u6A21\u5757\u3002\u4F8B\u5982\uFF0C<code>module_dict[key]</code> \u5C06\u8FD4\u56DE\u4E0E\u952E\u76F8\u5173\u8054\u7684\u6A21\u5757\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u7279\u6B8A\u65B9\u6CD5</strong>: <code>ModuleDict</code> \u91CD\u5199\u4E86 <code>__getattr__</code> \u548C <code>__setattr__</code> \u65B9\u6CD5\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7\u5C5E\u6027\u8BBF\u95EE\u6216\u8BBE\u7F6E\u5B57\u5178\u4E2D\u7684\u952E\u503C\u5BF9\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u5D4C\u5957\u7ED3\u6784</strong>: <code>ModuleDict</code> \u53EF\u4EE5\u5305\u542B\u5176\u4ED6 <code>ModuleDict</code> \u6216 <code>nn.ModuleList</code>\uFF0C\u4ECE\u800C\u652F\u6301\u590D\u6742\u7684\u6A21\u578B\u7ED3\u6784\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u8BAD\u7EC3\u548C\u8BC4\u4F30\u6A21\u5F0F</strong>: <code>ModuleDict</code> \u4E2D\u7684\u6A21\u5757\u53EF\u4EE5\u7EDF\u4E00\u5730\u5207\u6362\u5230\u8BAD\u7EC3\u6A21\u5F0F\u6216\u8BC4\u4F30\u6A21\u5F0F\uFF0C\u4F7F\u7528 <code>.train()</code> \u6216 <code>.eval()</code> \u65B9\u6CD5\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u53C2\u6570\u8FED\u4EE3</strong>: \u5F53\u4F60\u8FED\u4EE3 <code>ModuleDict</code> \u7684\u53C2\u6570\u65F6\uFF0C\u5B83\u5C06\u8FED\u4EE3\u6240\u6709\u5B50\u6A21\u5757\u7684\u53C2\u6570\uFF0C\u8FD9\u5728\u81EA\u5B9A\u4E49\u521D\u59CB\u5316\u6216\u5904\u7406\u53C2\u6570\u65F6\u975E\u5E38\u6709\u7528\u3002</p>\\n</li>\\n<li>\\n<p><strong>\u4FDD\u5B58\u548C\u52A0\u8F7D</strong>: <code>ModuleDict</code> \u4E0E PyTorch \u7684\u4FDD\u5B58\u548C\u52A0\u8F7D\u673A\u5236\u517C\u5BB9\uFF0C\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u4FDD\u5B58\u6574\u4E2A\u6A21\u578B\u7684\u72B6\u6001\u6216\u8005\u52A0\u8F7D\u9884\u8BAD\u7EC3\u7684\u6743\u91CD\u3002</p>\\n</li>\\n</ol>\\n<p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u4F7F\u7528\u793A\u4F8B\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> torch</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> torch</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">nn</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">as</span><span style=\\"color: #A6ACCD\\"> nn</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">class</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #FFCB6B\\">MyModel</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #FFCB6B\\">nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #FFCB6B\\">Module</span><span style=\\"color: #89DDFF\\">):</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">    </span><span style=\\"color: #C792EA\\">def</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">__init__</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F07178\\">self</span><span style=\\"color: #89DDFF\\">):</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">        </span><span style=\\"color: #FFCB6B\\">super</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">MyModel</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #A6ACCD\\">self</span><span style=\\"color: #89DDFF\\">).</span><span style=\\"color: #82AAFF\\">__init__</span><span style=\\"color: #89DDFF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">        self</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">features</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">ModuleDict</span><span style=\\"color: #89DDFF\\">({</span></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">            </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">conv1</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #82AAFF\\"> nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">Conv2d</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">20</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">5</span><span style=\\"color: #89DDFF\\">),</span></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">            </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">conv2</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #82AAFF\\"> nn</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">Conv2d</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #F78C6C\\">20</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">20</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #F78C6C\\">5</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">        </span><span style=\\"color: #89DDFF\\">})</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">model </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #82AAFF\\">MyModel</span><span style=\\"color: #89DDFF\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">print</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">model</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">features</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #A6ACCD\\">  </span><span style=\\"color: #676E95\\"># \u8F93\u51FA: ModuleDict with keys: [&#39;conv1&#39;, &#39;conv2&#39;]</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u8BBF\u95EE\u7279\u5B9A\u7684\u6A21\u5757</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">conv1 </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> model</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">features</span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">conv1</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">print</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">conv1</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u5207\u6362\u5230\u8BAD\u7EC3\u6A21\u5F0F</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">model</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">train</span><span style=\\"color: #89DDFF\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u5207\u6362\u5230\u8BC4\u4F30\u6A21\u5F0F</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">model</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">eval</span><span style=\\"color: #89DDFF\\">()</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u5728\u8FD9\u4E2A\u793A\u4F8B\u4E2D\uFF0C<code>MyModel</code> \u5B9A\u4E49\u4E86\u4E00\u4E2A\u5305\u542B\u4E24\u4E2A\u5377\u79EF\u5C42\u7684 <code>ModuleDict</code>\u3002\u901A\u8FC7 <code>ModuleDict</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u65B9\u4FBF\u5730\u8BBF\u95EE\u548C\u7BA1\u7406\u6A21\u578B\u7684\u4E0D\u540C\u90E8\u5206\u3002</p>\\n<p>User: self.lm_head = nn.Linear(args.n_embed, args.vocab_size,bias=False)\\nself.transformer.wte.weight = self.lm_head.weight # \u8FD9\u91CC\u4E0D\u662F\u7B80\u7B80\u5355\u5355\u7684\u8D4B\u503C\uFF0C\u800C\u662F wte \u548C lm_head \u5171\u4EAB\u53C2\u6570 # lm_head (n_embed,vocab_size)\u76F8\u5F53\u4E8E\u4ECE\u8BCD\u5411\u91CF\u5230 token \u7684\u9884\u6D4B # wte ()</p>\\n<p>Kimi: \u5728\u8FD9\u6BB5\u4EE3\u7801\u4E2D\uFF0C<code>lm_head</code> \u662F\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF08<code>nn.Linear</code>\uFF09\uFF0C\u7528\u4E8E\u5C06 Transformer \u6A21\u578B\u7684\u8F93\u51FA\uFF08\u5373\u8BCD\u5411\u91CF\uFF09\u6620\u5C04\u5230\u8BCD\u6C47\u8868\u4E0A\u7684\u6982\u7387\u5206\u5E03\u3002\u8FD9\u91CC\u6709\u4E24\u4E2A\u5173\u952E\u64CD\u4F5C\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u521B\u5EFA\u8BED\u8A00\u6A21\u578B\u5934\u90E8</strong> (<code>self.lm_head</code>):</p>\\n<ul>\\n<li><code>nn.Linear(args.n_embed, args.vocab_size, bias=False)</code> \u521B\u5EFA\u4E86\u4E00\u4E2A\u7EBF\u6027\u5C42\uFF0C\u5176\u8F93\u5165\u7EF4\u5EA6\u662F <code>args.n_embed</code>\uFF08\u6A21\u578B\u7684\u5D4C\u5165\u7EF4\u5EA6\uFF09\uFF0C\u8F93\u51FA\u7EF4\u5EA6\u662F <code>args.vocab_size</code>\uFF08\u8BCD\u6C47\u8868\u7684\u5927\u5C0F\uFF09\u3002<code>bias=False</code> \u8868\u793A\u4E0D\u4F7F\u7528\u504F\u7F6E\u9879\uFF0C\u8FD9\u610F\u5473\u7740\u7EBF\u6027\u53D8\u6362\u53EA\u5305\u542B\u6743\u91CD\u77E9\u9635\u4E58\u4EE5\u8F93\u5165\uFF0C\u6CA1\u6709\u989D\u5916\u7684\u504F\u7F6E\u5411\u91CF\u52A0\u548C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5171\u4EAB\u6743\u91CD</strong> (<code>self.transformer.wte.weight = self.lm_head.weight</code>):</p>\\n<ul>\\n<li>\u8FD9\u884C\u4EE3\u7801\u5C06\u8BCD\u5D4C\u5165\u5C42\uFF08<code>wte</code>\uFF09\u7684\u6743\u91CD\u8BBE\u7F6E\u4E3A\u4E0E <code>lm_head</code> \u7684\u6743\u91CD\u76F8\u540C\u3002\u8FD9\u4E0D\u662F\u7B80\u5355\u7684\u8D4B\u503C\u64CD\u4F5C\uFF0C\u800C\u662F\u8BA9\u4E24\u4E2A\u5C42\u5171\u4EAB\u76F8\u540C\u7684\u6743\u91CD\u77E9\u9635\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u867D\u7136 <code>wte</code> \u548C <code>lm_head</code> \u5728\u6A21\u578B\u4E2D\u6709\u4E0D\u540C\u7684\u4F5C\u7528\uFF08\u4E00\u4E2A\u7528\u4E8E\u5C06\u8F93\u5165\u7684\u7D22\u5F15\u8F6C\u6362\u4E3A\u8BCD\u5411\u91CF\uFF0C\u53E6\u4E00\u4E2A\u7528\u4E8E\u5C06\u8BCD\u5411\u91CF\u6620\u5C04\u5230\u8F93\u51FA\u6982\u7387\uFF09\uFF0C\u4F46\u5B83\u4EEC\u4F7F\u7528\u76F8\u540C\u7684\u53C2\u6570\u96C6\u6765\u6267\u884C\u8FD9\u4E9B\u64CD\u4F5C\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u5171\u4EAB\u6743\u91CD\u7684\u597D\u5904\u5305\u62EC\uFF1A</p>\\n<ul>\\n<li><strong>\u53C2\u6570\u6548\u7387</strong>: \u7531\u4E8E <code>wte</code> \u548C <code>lm_head</code> \u5171\u4EAB\u6743\u91CD\uFF0C\u6A21\u578B\u7684\u53C2\u6570\u6570\u91CF\u51CF\u5C11\uFF0C\u8FD9\u6709\u52A9\u4E8E\u51CF\u5C11\u6A21\u578B\u7684\u590D\u6742\u6027\u548C\u8FC7\u62DF\u5408\u7684\u98CE\u9669\u3002</li>\\n<li><strong>\u4E00\u81F4\u6027</strong>: \u5171\u4EAB\u6743\u91CD\u786E\u4FDD\u4E86\u6A21\u578B\u5728\u5904\u7406\u8F93\u5165\u548C\u751F\u6210\u8F93\u51FA\u65F6\u4F7F\u7528\u4E00\u81F4\u7684\u8BCD\u5411\u91CF\u8868\u793A\uFF0C\u8FD9\u6709\u52A9\u4E8E\u6A21\u578B\u5B66\u4E60\u5230\u66F4\u52A0\u4E00\u81F4\u548C\u6CDB\u5316\u7684\u7279\u5F81\u8868\u793A\u3002</li>\\n<li><strong>\u6027\u80FD</strong>: \u5728\u8BAD\u7EC3\u548C\u63A8\u7406\u65F6\uFF0C\u5171\u4EAB\u6743\u91CD\u53EF\u4EE5\u51CF\u5C11\u5185\u5B58\u5360\u7528\u548C\u8BA1\u7B97\u91CF\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6A21\u578B\u7684\u6027\u80FD\u3002</li>\\n</ul>\\n<p>\u8FD9\u79CD\u6743\u91CD\u5171\u4EAB\u673A\u5236\u5728\u81EA\u7136\u8BED\u8A00\u5904\u7406\u4EFB\u52A1\u4E2D\u975E\u5E38\u5E38\u89C1\uFF0C\u7279\u522B\u662F\u5728 Transformer \u67B6\u6784\u7684\u6A21\u578B\u4E2D\uFF0C\u5982 GPT\u3001BERT \u7B49\u3002\u5B83\u5141\u8BB8\u6A21\u578B\u66F4\u6709\u6548\u5730\u5B66\u4E60\u548C\u4F7F\u7528\u8BCD\u6C47\u8868\u7684\u5D4C\u5165\u8868\u793A\u3002</p>\\n<p>User: self.apply(self.<em>init_weights) # \u521D\u59CB\u5316\u6743\u91CD\\nn_sum = 0 # \u6B63\u6001\u5206\u5E03\u521D\u59CB\u5316 attention \u7684\u6295\u5F71\u5C42\u548C MLP \u7684\u4E0B\u91C7\u6837\\nfor pname,p in self.named_parameters():\\nn_sum = n_sum + p.numel() # \u987A\u5E26\u7EDF\u8BA1\u4E00\u4E0B\u53C2\u6570\\nif pname.endswith('c_proj.weight'):# c_proj \u662F\u4E0A\u4E0B\u6587\u611F\u77E5\u7684\u6295\u5F71\u5C42\\ntorch.nn.init.normal</em>(p,mean=0.0, std=0.02/math.sqrt(2*args.n_layer))</p>\\n<pre><code>    print(f&quot;\u6A21\u578B\u53C2\u6570\u91CF\uFF1A{n_sum}&quot;)\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F GPT \u6A21\u578B\u4E2D\u7528\u4E8E\u521D\u59CB\u5316\u6743\u91CD\u548C\u7EDF\u8BA1\u6A21\u578B\u53C2\u6570\u91CF\u7684\u4EE3\u7801\u5757\u3002\u4E0B\u9762\u662F\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u6743\u91CD\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li><code>self.apply(self._init_weights)</code>: \u8FD9\u884C\u4EE3\u7801\u5E94\u7528\u4E86\u81EA\u5B9A\u4E49\u7684\u521D\u59CB\u5316\u65B9\u6CD5 <code>_init_weights</code> \u5230\u6A21\u578B\u7684\u6240\u6709\u5B50\u6A21\u5757\u3002<code>_init_weights</code> \u5E94\u8BE5\u662F\u5728\u6A21\u578B\u7C7B\u4E2D\u5B9A\u4E49\u7684\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u7528\u4E8E\u8BBE\u7F6E\u6743\u91CD\u7684\u521D\u59CB\u503C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u53C2\u6570\u91CF\u7EDF\u8BA1</strong>:</p>\\n<ul>\\n<li><code>n_sum = 0</code>: \u521D\u59CB\u5316\u4E00\u4E2A\u8BA1\u6570\u5668\uFF0C\u7528\u4E8E\u7EDF\u8BA1\u6A21\u578B\u4E2D\u7684\u603B\u53C2\u6570\u91CF\u3002</li>\\n<li><code>for pname, p in self.named_parameters()</code>: \u8FD9\u4E2A\u5FAA\u73AF\u904D\u5386\u6A21\u578B\u7684\u6240\u6709\u547D\u540D\u53C2\u6570\u3002<code>named_parameters</code> \u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u53C2\u6570\u540D\u548C\u53C2\u6570\u5F20\u91CF\u7684\u8FED\u4EE3\u5668\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u7D2F\u52A0\u53C2\u6570\u91CF</strong>:</p>\\n<ul>\\n<li><code>n_sum = n_sum + p.numel()</code>: \u5BF9\u4E8E\u6BCF\u4E2A\u53C2\u6570\u5F20\u91CF <code>p</code>\uFF0C\u4F7F\u7528 <code>numel()</code> \u65B9\u6CD5\u8BA1\u7B97\u5176\u5143\u7D20\u6570\u91CF\uFF0C\u5E76\u7D2F\u52A0\u5230 <code>n_sum</code> \u4E2D\uFF0C\u4ECE\u800C\u5F97\u5230\u6A21\u578B\u7684\u603B\u53C2\u6570\u91CF\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u7279\u6B8A\u53C2\u6570\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li><code>if pname.endswith('c_proj.weight')</code>: \u5982\u679C\u53C2\u6570\u540D\u4EE5 <code>'c_proj.weight'</code> \u7ED3\u5C3E\uFF0C\u8FD9\u901A\u5E38\u6307\u7684\u662F Transformer \u5757\u4E2D\u7684 MLP \u90E8\u5206\u7684\u4E0B\u91C7\u6837\uFF08down-projection\uFF09\u5C42\u7684\u6743\u91CD\u3002</li>\\n<li><code>torch.nn.init.normal_(p, mean=0.0, std=0.02/math.sqrt(2*args.n_layer))</code>: \u5BF9\u4E8E\u8FD9\u4E9B\u7279\u5B9A\u7684\u6743\u91CD\uFF0C\u4F7F\u7528\u6B63\u6001\u5206\u5E03\u8FDB\u884C\u521D\u59CB\u5316\u3002\u521D\u59CB\u5316\u7684\u5747\u503C\u4E3A 0.0\uFF0C\u6807\u51C6\u5DEE\u4E3A <code>0.02 / sqrt(2 * args.n_layer)</code>\u3002\u8FD9\u79CD\u521D\u59CB\u5316\u65B9\u6CD5\u6709\u52A9\u4E8E\u5728\u6A21\u578B\u8BAD\u7EC3\u7684\u65E9\u671F\u9636\u6BB5\u4FDD\u6301\u6FC0\u6D3B\u7684\u65B9\u5DEE\u7A33\u5B9A\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u6253\u5370\u6A21\u578B\u53C2\u6570\u91CF</strong>:</p>\\n<ul>\\n<li><code>print(f&quot;\u6A21\u578B\u53C2\u6570\u91CF\uFF1A{n_sum}&quot;)</code>: \u6700\u540E\uFF0C\u6253\u5370\u51FA\u7EDF\u8BA1\u5F97\u5230\u7684\u6A21\u578B\u603B\u53C2\u6570\u91CF\uFF0C\u8FD9\u6709\u52A9\u4E8E\u4E86\u89E3\u6A21\u578B\u7684\u5927\u5C0F\u548C\u590D\u6742\u5EA6\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u79CD\u521D\u59CB\u5316\u548C\u53C2\u6570\u7EDF\u8BA1\u7684\u65B9\u6CD5\u5728\u6DF1\u5EA6\u5B66\u4E60\u6A21\u578B\u4E2D\u5F88\u5E38\u89C1\uFF0C\u7279\u522B\u662F\u5728\u81EA\u5B9A\u4E49\u6A21\u578B\u65F6\uFF0C\u5B83\u6709\u52A9\u4E8E\u786E\u4FDD\u6743\u91CD\u4EE5\u4E00\u79CD\u6709\u52A9\u4E8E\u6A21\u578B\u5B66\u4E60\u7684\u65B9\u5F0F\u5F00\u59CB\u8BAD\u7EC3\uFF0C\u5E76\u4E14\u53EF\u4EE5\u76D1\u63A7\u6A21\u578B\u7684\u5927\u5C0F\uFF0C\u4EE5\u4FBF\u4E8E\u8C03\u6574\u548C\u4F18\u5316\u3002</p>\\n<p>User: def <em>init_weights(self,module):# \u521D\u59CB\u5316\u5148\u884C\u5C42\u548C embedding\\nif isinstance(module, nn.Linear):\\ntorch.nn.init.normal</em>(module.weight, mean=0.0, std=0.02)\\nif module.bias is not None:\\ntorch.nn.init.zeros*(module.bias)\\nelif isinstance(module, nn.Embedding):\\ntorch.nn.init.normal*(module.weight, mean=0.0, std=0.02)</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>_init_weights</code> \u7684\u81EA\u5B9A\u4E49\u6743\u91CD\u521D\u59CB\u5316\u65B9\u6CD5\uFF0C\u5B83\u662F\u6A21\u578B\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\u7684\u4E00\u90E8\u5206\u3002\u8FD9\u4E2A\u65B9\u6CD5\u901A\u8FC7\u9012\u5F52\u5730\u8BBF\u95EE\u6A21\u578B\u4E2D\u7684\u6BCF\u4E2A\u6A21\u5757\uFF0C\u5E76\u6839\u636E\u6A21\u5757\u7684\u7C7B\u578B\u5E94\u7528\u7279\u5B9A\u7684\u521D\u59CB\u5316\u7B56\u7565\u3002\u4EE5\u4E0B\u662F\u8BE5\u65B9\u6CD5\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u65B9\u6CD5\u5B9A\u4E49</strong>:</p>\\n<ul>\\n<li><code>def _init_weights(self, module):</code> \u5B9A\u4E49\u4E86\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5B83\u63A5\u53D7\u4E00\u4E2A\u6A21\u5757\u4F5C\u4E3A\u53C2\u6570\u3002\u8FD9\u4E2A\u65B9\u6CD5\u662F\u6A21\u578B\u7C7B\u7684\u6210\u5458\u51FD\u6570\uFF0C\u56E0\u6B64 <code>self</code> \u5F15\u7528\u5F53\u524D\u7684\u6A21\u578B\u5B9E\u4F8B\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u68C0\u67E5\u6A21\u5757\u7C7B\u578B</strong>:</p>\\n<ul>\\n<li><code>if isinstance(module, nn.Linear):</code> \u8FD9\u4E2A\u6761\u4EF6\u5224\u65AD\u5F53\u524D\u6A21\u5757\u662F\u5426\u662F <code>nn.Linear</code> \u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5373\u662F\u5426\u4E3A\u7EBF\u6027\u5C42\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u7EBF\u6027\u5C42\u6743\u91CD\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li><code>torch.nn.init.normal_(module.weight, mean=0.0, std=0.02)</code> \u5BF9\u4E8E\u7EBF\u6027\u5C42\u7684\u6743\u91CD\uFF0C\u4F7F\u7528\u6B63\u6001\u5206\u5E03\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5747\u503C\u8BBE\u4E3A 0.0\uFF0C\u6807\u51C6\u5DEE\u8BBE\u4E3A 0.02\u3002\u8FD9\u662F\u4E00\u79CD\u5E38\u89C1\u7684\u521D\u59CB\u5316\u65B9\u6CD5\uFF0C\u6709\u52A9\u4E8E\u5728\u8BAD\u7EC3\u5F00\u59CB\u65F6\u4E3A\u6743\u91CD\u63D0\u4F9B\u4E00\u4E2A\u8F83\u5C0F\u7684\u968F\u673A\u503C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u7EBF\u6027\u5C42\u504F\u7F6E\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li><code>if module.bias is not None:</code> \u8FD9\u4E2A\u6761\u4EF6\u68C0\u67E5\u7EBF\u6027\u5C42\u662F\u5426\u6709\u504F\u7F6E\u9879\u3002</li>\\n<li><code>torch.nn.init.zeros_(module.bias)</code> \u5982\u679C\u5B58\u5728\u504F\u7F6E\u9879\uFF0C\u5219\u5C06\u5176\u521D\u59CB\u5316\u4E3A 0\u3002\u8FD9\u901A\u5E38\u610F\u5473\u7740\u504F\u7F6E\u88AB\u521D\u59CB\u5316\u4E3A\u5747\u503C 0\uFF0C\u6709\u52A9\u4E8E\u6A21\u578B\u4ECE\u96F6\u5F00\u59CB\u5B66\u4E60\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5D4C\u5165\u5C42\u6743\u91CD\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li><code>elif isinstance(module, nn.Embedding):</code> \u8FD9\u4E2A\u6761\u4EF6\u5224\u65AD\u5F53\u524D\u6A21\u5757\u662F\u5426\u662F <code>nn.Embedding</code> \u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5373\u662F\u5426\u4E3A\u5D4C\u5165\u5C42\u3002</li>\\n<li><code>torch.nn.init.normal_(module.weight, mean=0.0, std=0.02)</code> \u5BF9\u4E8E\u5D4C\u5165\u5C42\u7684\u6743\u91CD\uFF0C\u4E5F\u4F7F\u7528\u6B63\u6001\u5206\u5E03\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u4E0E\u7EBF\u6027\u5C42\u7684\u6743\u91CD\u521D\u59CB\u5316\u65B9\u6CD5\u76F8\u540C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u9012\u5F52\u521D\u59CB\u5316</strong>:</p>\\n<ul>\\n<li>\u7531\u4E8E <code>_init_weights</code> \u65B9\u6CD5\u4F7F\u7528 <code>self.apply</code> \u8C03\u7528\uFF0C\u5B83\u4F1A\u9012\u5F52\u5730\u5BF9\u6A21\u578B\u4E2D\u7684\u6240\u6709\u5B50\u6A21\u5757\u6267\u884C\u521D\u59CB\u5316\u3002\u8FD9\u610F\u5473\u7740\u65E0\u8BBA\u6A21\u578B\u7ED3\u6784\u591A\u4E48\u590D\u6742\uFF0C\u6240\u6709\u5B50\u6A21\u5757\u7684\u6743\u91CD\u90FD\u4F1A\u6309\u7167\u5B9A\u4E49\u7684\u7B56\u7565\u8FDB\u884C\u521D\u59CB\u5316\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u79CD\u521D\u59CB\u5316\u65B9\u6CD5\u7684\u597D\u5904\u662F\u786E\u4FDD\u4E86\u6A21\u578B\u4E2D\u7684\u53C2\u6570\u4ECE\u4E00\u4E2A\u5408\u7406\u7684\u8D77\u70B9\u5F00\u59CB\u8BAD\u7EC3\uFF0C\u6709\u52A9\u4E8E\u907F\u514D\u68AF\u5EA6\u6D88\u5931\u6216\u7206\u70B8\u7684\u95EE\u9898\uFF0C\u7279\u522B\u662F\u5728\u6DF1\u5EA6\u795E\u7ECF\u7F51\u7EDC\u4E2D\u3002\u901A\u8FC7\u81EA\u5B9A\u4E49\u521D\u59CB\u5316\u65B9\u6CD5\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u7075\u6D3B\u5730\u63A7\u5236\u6A21\u578B\u53C2\u6570\u7684\u521D\u59CB\u72B6\u6001\uFF0C\u4EE5\u9002\u5E94\u4E0D\u540C\u7684\u6A21\u578B\u67B6\u6784\u548C\u8BAD\u7EC3\u7B56\u7565\u3002</p>\\n<p>User: def forward(self, idx, targets = None): # targets \u662F\u8BAD\u7EC3\u65F6\u4F20\u5165\u7684\u76EE\u6807\uFF0C\u7528\u6765\u8BA1\u7B97\u4EA4\u53C9\u71B5 loss\\ndevice = idx.device\\nB,T = idx.size()\\npos = torch.arange(0,T,dtype=torch.long,device=device) # \u4F4D\u7F6E</p>\\n<pre><code>    # embedding\\n    token_embed = self.transformer.wte(idx) # (B,T,n_embed)\\n    pos_embed = self.transformer.wpe(pos)# (t,n_embed)\\n    # \u4F4D\u7F6Eembed\u53EF\u5B66\u4E60\\n\\n    x = self.transformer.drop(token_embed+pos_embed) # \u5408\u5E76token\u548Cpos\\n    for block in self.transformer.h:\\n        x = block(x)\\n    x = self.transformer.norm(x)\\n\\n    # \u7ECF\u8FC7lm_head\\n    # target= True \u8868\u793A\u6A21\u578B\u6B63\u5728\u8BAD\u7EC3\u9636\u6BB5\uFF0C\u9700\u8981\u56DE\u4F20loss\\n    # logits\u53D6\u6700\u540E\u4E00\u4E2A\uFF08-1\uFF09\u5373\u751F\u6210\u51FA\u6765\u7684\u4E1C\u897F\uFF0C\u8FD9\u6837\u548C\u76EE\u6807\u7684\u4E00\u4E2Atoken\u7EF4\u5EA6\u76F8\u540C\uFF0C\u624D\u597D\u8BA1\u7B97\u635F\u5931\\n\\n    if targets is not None:\\n        logits = self.lm_head(x)\\n        # \u7528-1\u53D6\u6700\u540E\u4E00\u7EF4\u5EA6\u4E2A\uFF0C\u628A\u524D\u9762\u7684t\u4E22\u6389(t,vocab_size)-&gt;(vocab_size)\\n        loss = F.cross_entropy(logits.view(-1,logits.size(-1)),targets.view(-1),ignore_index=-1) # \u4EA4\u53C9\u71B5\u635F\u5931\\n    else: # generate\u65F6\u4F7F\u7528\\n        logits = self.lm_head(x)\\n        loss = None\\n\\n    return logits,loss\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F GPT \u6A21\u578B\u7684\u524D\u5411\u4F20\u64AD\u65B9\u6CD5 <code>forward</code>\uFF0C\u5B83\u5B9A\u4E49\u4E86\u6A21\u578B\u5982\u4F55\u5904\u7406\u8F93\u5165\u6570\u636E\u5E76\u8BA1\u7B97\u8F93\u51FA\u3002\u4EE5\u4E0B\u662F\u8BE6\u7EC6\u6B65\u9AA4\u548C\u5173\u952E\u70B9\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u65B9\u6CD5\u5B9A\u4E49</strong>:</p>\\n<ul>\\n<li><code>def forward(self, idx, targets=None)</code>: \u5B9A\u4E49\u4E86\u524D\u5411\u4F20\u64AD\u51FD\u6570\uFF0C\u63A5\u53D7\u8F93\u5165 <code>idx</code>\uFF08\u901A\u5E38\u662F\u8BCD\u6C47\u8868\u7D22\u5F15\u7684\u5F20\u91CF\uFF09\u548C\u53EF\u9009\u7684 <code>targets</code> \u53C2\u6570\uFF08\u8BAD\u7EC3\u65F6\u7684\u76EE\u6807\u5F20\u91CF\uFF09\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BBE\u5907\u4E00\u81F4\u6027</strong>:</p>\\n<ul>\\n<li><code>device = idx.device</code>: \u83B7\u53D6\u8F93\u5165\u6570\u636E <code>idx</code> \u7684\u8BBE\u5907\uFF08CPU \u6216 GPU\uFF09\uFF0C\u786E\u4FDD\u6240\u6709\u7684\u64CD\u4F5C\u90FD\u5728\u76F8\u540C\u7684\u8BBE\u5907\u4E0A\u6267\u884C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8F93\u5165\u5C3A\u5BF8</strong>:</p>\\n<ul>\\n<li><code>B,T = idx.size()</code>: \u83B7\u53D6\u8F93\u5165 <code>idx</code> \u7684\u5C3A\u5BF8\uFF0C\u5176\u4E2D <code>B</code> \u662F\u6279\u6B21\u5927\u5C0F\uFF0C<code>T</code> \u662F\u5E8F\u5217\u957F\u5EA6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4F4D\u7F6E\u7F16\u7801</strong>:</p>\\n<ul>\\n<li><code>pos = torch.arange(0, T, dtype=torch.long, device=device)</code>: \u521B\u5EFA\u4E00\u4E2A\u4ECE 0 \u5230 <code>T-1</code> \u7684\u4F4D\u7F6E\u7D22\u5F15\u5F20\u91CF\uFF0C\u7528\u4E8E\u4F4D\u7F6E\u7F16\u7801\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5D4C\u5165\u5C42</strong>:</p>\\n<ul>\\n<li><code>token_embed = self.transformer.wte(idx)</code>: \u5C06\u8F93\u5165\u7684\u7D22\u5F15 <code>idx</code> \u901A\u8FC7\u8BCD\u5D4C\u5165\u5C42 <code>wte</code> \u8F6C\u6362\u4E3A\u8BCD\u5411\u91CF\u3002</li>\\n<li><code>pos_embed = self.transformer.wpe(pos)</code>: \u5C06\u4F4D\u7F6E\u7D22\u5F15 <code>pos</code> \u901A\u8FC7\u4F4D\u7F6E\u7F16\u7801\u5C42 <code>wpe</code> \u8F6C\u6362\u4E3A\u4F4D\u7F6E\u7F16\u7801\u5411\u91CF\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5408\u5E76\u5D4C\u5165</strong>:</p>\\n<ul>\\n<li><code>x = self.transformer.drop(token_embed + pos_embed)</code>: \u5C06\u8BCD\u5D4C\u5165\u548C\u4F4D\u7F6E\u7F16\u7801\u5411\u91CF\u76F8\u52A0\uFF0C\u5E76\u901A\u8FC7 Dropout \u5C42 <code>drop</code>\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>Transformer \u5757\u5904\u7406</strong>:</p>\\n<ul>\\n<li><code>for block in self.transformer.h:</code>: \u904D\u5386\u6240\u6709\u7684 Transformer \u5757\uFF0C\u5E76\u5C06\u6570\u636E <code>x</code> \u4F20\u9012\u7ED9\u6BCF\u4E2A\u5757\u8FDB\u884C\u5904\u7406\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5C42\u5F52\u4E00\u5316</strong>:</p>\\n<ul>\\n<li><code>x = self.transformer.norm(x)</code>: \u4F7F\u7528\u5C42\u5F52\u4E00\u5316 <code>norm</code> \u5BF9\u6700\u7EC8\u7684\u8F93\u51FA\u8FDB\u884C\u5F52\u4E00\u5316\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8F93\u51FA\u5C42</strong>:</p>\\n<ul>\\n<li><code>logits = self.lm_head(x)</code>: \u5C06\u5F52\u4E00\u5316\u540E\u7684\u8F93\u51FA <code>x</code> \u901A\u8FC7\u7EBF\u6027\u5C42 <code>lm_head</code> \u8F6C\u6362\u4E3A logits\uFF0C\u5373\u8BCD\u6C47\u8868\u4E0A\u7684\u6982\u7387\u5206\u5E03\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BAD\u7EC3\u4E0E\u63A8\u7406</strong>:</p>\\n<ul>\\n<li>\u5982\u679C <code>targets</code> \u4E0D\u4E3A <code>None</code>\uFF08\u5373\u6A21\u578B\u5904\u4E8E\u8BAD\u7EC3\u9636\u6BB5\uFF09\uFF0C\u5219\u8BA1\u7B97\u4EA4\u53C9\u71B5\u635F\u5931\uFF1A\\n<ul>\\n<li><code>loss = F.cross_entropy(...)</code>: \u4F7F\u7528 <code>logits</code> \u548C <code>targets</code> \u8BA1\u7B97\u4EA4\u53C9\u71B5\u635F\u5931\u3002<code>ignore_index=-1</code> \u8868\u793A\u5728\u8BA1\u7B97\u635F\u5931\u65F6\u5FFD\u7565\u503C\u4E3A -1 \u7684\u76EE\u6807\u7D22\u5F15\u3002</li>\\n</ul>\\n</li>\\n<li>\u5982\u679C <code>targets</code> \u4E3A <code>None</code>\uFF08\u5373\u6A21\u578B\u5904\u4E8E\u63A8\u7406\u9636\u6BB5\uFF09\uFF0C\u5219\u4E0D\u8BA1\u7B97\u635F\u5931\uFF0C\u53EA\u8FD4\u56DE logits\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8FD4\u56DE\u503C</strong>:</p>\\n<ul>\\n<li><code>return logits, loss</code>: \u8FD4\u56DE\u6A21\u578B\u7684 logits \u548C\uFF08\u5982\u679C\u63D0\u4F9B <code>targets</code>\uFF09\u635F\u5931\u503C\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A\u65B9\u6CD5\u7ED3\u5408\u4E86\u6A21\u578B\u7684\u6240\u6709\u7EC4\u4EF6\uFF0C\u5305\u62EC\u5D4C\u5165\u5C42\u3001Transformer \u5757\u3001\u5C42\u5F52\u4E00\u5316\u548C\u8F93\u51FA\u5C42\uFF0C\u4EE5\u53CA\u8BAD\u7EC3\u548C\u63A8\u7406\u65F6\u7684\u4E0D\u540C\u884C\u4E3A\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0CGPT \u6A21\u578B\u53EF\u4EE5\u5904\u7406\u8F93\u5165\u6570\u636E\uFF0C\u5E76\u5728\u8BAD\u7EC3\u65F6\u63D0\u4F9B\u635F\u5931\u503C\uFF0C\u4EE5\u4FBF\u8FDB\u884C\u68AF\u5EA6\u4E0B\u964D\u4F18\u5316\u3002\u5728\u63A8\u7406\u65F6\uFF0C\u5B83\u751F\u6210 logits\uFF0C\u53EF\u4EE5\u7528\u4E8E\u751F\u6210\u6587\u672C\u6216\u5176\u4ED6\u4E0B\u6E38\u4EFB\u52A1\u3002</p>\\n<p pn:p=\\"\\" for=\\"\\" pn,p=\\"\\" in=\\"\\" param_dict.items()=\\"\\" if=\\"\\" p.requires_grad=\\"\\">User: def configure_optimizers(self,weight_decay,learning_rate,betas,device_type): # \u5EFA\u7ACB\u4E00\u4E2A\u4ECE\u53C2\u6570\u540D\u5230\u53C2\u6570\u7684 dict\\nparam_dict = {pn:p for pn,p in self.named_parameters()} # \u518D\u53BB\u6389\u4E0D\u7528\u8BA1\u7B97\u68AF\u5EA6\u7684\u90E8\u5206\\nparam_dict =</p>\\n<pre><code>    # weight decay\\n    # \u5BF9\u4E8C\u7EF4\u7684\u53C2\u6570\u4F7F\u7528weight decay\uFF0C\u5176\u4ED6\u4E0D\u7528\uFF0C\u8FD9\u6837\u5206\u6210\u4E24\u7EC4\\n    decay_params = [p for pn,p in param_dict.items() if p.dim() &gt;= 2]\\n    nodecay_params = [p for pn,p in param_dict.items() if p.dim() &lt; 2]\\n    # dict.items()\u662F\u8FD4\u56DE\u4E00\u4E2Akey\u548Cvalue\u5143\u7EC4\u7684list [(k1,v1),(k2,v2)]\\n    optim_groups = [\\n        {'params': decay_params, 'weight_decay': weight_decay},\\n        {'params': nodecay_params, 'weight_decay': 0.0}\\n    ]\\n    # \u7EDF\u8BA1\u4E00\u4E0Bdecay\u548C\u4E0Ddecay\u7684\u53C2\u6570\u91CF\\n    num_decay = sum(p.numel() for p in decay_params)\\n    num_nodecay = sum(p.numel() for p in nodecay_params)\\n    print(f&quot;\u4F7F\u7528weight decay\u7684\u53C2\u6570\u91CF\u4E3A{num_decay},\u4E0D\u4F7F\u7528weight decay\u7684\u53C2\u6570\u91CF\u4E3A{num_nodecay}&quot;)\\n\\n    # \u8FD9\u6BB5\u662F\u5EFA\u7ACB\u4E00\u4E2AAdamW\u4F18\u5316\u5668\uFF0C\u770B\u7248\u672C\u662F\u5426\u652F\u6301fused\u878D\u5408\\n    # \u5224\u65ADAdam\u7684\u53C2\u6570\u5B57\u5178\u4E2D\u662F\u5426\u5305\u542Bfused\uFF0C\u5982\u679C\u6709\uFF0C\u628A\u5B83\u6DFB\u52A0\u5230extra args\u4E2D\\n    fused_avail = 'fused' in inspect.signature(torch.optim.AdamW).parameters\\n    # inspect.signature(fn).parameters\u8FD4\u56DE\u53C2\u6570list\\n    use_fused = fused_avail and device_type == 'cuda' # \u5E76\u4E14\u8981\u6709gpu\\n    if use_fused:\\n        print(&quot;AdamW optimiser use fused!&quot;)\\n    extra_args = {'fused':True} if use_fused else dict()\\n    optimizer = torch.optim.AdamW(optim_groups,lr = learning_rate,betas = betas,**extra_args)\\n    # betas:\u8BA1\u7B97\u68AF\u5EA6\u4EE5\u53CA\u68AF\u5EA6\u5E73\u65B9\u7684\u8FD0\u884C\u5E73\u5747\u503C\u7684\u7CFB\u6570\\n    # ** \u7528\u4E8E\u5C06\u4E00\u4E2A\u5B57\u5178\u89E3\u5305\u6210\u5173\u952E\u5B57\u53C2\u6570\u4F20\u9012\u7ED9\u51FD\u6570\\n\\n    return optimizer\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>configure_optimizers</code> \u7684\u65B9\u6CD5\uFF0C\u7528\u4E8E\u914D\u7F6E\u548C\u8FD4\u56DE\u4E00\u4E2A\u4F18\u5316\u5668\uFF0C\u5B83\u662F\u6A21\u578B\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u7528\u4E8E\u66F4\u65B0\u6A21\u578B\u53C2\u6570\u7684\u5173\u952E\u7EC4\u4EF6\u3002\u4EE5\u4E0B\u662F\u8BE5\u65B9\u6CD5\u7684\u8BE6\u7EC6\u6B65\u9AA4\u548C\u5173\u952E\u70B9\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u53C2\u6570\u5B57\u5178</strong>:</p>\\n<ul>\\n<li><code>param_dict = {pn: p for pn, p in self.named_parameters()}</code>: \u521B\u5EFA\u4E00\u4E2A\u5B57\u5178\uFF0C\u5305\u542B\u6A21\u578B\u7684\u6240\u6709\u547D\u540D\u53C2\u6570\u53CA\u5176\u5BF9\u5E94\u7684\u53C2\u6570\u5F20\u91CF\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8FC7\u6EE4\u53C2\u6570</strong>:</p>\\n<ul>\\n<li><code>param_dict = {pn: p for pn, p in param_dict.items() if p.requires_grad}</code>: \u8FC7\u6EE4\u6389\u4E0D\u9700\u8981\u8BA1\u7B97\u68AF\u5EA6\u7684\u53C2\u6570\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5206\u7EC4\u53C2\u6570</strong>:</p>\\n<ul>\\n<li><code>decay_params = [p for pn, p in param_dict.items() if p.dim() &gt;= 2]</code>: \u9009\u62E9\u9700\u8981\u4F7F\u7528\u6743\u91CD\u8870\u51CF\uFF08weight decay\uFF09\u7684\u53C2\u6570\uFF0C\u901A\u5E38\u662F\u4E8C\u7EF4\u5F20\u91CF\uFF0C\u5982\u6743\u91CD\u77E9\u9635\u3002</li>\\n<li><code>nodecay_params = [p for pn, p in param_dict.items() if p.dim() &lt; 2]</code>: \u9009\u62E9\u4E0D\u9700\u8981\u6743\u91CD\u8870\u51CF\u7684\u53C2\u6570\uFF0C\u5982\u504F\u7F6E\u9879\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4F18\u5316\u5668\u5206\u7EC4</strong>:</p>\\n<ul>\\n<li><code>optim_groups</code>: \u521B\u5EFA\u4E24\u4E2A\u4F18\u5316\u5668\u53C2\u6570\u7EC4\uFF0C\u4E00\u4E2A\u5305\u542B\u9700\u8981\u6743\u91CD\u8870\u51CF\u7684\u53C2\u6570\uFF0C\u53E6\u4E00\u4E2A\u5305\u542B\u4E0D\u9700\u8981\u6743\u91CD\u8870\u51CF\u7684\u53C2\u6570\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u6253\u5370\u53C2\u6570\u91CF</strong>:</p>\\n<ul>\\n<li>\u6253\u5370\u51FA\u4F7F\u7528\u6743\u91CD\u8870\u51CF\u548C\u4E0D\u4F7F\u7528\u6743\u91CD\u8870\u51CF\u7684\u53C2\u6570\u91CF\uFF0C\u4EE5\u4FBF\u4E8E\u76D1\u63A7\u548C\u8C03\u8BD5\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u68C0\u67E5 AdamW \u4F18\u5316\u5668\u9009\u9879</strong>:</p>\\n<ul>\\n<li>\u4F7F\u7528 <code>inspect.signature</code> \u68C0\u67E5 PyTorch \u662F\u5426\u652F\u6301 AdamW \u4F18\u5316\u5668\u7684 <code>fused</code> \u9009\u9879\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u914D\u7F6E AdamW \u4F18\u5316\u5668</strong>:</p>\\n<ul>\\n<li>\u5982\u679C <code>device_type</code> \u662F <code>'cuda'</code>\uFF08\u5373\u5728 GPU \u4E0A\u8BAD\u7EC3\uFF09\uFF0C\u5E76\u4E14 PyTorch \u652F\u6301 <code>fused</code>\uFF0C\u5219\u4F7F\u7528\u878D\u5408\u7684 AdamW \u4F18\u5316\u5668\u5B9E\u73B0\uFF0C\u8FD9\u53EF\u4EE5\u63D0\u9AD8\u6027\u80FD\u3002</li>\\n<li><code>extra_args</code>: \u5982\u679C\u4F7F\u7528\u878D\u5408\u4F18\u5316\u5668\uFF0C\u5219\u6DFB\u52A0 <code>fused=True</code> \u5230\u989D\u5916\u53C2\u6570\u4E2D\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u521B\u5EFA\u4F18\u5316\u5668</strong>:</p>\\n<ul>\\n<li><code>optimizer = torch.optim.AdamW(optim_groups, lr=learning_rate, betas=betas, **extra_args)</code>: \u4F7F\u7528\u914D\u7F6E\u597D\u7684\u53C2\u6570\u7EC4\u3001\u5B66\u4E60\u7387\u3001\u52A8\u91CF\u53C2\u6570\uFF08betas\uFF09\u548C\u989D\u5916\u53C2\u6570\u521B\u5EFA AdamW \u4F18\u5316\u5668\u5B9E\u4F8B\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8FD4\u56DE\u4F18\u5316\u5668</strong>:</p>\\n<ul>\\n<li><code>return optimizer</code>: \u8FD4\u56DE\u521B\u5EFA\u7684\u4F18\u5316\u5668\u5B9E\u4F8B\uFF0C\u4EE5\u4FBF\u5728\u8BAD\u7EC3\u5FAA\u73AF\u4E2D\u4F7F\u7528\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>AdamW \u4F18\u5316\u5668\u662F Adam \u4F18\u5316\u5668\u7684\u4E00\u4E2A\u53D8\u4F53\uFF0C\u5B83\u5728\u6807\u51C6 Adam \u4F18\u5316\u5668\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E86\u6743\u91CD\u8870\u51CF\u3002\u901A\u8FC7\u5C06\u6743\u91CD\u8870\u51CF\u76F4\u63A5\u6574\u5408\u5230\u4F18\u5316\u5668\u6B65\u9AA4\u4E2D\uFF0CAdamW \u53EF\u4EE5\u66F4\u6709\u6548\u5730\u5904\u7406\u7A00\u758F\u6570\u636E\u548C\u6DF1\u5C42\u7F51\u7EDC\u3002</p>\\n<p><code>configure_optimizers</code> \u65B9\u6CD5\u63D0\u4F9B\u4E86\u4E00\u79CD\u7075\u6D3B\u7684\u65B9\u5F0F\u6765\u914D\u7F6E\u6A21\u578B\u7684\u4F18\u5316\u5668\uFF0C\u5141\u8BB8\u5F00\u53D1\u8005\u6839\u636E\u6A21\u578B\u7684\u7279\u5B9A\u9700\u6C42\u548C\u8BAD\u7EC3\u73AF\u5883\uFF08\u5982\u662F\u5426\u4F7F\u7528 GPU\uFF09\u6765\u8C03\u6574\u4F18\u5316\u5668\u7684\u884C\u4E3A\u3002</p>\\n<p>User: def generate(self, idx, max<em>generate_tokens, tempreture=1.0, top_k=None): # topp\uFF0Ctopk \u548C tempreture \u7684\u6982\u5FF5 # max_generate_tokens \u4E3A\u751F\u6210\u7684\u65B0 tokens \u7684\u6700\u5927\u6570\u91CF\\nfor * in range(max</em>generate_tokens):\\nidx = idx if idx.shape[1] &lt;= self.args.block_size else idx[:,-self.args.block_size:] # \u5982\u679C\u5927\u4E8E\u4F20\u5165\u7684\u6700\u5927\u5927\u5C0F\u5219\u622A\u53D6\u540E\u9762\u4E00\u6BB5 # \u5176\u5B9E\u8FD9\u91CC\u6211\u6709\u70B9\u4E0D\u61C2\uFF0C\u5982\u679C idx \u957F\u5EA6\u4E0D\u8DB3 blocksize\uFF0C\u662F\u54EA\u4E00\u6B65\u7ED9\u4ED6\u586B\u5145\u5230 blocksize \u5927\u5C0F\u7684\u5462\uFF1F\\nlogits, * = self(idx)\\nlogits = logits[:,-1,:]/tempreture #(B,T,C)\u53D6\u6700\u540E\u4E00\u4E2A\u5373\u65B0\u751F\u6210\u7684 # tempreture \u66F4\u9AD8\uFF0C\u751F\u6210\u7684\u968F\u673A\u6027\u66F4\u9AD8 # \u4ECE\u8FD9\u91CC\u80FD\u77E5\u9053\uFF0C\u662F softmax \u7684\u6027\u8D28\u51B3\u5B9A\u7684\uFF0C\u6307\u6570\u51FD\u6570\u5C0F\u7684\u65F6\u5019\u53D8\u5316\u5C0F\uFF0C\u4E0D\u540C token \u7684 probs \u5DEE\u8DDD\u4F1A\u88AB\u51CF\u5C11\uFF0C\u968F\u673A\u6027\u5C31\u5F3A\u4E86</p>\\n<pre><code>        if top_k is not None:\\n            v, _ = torch.topk(logits, min(top_k, logits.size(-1)))\\n            logits[logits &lt; v[:, [-1]]] = -float('Inf') # \u5FFD\u7565topk\u540D\u4EE5\u540E\u7684token\\n\\n        probs = F.softmax(logits,dim=-1)\\n        idx_next = torch.multinomial(probs, num_samples=1) # \u6309\u7167probs\u6982\u7387\u9009\u4E00\u4E2A\\n        idx = torch.cat((idx, idx_next), dim=1)\\n\\n    return idx\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>generate</code> \u7684\u65B9\u6CD5\uFF0C\u7528\u4E8E\u751F\u6210\u6587\u672C\u6216\u5E8F\u5217\u6570\u636E\u3002\u8FD9\u4E2A\u65B9\u6CD5\u662F GPT \u6A21\u578B\u7684\u4E00\u90E8\u5206\uFF0C\u901A\u5E38\u7528\u4E8E\u8BED\u8A00\u6A21\u578B\u6216\u5176\u4ED6\u5E8F\u5217\u751F\u6210\u4EFB\u52A1\u3002\u4EE5\u4E0B\u662F\u8BE6\u7EC6\u6B65\u9AA4\u548C\u5173\u952E\u70B9\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u65B9\u6CD5\u5B9A\u4E49</strong>:</p>\\n<ul>\\n<li><code>def generate(self, idx, max_generate_tokens, temperature=1.0, top_k=None)</code>: \u5B9A\u4E49\u4E86\u751F\u6210\u65B9\u6CD5\uFF0C\u63A5\u53D7\u4EE5\u4E0B\u53C2\u6570\uFF1A\\n<ul>\\n<li><code>idx</code>: \u8F93\u5165\u7684\u521D\u59CB\u7D22\u5F15\u5F20\u91CF\uFF0C\u53EF\u4EE5\u662F\u4E00\u4E2A\u8BCD\u6216\u5B57\u7B26\u7684\u5E8F\u5217\u3002</li>\\n<li><code>max_generate_tokens</code>: \u8981\u751F\u6210\u7684\u6700\u5927\u65B0 token \u6570\u91CF\u3002</li>\\n<li><code>temperature</code>: \u63A7\u5236\u751F\u6210\u8FC7\u7A0B\u4E2D\u968F\u673A\u6027\u7684\u53C2\u6570\u3002\u6E29\u5EA6\u8F83\u9AD8\u65F6\uFF0C\u751F\u6210\u7684\u5E8F\u5217\u66F4\u968F\u673A\uFF1B\u6E29\u5EA6\u8F83\u4F4E\u65F6\uFF0C\u751F\u6210\u7684\u5E8F\u5217\u66F4\u786E\u5B9A\u3002</li>\\n<li><code>top_k</code>: \u9650\u5236\u5728 top-k \u6700\u53EF\u80FD\u7684 token \u4E2D\u8FDB\u884C\u91C7\u6837\uFF0C\u4EE5\u63A7\u5236\u751F\u6210\u7684\u591A\u6837\u6027\u3002</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5E8F\u5217\u622A\u53D6</strong>:</p>\\n<ul>\\n<li><code>idx = idx if idx.shape[1] &lt;= self.args.block_size else idx[:,-self.args.block_size:]</code>: \u5982\u679C\u8F93\u5165\u5E8F\u5217\u957F\u5EA6\u8D85\u8FC7\u6A21\u578B\u7684 <code>block_size</code>\uFF0C\u5219\u53EA\u4FDD\u7559\u6700\u540E <code>block_size</code> \u4E2A token\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u6A21\u578B\u524D\u5411\u4F20\u64AD</strong>:</p>\\n<ul>\\n<li><code>logits, _ = self(idx)</code>: \u4F7F\u7528\u6A21\u578B\u7684\u524D\u5411\u4F20\u64AD\u65B9\u6CD5\u8BA1\u7B97\u8F93\u5165 <code>idx</code> \u7684 logits\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5E94\u7528\u6E29\u5EA6\u53C2\u6570</strong>:</p>\\n<ul>\\n<li><code>logits = logits[:,-1,:]/temperature</code>: \u5E94\u7528\u6E29\u5EA6\u53C2\u6570\u8C03\u6574 logits\uFF0C\u5F71\u54CD\u751F\u6210\u7684\u968F\u673A\u6027\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>Top-k \u91C7\u6837</strong>:</p>\\n<ul>\\n<li>\u5982\u679C\u8BBE\u7F6E\u4E86 <code>top_k</code>\uFF0C\u5219\u53EA\u8003\u8651\u6982\u7387\u6700\u9AD8\u7684 <code>top_k</code> \u4E2A token\uFF1A\\n<ul>\\n<li><code>v, _ = torch.topk(logits, min(top_k, logits.size(-1)))</code>: \u83B7\u53D6 top-k \u7684 logits \u503C\u3002</li>\\n<li><code>logits[logits &lt; v[:, [-1]]] = -float('Inf')</code>: \u5C06\u6392\u540D\u5728 top-k \u4E4B\u5916\u7684 token \u7684 logits \u8BBE\u7F6E\u4E3A\u8D1F\u65E0\u7A77\uFF0C\u8FD9\u6837\u5728\u5E94\u7528 softmax \u65F6\u5B83\u4EEC\u7684\u6982\u7387\u5C06\u63A5\u8FD1\u96F6\u3002</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BA1\u7B97\u6982\u7387\u5206\u5E03</strong>:</p>\\n<ul>\\n<li><code>probs = F.softmax(logits, dim=-1)</code>: \u5BF9\u8C03\u6574\u540E\u7684 logits \u5E94\u7528 softmax \u51FD\u6570\uFF0C\u5F97\u5230\u6982\u7387\u5206\u5E03\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u91C7\u6837\u65B0 token</strong>:</p>\\n<ul>\\n<li><code>idx_next = torch.multinomial(probs, num_samples=1)</code>: \u4F7F\u7528\u6982\u7387\u5206\u5E03 <code>probs</code> \u8FDB\u884C\u91C7\u6837\uFF0C\u5F97\u5230\u4E0B\u4E00\u4E2A token \u7684\u7D22\u5F15\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u66F4\u65B0\u7D22\u5F15\u5E8F\u5217</strong>:</p>\\n<ul>\\n<li><code>idx = torch.cat((idx, idx_next), dim=1)</code>: \u5C06\u65B0\u91C7\u6837\u7684 token \u7D22\u5F15\u6DFB\u52A0\u5230\u8F93\u5165\u5E8F\u5217\u7684\u672B\u5C3E\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5FAA\u73AF\u751F\u6210</strong>:</p>\\n<ul>\\n<li>\u5FAA\u73AF <code>max_generate_tokens</code> \u6B21\uFF0C\u6BCF\u6B21\u751F\u6210\u4E00\u4E2A\u65B0\u7684 token \u5E76\u5C06\u5176\u6DFB\u52A0\u5230\u5E8F\u5217\u4E2D\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8FD4\u56DE\u751F\u6210\u7684\u5E8F\u5217</strong>:</p>\\n<ul>\\n<li><code>return idx</code>: \u8FD4\u56DE\u751F\u6210\u7684\u5B8C\u6574\u5E8F\u5217\u7684\u7D22\u5F15\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A\u65B9\u6CD5\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u7684\u6587\u672C\u751F\u6210\u5FAA\u73AF\uFF0C\u901A\u8FC7\u9010\u6B65\u91C7\u6837\u65B0 token \u5E76\u5C06\u5176\u6DFB\u52A0\u5230\u5E8F\u5217\u4E2D\uFF0C\u76F4\u5230\u8FBE\u5230\u6700\u5927\u751F\u6210\u957F\u5EA6\u6216\u6EE1\u8DB3\u5176\u4ED6\u505C\u6B62\u6761\u4EF6\u3002\u6E29\u5EA6\u53C2\u6570\u548C top-k \u91C7\u6837\u662F\u63A7\u5236\u751F\u6210\u8FC7\u7A0B\u548C\u7ED3\u679C\u591A\u6837\u6027\u7684\u5E38\u7528\u6280\u672F\u3002</p>\\n<p>User: import os\\nimport numpy as np\\nimport torch\\nimport torch.nn as nn\\nimport math\\nfrom model import Model_args,GPT\\nimport time</p>\\n<h1 id=\\"\u6A21\u578B\u53C2\u6570\\" tabindex=\\"-1\\">\u6A21\u578B\u53C2\u6570 <a class=\\"header-anchor\\" href=\\"#\u6A21\u578B\u53C2\u6570\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>block_size = 128 # \u7A97\u53E3\u5927\u5C0F GPT2 \u4E3A 1024\\nbatch_size = 32 # \u6682\u5B9A\uFF0C\u4E4B\u540E\u518D\u770B\u663E\u5B58\u5360\u7528\\nn_layer = 12\\nn_head = 6\\nn_embed = 768\\nbias = False\\ndropout = 0.0\\ndataset_path = './data/sherlock'\\ninit_from = 'scratch' # 'scratch' or 'resume' # \u4ECE\u5934\u8BAD\u7EC3\u8FD8\u662F\u7EE7\u7EED\\ncheckpoint_save_dir = './checkpoints'\\neval_iters = 200\\neval_interval = 2000 # \u6BCF n \u6B65 eval \u548C\u4FDD\u5B58 checkpoint \u4E00\u6B21</p>\\n<h1 id=\\"\u5B66\u4E60\u7387\u8870\u51CF\\" tabindex=\\"-1\\">\u5B66\u4E60\u7387\u8870\u51CF <a class=\\"header-anchor\\" href=\\"#\u5B66\u4E60\u7387\u8870\u51CF\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>learning_rate = 6e-4\\nwarmup_iters = 2000\\nlr_decay_iters = 8000\\nmin_lr = 6e-5</p>\\n<h1 id=\\"\u4F18\u5316\u5668\u53C2\u6570\\" tabindex=\\"-1\\">\u4F18\u5316\u5668\u53C2\u6570 <a class=\\"header-anchor\\" href=\\"#\u4F18\u5316\u5668\u53C2\u6570\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>max_iters = 6000 # \u8BAD\u7EC3\u591A\u5C11\u4E2A iter\\nweight_decay = 1e-1\\nbetas = (0.9,0.95)\\ngrad_clip = 1.0 # \u68AF\u5EA6\u88C1\u526A</p>\\n<h1 id=\\"system\\" tabindex=\\"-1\\">system <a class=\\"header-anchor\\" href=\\"#system\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>device = 'cuda'\\ndevice_type = 'cuda'\\ndtype = 'bfloat16' if torch.cuda.is_available() and torch.cuda.is_bf16_supported() else 'float16'</p>\\n<h1 id=\\"\u68C0\u67E5-cuda-\u662F\u5426\u652F\u6301-bfloat16-\u6570\u636E\u7C7B\u578B\\" tabindex=\\"-1\\">\u68C0\u67E5 cuda \u662F\u5426\u652F\u6301 bfloat16 \u6570\u636E\u7C7B\u578B <a class=\\"header-anchor\\" href=\\"#\u68C0\u67E5-cuda-\u662F\u5426\u652F\u6301-bfloat16-\u6570\u636E\u7C7B\u578B\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>ptdtype = {'float32': torch.float32, 'bfloat16': torch.bfloat16, 'float16': torch.float16}[dtype]\\nctx = torch.amp.autocast(device_type=device_type, dtype=ptdtype)</p>\\n<h1 id=\\"torch-amp-autocast-\u6DF7\u5408\u7CBE\u5EA6\\" tabindex=\\"-1\\">torch.amp.autocast \u6DF7\u5408\u7CBE\u5EA6 <a class=\\"header-anchor\\" href=\\"#torch-amp-autocast-\u6DF7\u5408\u7CBE\u5EA6\\" aria-hidden=\\"true\\">#</a></h1>\\n<h1 id=\\"dataloader\\" tabindex=\\"-1\\">dataloader <a class=\\"header-anchor\\" href=\\"#dataloader\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>data_dir = os.path.join(dataset_path)\\ndef get_batch(split): # nanogpt \u4F5C\u8005\u8BF4\uFF0Cmemmap \u6BCF\u4E2A batch \u90FD\u8981\u7528\u4E00\u6B21\uFF0C\u8FD9\u6837\u624D\u4E0D\u4F1A\u5185\u5B58\u6CC4\u6F0F # <a href=\\"https://stackoverflow.com/questions/45132940/numpy-memmap-memory-usage-want-to-iterate-once/61472122#61472122\\" target=\\"_blank\\" rel=\\"noreferrer\\">https://stackoverflow.com/questions/45132940/numpy-memmap-memory-usage-want-to-iterate-once/61472122#61472122</a><br>\\nif split == 'train':\\ndata = np.memmap(os.path.join(data_dir, 'train.bin'), dtype=np.uint16, mode='r')\\nelse:\\ndata = np.memmap(os.path.join(data_dir, 'val.bin'), dtype=np.uint16, mode='r')</p>\\n<pre><code>ix = torch.randint(len(data)-block_size,(batch_size,)) #\\n# torch.randint(a, b, (size,))\u5373\u5728\uFF08a,b\uFF09\u8303\u56F4\u5185\u751F\u6210size\u4E2A\u968F\u673A\u6570\\nx = torch.stack([torch.from_numpy((data[i:i+block_size].astype(np.int64))) for i in ix]) # \u6839\u636Eix\u4ECEdata\u91CC\u9762\u53D6x,y\\ny = torch.stack([torch.from_numpy((data[i+1:i+1+block_size].astype(np.int64))) for i in ix])\\n# torch.stack(inputs, dim=0),dim\u4E3A\u62FC\u63A5\u7684\u65B0\u7684\u7EF4\u5EA6\\n\\nx,y = x.pin_memory().to(device,non_blocking=True),y.pin_memory().to(device,non_blocking=True)\\n# pin_memory()\u5C06\u5F20\u91CF\u9501\u5B9A\u5728\u5185\u5B58\u4E2D\uFF0Cnon_blocking=True\u6570\u636E\u4F20\u8F93\u662F\u975E\u963B\u585E\u7684\uFF0C\u4E0D\u4F1A\u963B\u585E\u5F53\u524D\u7EBF\u7A0B\\nreturn x,y\\n</code></pre>\\n<p>model_args = dict(n_layer=n_layer, n_head=n_head, n_embed=n_embed, block_size=block_size,\\nbias=bias, vocab_size=None, dropout=dropout)</p>\\n<p>iter_num = 0 # resume \u7684\u8BDD\u4F1A\u8986\u76D6\u6389 0\\nbest_val_loss = 1e9</p>\\n<p>assert init_from == 'scratch' or init_from == 'resume'\\nif init_from == 'scratch':\\nprint(&quot;\u4ECE\u5934\u8BAD\u7EC3\u6A21\u578B&quot;)\\nmodel_args['vocab_size'] = 50304 # gpt2 tokenizer \u8BCD\u8868\u5927\u5C0F # \u8FD9\u91CC\u76F4\u63A5\u4F7F\u7528 GPT-2 \u7684\u8BCD\u8868\uFF0C\u5728 <a href=\\"http://prepare.py\\" target=\\"_blank\\" rel=\\"noreferrer\\">prepare.py</a> \u4E2D\uFF0C\u8C03\u7528 tiktoken.get_encoding('gpt2')\u6765 tokenize\\ngpt_args = Model_args(**model_args)\\nmodel = GPT(gpt_args) # \u521B\u5EFA\u6A21\u578B</p>\\n<p>elif init_from == 'resume': # \u7EE7\u7EED\u8BAD\u7EC3\\nprint(&quot;\u7EE7\u7EED\u8BAD\u7EC3\u6A21\u578B&quot;)\\nckpt_path = os.path.join(checkpoint_save_dir,'<a href=\\"http://checkpoint.pt\\" target=\\"_blank\\" rel=\\"noreferrer\\">checkpoint.pt</a>') # \u8BFB\u53D6 checkpoint \u8DEF\u5F84\\ncheckpoint = torch.load(ckpt_path, map_location=device)\\ncheckpoint_model_args = checkpoint['model_args']# \u4ECE checkpoint \u91CC\u9762\u8BFB\u53D6\u6A21\u578B\u53C2\u6570\\nfor k in ['n_layer', 'n_head', 'n_embed', 'block_size', 'bias', 'vocab_size']:\\nmodel_args[k] = checkpoint_model_args[k]\\ngpt_args = Model_args(**model_args)\\nmodel = GPT(gpt_args)\\nstate_dict = checkpoint['model'] # \u6A21\u578B\u6743\u91CD\\nmodel.load_state_dict(state_dict)</p>\\n<pre><code>iter_num = checkpoint['iter_num'] # \u8FED\u4EE3\u5668\u6B65\u6570\\nbest_val_loss = checkpoint['best_val_loss']\\n</code></pre>\\n<p>scaler = torch.cuda.amp.GradScaler(enabled=(dtype == 'float16'))</p>\\n<h1 id=\\"\u4F18\u5316\uFF1A\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\uFF0C\u5927\u90E8\u5206\u4F7F\u7528-float16\uFF0C\u5C11\u90E8\u5206\u7528-float32\\" tabindex=\\"-1\\">\u4F18\u5316\uFF1A\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\uFF0C\u5927\u90E8\u5206\u4F7F\u7528 float16\uFF0C\u5C11\u90E8\u5206\u7528 float32 <a class=\\"header-anchor\\" href=\\"#\u4F18\u5316\uFF1A\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\uFF0C\u5927\u90E8\u5206\u4F7F\u7528-float16\uFF0C\u5C11\u90E8\u5206\u7528-float32\\" aria-hidden=\\"true\\">#</a></h1>\\n<p><a href=\\"http://model.to\\" target=\\"_blank\\" rel=\\"noreferrer\\">model.to</a>(device)\\noptimizer = model.configure_optimizers(weight_decay,learning_rate,betas,device_type)\\nif init_from == 'resume':\\noptimizer.load_state_dict(checkpoint['optimizer'])\\ncheckpoint = None# \u8FD9\u65F6\u5019 checkpoint \u5DF2\u7ECF\u8BFB\u597D\u4E86\uFF0C\u7ED9\u4ED6\u6E05\u7A7A\u4E00\u4E0B</p>\\n<h1 id=\\"nanogpt-\u8FD8\u6709\u4E2A-torch-compile-\u7684\u4F18\u5316\uFF0C\u6211\u8FD9\u91CC\u6682\u65F6\u5148\u4E0D\u505A\u4E86\\" tabindex=\\"-1\\">nanogpt \u8FD8\u6709\u4E2A torch.compile \u7684\u4F18\u5316\uFF0C\u6211\u8FD9\u91CC\u6682\u65F6\u5148\u4E0D\u505A\u4E86 <a class=\\"header-anchor\\" href=\\"#nanogpt-\u8FD8\u6709\u4E2A-torch-compile-\u7684\u4F18\u5316\uFF0C\u6211\u8FD9\u91CC\u6682\u65F6\u5148\u4E0D\u505A\u4E86\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>def estimate*loss():\\nmodel.eval() # eval \u4E0D\u8BA1\u7B97\u68AF\u5EA6\\nout = {}\\nfor split in ['train','val']: # \u8FD9\u91CC\u662F\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u90FD\u7B97\u4E00\u4E0B loss # \u6211\u53D1\u73B0 nanogpt \u4E2D\u5F88\u591A\u4F20\u53C2\u90FD\u7528 dict \u7684\u65B9\u5F0F\\nlosses = torch.zeros(eval_iters)\\nfor k in range(eval_iters): # print(f&quot;now_eval in {k}&quot;)\\nX,Y = get_batch(split)\\nwith ctx:\\n*,loss = model(X,Y) # x,targets\\nlosses[k] = loss.item()\\nout[split] = losses.mean()\\nmodel.train() # \u9000\u51FA\u65F6\u56DE\u5230 train \u7684\u6A21\u5F0F\\nreturn out</p>\\n<h1 id=\\"nanogpt-\u4F7F\u7528-cos-\u505A-learning-rate-\u7684\u4E0B\u964D\\" tabindex=\\"-1\\">nanogpt \u4F7F\u7528 cos \u505A learning rate \u7684\u4E0B\u964D <a class=\\"header-anchor\\" href=\\"#nanogpt-\u4F7F\u7528-cos-\u505A-learning-rate-\u7684\u4E0B\u964D\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>def get_lr(now_iter):\\nif(now_iter&lt;warmup_iters):#(1)warmup \u9636\u6BB5\uFF0C\u7EBF\u6027\u4E0A\u5347\\nreturn learning_rate<em>now_iter/warmup_iters\\nelif(now_iter&gt;lr_decay_iters):#(2)\u8D85\u8FC7 decay\uFF0C\u5230 min \u4E86\\nreturn min_lr\\nelse:# (3)\u5728 warmup \u548C decay \u4E4B\u95F4\uFF0C\u7528 cos \u505A lr \u8870\u51CF\\nrate = (now_iter-warmup_iters)/(lr_decay_iters-warmup_iters) # \u8BA1\u7B97\u6240\u5360\u6BD4\u4F8B(0,1)\\nreturn min_lr + 0.5</em>(1.0+math.cos(math.pi*rate)) * (learning_rate-min_lr)</p>\\n<h1 id=\\"\u8BAD\u7EC3\u4EE3\u7801\\" tabindex=\\"-1\\">\u8BAD\u7EC3\u4EE3\u7801 <a class=\\"header-anchor\\" href=\\"#\u8BAD\u7EC3\u4EE3\u7801\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>X,Y = get_batch('train')\\nt_before = time.time()</p>\\n<p>while(True):\\nlr = get_lr(iter_num)\\nfor param_group in optimizer.param_groups:\\nparam_group['lr'] = lr # \u8BBE\u7F6E\u5B66\u4E60\u7387</p>\\n<pre><code>if iter_num&gt;0 and iter_num % eval_interval == 0:\\n    # eval\\n    loss_dict = estimate_loss()\\n    print(f&quot;\u5F53\u524D\u8FDB\u884C{iter_num}\u4E2Aiter,train_loss:{loss_dict['train']},val_loss{loss_dict['val']}&quot;)\\n    best_val_loss = min(loss_dict['val'],best_val_loss)\\n    # save checkpoint\\n    checkpoint = {\\n        'model':model.state_dict(),\\n        'optimizer':optimizer.state_dict,\\n        'model_args': model_args,\\n        'iter_num':iter_num,\\n        'best_val_loss':best_val_loss\\n    }\\n    torch.save(checkpoint,os.path.join(checkpoint_save_dir,'checkpoint.pt'))\\n    print(f&quot;checkpoint\u4FDD\u5B58\u5728{checkpoint_save_dir}/checkpoint.pt&quot;)\\n\\nwith ctx:\\n    logits,loss = model(X,Y)\\n    print(f&quot;iter:{iter_num},loss:{loss.item()}&quot;)\\n    scaler.scale(loss).backward()\\n    # \u7528scaler\uFF0Cscale loss(FP16)\uFF0Cbackward\u5F97\u5230scaled\u7684\u68AF\u5EA6(FP16)\\nif grad_clip &gt;0.0:\\n    scaler.unscale_(optimizer) # unscale\u68AF\u5EA6\u56DEfp32\\n    nn.utils.clip_grad_norm_(model.parameters(),grad_clip)\\n    # \u68AF\u5EA6\u8FDB\u884C\u88C1\u526A\uFF0C\u4EE5\u9632\u6B62\u68AF\u5EA6\u7206\u70B8\\nscaler.step(optimizer) # \u7528scaler\u6267\u884Coptimizer.step()\u529F\u80FD\\nscaler.update() # scaler factor\u66F4\u65B0\\n&quot;&quot;&quot;\\nscaler\u7684\u4F7F\u7528\uFF0C\u627E\u5230\u4E00\u7BC7\u77E5\u4E4E\u7684\u6587\u7AE0https://zhuanlan.zhihu.com/p/348554267\\n\\n\u4E4B\u524D\u7528\u4E86\u6DF7\u5408\u7CBE\u5EA6\uFF0C\u4F46\u662F\u628AFP32\u5230FP16\u65F6\u53EF\u80FD\u4F1A\u6EA2\u51FA\uFF0C\u6240\u4EE5\u9700\u8981\u4E58\u4E0A\u7CFB\u6570\u63A7\u5236\u8303\u56F4\u3002\\n\\nGradScaler\u7684\u5DE5\u4F5C\u5C31\u662F\u5728\u53CD\u5411\u4F20\u64AD\u524D\u7ED9 loss \u4E58\u4E00\u4E2A scale factor\uFF0C\\n\u4E4B\u540E\u53CD\u5411\u4F20\u64AD\u5F97\u5230\u7684\u68AF\u5EA6\u90FD\u4E58\u4E86\u76F8\u540C\u7684 scale factor\u3002\\n\u5E76\u4E14\u4E3A\u4E86\u4E0D\u5F71\u54CD\u5B66\u4E60\u7387\uFF0C\u5728\u68AF\u5EA6\u66F4\u65B0\u524D\u5C06\u68AF\u5EA6unscale\u3002\\n\u6B65\u9AA4\u5982\u4E0B\uFF1A\\n    \u7EF4\u62A4\u4E00\u4E2A FP32 \u6570\u503C\u7CBE\u5EA6\u6A21\u578B\u7684\u526F\u672C\\n    \u5728\u6BCF\u4E2Aiteration\\n        \u62F7\u8D1D\u5E76\u4E14\u8F6C\u6362\u6210 FP16 \u6A21\u578B\\n        \u524D\u5411\u4F20\u64AD\uFF08FP16 \u7684\u6A21\u578B\u53C2\u6570\uFF09\\n        loss \u4E58 scale factor\\n        \u53CD\u5411\u4F20\u64AD\uFF08FP16 \u7684\u6A21\u578B\u53C2\u6570\u548C\u53C2\u6570\u68AF\u5EA6\uFF09\\n        \u53C2\u6570\u68AF\u5EA6\u4E58 1/scale factor\\n        \u5229\u7528 FP16 \u7684\u68AF\u5EA6\u66F4\u65B0 FP32 \u7684\u6A21\u578B\u53C2\u6570\\n&quot;&quot;&quot;\\noptimizer.zero_grad(set_to_none=True) # \u91CA\u653E\u5185\u5B58\\n\\nt_after = time.time()\\ndt = t_after-t_before\\nt_before = t_after\\n\\niter_num += 1\\nif iter_num &gt; max_iters:\\n    break\\n</code></pre>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F\u4E00\u4E2A\u7528\u4E8E\u8BAD\u7EC3 GPT\uFF08\u4E00\u79CD\u57FA\u4E8E Transformer \u7684\u8BED\u8A00\u6A21\u578B\uFF09\u7684 Python \u811A\u672C\uFF0C\u5B83\u4F7F\u7528\u4E86 PyTorch \u6846\u67B6\u3002\u4EE5\u4E0B\u662F\u5BF9\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<h3 id=\\"\u5BFC\u5165\u5FC5\u8981\u7684\u5E93\\" tabindex=\\"-1\\">\u5BFC\u5165\u5FC5\u8981\u7684\u5E93 <a class=\\"header-anchor\\" href=\\"#\u5BFC\u5165\u5FC5\u8981\u7684\u5E93\\" aria-hidden=\\"true\\">#</a></h3>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> os</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> numpy </span><span style=\\"color: #89DDFF\\">as</span><span style=\\"color: #A6ACCD\\"> np</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> torch</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> torch</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">nn</span><span style=\\"color: #A6ACCD\\"> </span><span style=\\"color: #89DDFF\\">as</span><span style=\\"color: #A6ACCD\\"> nn</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> math</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">from</span><span style=\\"color: #A6ACCD\\"> model </span><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> Model_args</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #A6ACCD\\"> GPT  </span><span style=\\"color: #676E95\\"># \u5047\u8BBE model.py \u4E2D\u5B9A\u4E49\u4E86 Model_args \u548C GPT \u7C7B</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">import</span><span style=\\"color: #A6ACCD\\"> time</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><h3 id=\\"\u8BBE\u7F6E\u6A21\u578B\u548C\u8BAD\u7EC3\u53C2\u6570\\" tabindex=\\"-1\\">\u8BBE\u7F6E\u6A21\u578B\u548C\u8BAD\u7EC3\u53C2\u6570 <a class=\\"header-anchor\\" href=\\"#\u8BBE\u7F6E\u6A21\u578B\u548C\u8BAD\u7EC3\u53C2\u6570\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u5B9A\u4E49\u4E86\u6A21\u578B\u7684\u53C2\u6570\uFF0C\u5982 <code>block_size</code>\uFF0C<code>batch_size</code>\uFF0C<code>n_layer</code>\uFF0C<code>n_head</code>\uFF0C<code>n_embed</code> \u7B49\u3002</li>\\n<li>\u8BBE\u7F6E\u4E86\u5B66\u4E60\u7387\u8C03\u5EA6\u53C2\u6570\uFF0C\u4F18\u5316\u5668\u53C2\u6570\uFF0C\u4EE5\u53CA\u6570\u636E\u96C6\u548C\u68C0\u67E5\u70B9\u4FDD\u5B58\u8DEF\u5F84\u3002</li>\\n</ul>\\n<h3 id=\\"\u8BBE\u5907\u548C\u6DF7\u5408\u7CBE\u5EA6\u914D\u7F6E\\" tabindex=\\"-1\\">\u8BBE\u5907\u548C\u6DF7\u5408\u7CBE\u5EA6\u914D\u7F6E <a class=\\"header-anchor\\" href=\\"#\u8BBE\u5907\u548C\u6DF7\u5408\u7CBE\u5EA6\u914D\u7F6E\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u6839\u636E\u7CFB\u7EDF\u662F\u5426\u652F\u6301\u51B3\u5B9A\u4F7F\u7528 <code>float16</code> \u6216 <code>bfloat16</code>\u3002</li>\\n<li>\u4F7F\u7528 <code>torch.amp.autocast</code> \u542F\u7528\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\u3002</li>\\n</ul>\\n<h3 id=\\"\u6570\u636E\u52A0\u8F7D\u51FD\u6570\\" tabindex=\\"-1\\">\u6570\u636E\u52A0\u8F7D\u51FD\u6570 <a class=\\"header-anchor\\" href=\\"#\u6570\u636E\u52A0\u8F7D\u51FD\u6570\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li><code>get_batch</code> \u51FD\u6570\u4ECE <code>*.bin</code> \u6587\u4EF6\u4E2D\u52A0\u8F7D\u6570\u636E\uFF0C\u5E76\u4F7F\u7528 <code>np.memmap</code> \u907F\u514D\u5185\u5B58\u6CC4\u6F0F\u3002</li>\\n</ul>\\n<h3 id=\\"\u6A21\u578B\u521D\u59CB\u5316\\" tabindex=\\"-1\\">\u6A21\u578B\u521D\u59CB\u5316 <a class=\\"header-anchor\\" href=\\"#\u6A21\u578B\u521D\u59CB\u5316\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u6839\u636E <code>init_from</code> \u53C2\u6570\u51B3\u5B9A\u662F\u4ECE\u5934\u5F00\u59CB\u8BAD\u7EC3\u8FD8\u662F\u4ECE\u68C0\u67E5\u70B9\u6062\u590D\u3002</li>\\n</ul>\\n<h3 id=\\"\u4F18\u5316\u5668\u548C-gradscaler-\u521D\u59CB\u5316\\" tabindex=\\"-1\\">\u4F18\u5316\u5668\u548C GradScaler \u521D\u59CB\u5316 <a class=\\"header-anchor\\" href=\\"#\u4F18\u5316\u5668\u548C-gradscaler-\u521D\u59CB\u5316\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u4F7F\u7528\u6A21\u578B\u7684 <code>configure_optimizers</code> \u65B9\u6CD5\u914D\u7F6E\u4F18\u5316\u5668\u3002</li>\\n<li>\u4F7F\u7528 <code>torch.cuda.amp.GradScaler</code> \u7528\u4E8E\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\u4E2D\u7684\u68AF\u5EA6\u7F29\u653E\u3002</li>\\n</ul>\\n<h3 id=\\"\u8BC4\u4F30\u51FD\u6570\\" tabindex=\\"-1\\">\u8BC4\u4F30\u51FD\u6570 <a class=\\"header-anchor\\" href=\\"#\u8BC4\u4F30\u51FD\u6570\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li><code>estimate_loss</code> \u51FD\u6570\u8BA1\u7B97\u8BAD\u7EC3\u548C\u9A8C\u8BC1\u96C6\u4E0A\u7684\u635F\u5931\u3002</li>\\n</ul>\\n<h3 id=\\"\u5B66\u4E60\u7387\u8C03\u5EA6\u51FD\u6570\\" tabindex=\\"-1\\">\u5B66\u4E60\u7387\u8C03\u5EA6\u51FD\u6570 <a class=\\"header-anchor\\" href=\\"#\u5B66\u4E60\u7387\u8C03\u5EA6\u51FD\u6570\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li><code>get_lr</code> \u51FD\u6570\u6839\u636E\u5F53\u524D\u8FED\u4EE3\u6B21\u6570 <code>now_iter</code> \u8BA1\u7B97\u5B66\u4E60\u7387\u3002</li>\\n</ul>\\n<h3 id=\\"\u8BAD\u7EC3\u5FAA\u73AF\\" tabindex=\\"-1\\">\u8BAD\u7EC3\u5FAA\u73AF <a class=\\"header-anchor\\" href=\\"#\u8BAD\u7EC3\u5FAA\u73AF\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u5728\u8BAD\u7EC3\u5FAA\u73AF\u4E2D\uFF0C\u9996\u5148\u8BBE\u7F6E\u5F53\u524D\u8FED\u4EE3\u7684\u5B66\u4E60\u7387\u3002</li>\\n<li>\u4F7F\u7528 <code>torch.amp.autocast</code> \u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u6765\u542F\u7528\u6DF7\u5408\u7CBE\u5EA6\u3002</li>\\n<li>\u6267\u884C\u6A21\u578B\u7684\u524D\u5411\u4F20\u64AD\u548C\u53CD\u5411\u4F20\u64AD\uFF0C\u4F7F\u7528 <code>GradScaler</code> \u6765\u5904\u7406\u68AF\u5EA6\u7F29\u653E\u3002</li>\\n<li>\u5982\u679C\u6EE1\u8DB3\u6761\u4EF6\uFF0C\u4FDD\u5B58\u68C0\u67E5\u70B9\u5E76\u8BC4\u4F30\u6A21\u578B\u3002</li>\\n</ul>\\n<h3 id=\\"\u6027\u80FD\u76D1\u63A7\\" tabindex=\\"-1\\">\u6027\u80FD\u76D1\u63A7 <a class=\\"header-anchor\\" href=\\"#\u6027\u80FD\u76D1\u63A7\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u8BA1\u7B97\u6BCF\u6B21\u8FED\u4EE3\u7684\u65F6\u95F4\uFF0C\u5E76\u5728\u8FED\u4EE3\u7ED3\u675F\u65F6\u66F4\u65B0\u3002</li>\\n</ul>\\n<h3 id=\\"\u9000\u51FA\u6761\u4EF6\\" tabindex=\\"-1\\">\u9000\u51FA\u6761\u4EF6 <a class=\\"header-anchor\\" href=\\"#\u9000\u51FA\u6761\u4EF6\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u5F53\u8FED\u4EE3\u6B21\u6570 <code>iter_num</code> \u8D85\u8FC7 <code>max_iters</code> \u65F6\u9000\u51FA\u8BAD\u7EC3\u5FAA\u73AF\u3002</li>\\n</ul>\\n<h3 id=\\"\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\\" tabindex=\\"-1\\">\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3 <a class=\\"header-anchor\\" href=\\"#\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u4F7F\u7528 <code>GradScaler</code> \u6765\u5904\u7406\u53EF\u80FD\u7684\u6570\u503C\u6EA2\u51FA\u95EE\u9898\uFF0C\u901A\u8FC7\u5728\u53CD\u5411\u4F20\u64AD\u524D\u5BF9\u635F\u5931\u4E58\u4EE5\u4E00\u4E2A\u7F29\u653E\u56E0\u5B50\uFF0C\u7136\u540E\u5728\u53C2\u6570\u66F4\u65B0\u524D\u5C06\u68AF\u5EA6\u9664\u4EE5\u8FD9\u4E2A\u56E0\u5B50\u3002</li>\\n</ul>\\n<h3 id=\\"\u68C0\u67E5\u70B9\u4FDD\u5B58\\" tabindex=\\"-1\\">\u68C0\u67E5\u70B9\u4FDD\u5B58 <a class=\\"header-anchor\\" href=\\"#\u68C0\u67E5\u70B9\u4FDD\u5B58\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u5B9A\u671F\u4FDD\u5B58\u6A21\u578B\u7684\u72B6\u6001\u5B57\u5178\u3001\u4F18\u5316\u5668\u72B6\u6001\u3001\u6A21\u578B\u53C2\u6570\u3001\u8FED\u4EE3\u6B21\u6570\u548C\u6700\u4F73\u9A8C\u8BC1\u635F\u5931\u3002</li>\\n</ul>\\n<h3 id=\\"\u65E5\u5FD7\u8BB0\u5F55\\" tabindex=\\"-1\\">\u65E5\u5FD7\u8BB0\u5F55 <a class=\\"header-anchor\\" href=\\"#\u65E5\u5FD7\u8BB0\u5F55\\" aria-hidden=\\"true\\">#</a></h3>\\n<ul>\\n<li>\u6253\u5370\u5F53\u524D\u7684\u8FED\u4EE3\u6B21\u6570\u3001\u635F\u5931\u503C\u548C\u8BAD\u7EC3/\u9A8C\u8BC1\u635F\u5931\u3002</li>\\n</ul>\\n<p>\u8FD9\u4E2A\u811A\u672C\u5C55\u793A\u4E86\u5982\u4F55\u4F7F\u7528 PyTorch \u548C\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\u6765\u8BAD\u7EC3\u4E00\u4E2A GPT \u6A21\u578B\u3002\u5B83\u5305\u62EC\u4E86\u6570\u636E\u52A0\u8F7D\u3001\u6A21\u578B\u521D\u59CB\u5316\u3001\u8BAD\u7EC3\u5FAA\u73AF\u3001\u5B66\u4E60\u7387\u8C03\u5EA6\u548C\u6027\u80FD\u76D1\u63A7\u7B49\u5173\u952E\u6B65\u9AA4\u3002</p>\\n<p>User: checkpoint = {\\n'model':model.state_dict(),\\n'optimizer':optimizer.state_dict,\\n'model_args': model_args,\\n'iter_num':iter_num,\\n'best_val_loss':best_val_loss\\n}</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u521B\u5EFA\u4E86\u4E00\u4E2A\u540D\u4E3A <code>checkpoint</code> \u7684\u5B57\u5178\uFF0C\u5B83\u7528\u4E8E\u4FDD\u5B58\u6A21\u578B\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u7684\u5173\u952E\u4FE1\u606F\uFF0C\u4EE5\u4FBF\u5728\u672A\u6765\u53EF\u4EE5\u6062\u590D\u8BAD\u7EC3\u6216\u8005\u8BC4\u4F30\u6A21\u578B\u7684\u6027\u80FD\u3002\u4EE5\u4E0B\u662F\u5B57\u5178\u4E2D\u5404\u4E2A\u952E\u503C\u5BF9\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ul>\\n<li>\\n<p><code>'model'</code>: <code>model.state_dict()</code> - \u8FD9\u4E2A\u952E\u5BF9\u5E94\u7684\u503C\u662F\u6A21\u578B\u7684\u72B6\u6001\u5B57\u5178\uFF0C\u5B83\u5305\u542B\u4E86\u6A21\u578B\u4E2D\u6240\u6709\u53C2\u6570\u7684\u5F53\u524D\u503C\u3002<code>state_dict</code> \u662F PyTorch \u4E2D\u7528\u4E8E\u4FDD\u5B58\u548C\u52A0\u8F7D\u6A21\u578B\u53C2\u6570\u7684\u5E38\u7528\u65B9\u6CD5\u3002</p>\\n</li>\\n<li>\\n<p><code>'optimizer'</code>: <code>optimizer.state_dict</code> - \u8FD9\u4E2A\u952E\u5BF9\u5E94\u7684\u503C\u662F\u4F18\u5316\u5668\u7684\u72B6\u6001\u5B57\u5178\uFF0C\u5B83\u4FDD\u5B58\u4E86\u4F18\u5316\u5668\u7684\u5F53\u524D\u72B6\u6001\uFF0C\u5305\u62EC\u53C2\u6570\uFF08\u5982\u5B66\u4E60\u7387\uFF09\u548C\u5185\u90E8\u7F13\u51B2\u533A\uFF08\u5982\u52A8\u91CF\u7D2F\u79EF\uFF09\u3002\u4FDD\u5B58\u4F18\u5316\u5668\u72B6\u6001\u5141\u8BB8\u4ECE\u7279\u5B9A\u7684\u8BAD\u7EC3\u9636\u6BB5\u6062\u590D\u800C\u65E0\u9700\u4ECE\u5934\u5F00\u59CB\u3002</p>\\n</li>\\n<li>\\n<p><code>'model_args'</code>: <code>model_args</code> - \u8FD9\u4E2A\u952E\u5B58\u50A8\u4E86\u7528\u4E8E\u521D\u59CB\u5316\u6A21\u578B\u7684\u53C2\u6570\u3002\u8FD9\u5728\u6062\u590D\u6A21\u578B\u65F6\u5F88\u6709\u7528\uFF0C\u56E0\u4E3A\u4F60\u53EF\u80FD\u9700\u8981\u8FD9\u4E9B\u53C2\u6570\u6765\u91CD\u65B0\u521B\u5EFA\u6A21\u578B\u7684\u5B9E\u4F8B\u3002</p>\\n</li>\\n<li>\\n<p><code>'iter_num'</code>: <code>iter_num</code> - \u8FD9\u4E2A\u952E\u8BB0\u5F55\u4E86\u5F53\u524D\u7684\u8BAD\u7EC3\u8FED\u4EE3\u6B21\u6570\u3002\u8FD9\u5141\u8BB8\u4F60\u5728\u6062\u590D\u8BAD\u7EC3\u65F6\u4ECE\u4E0A\u6B21\u505C\u6B62\u7684\u5730\u65B9\u7EE7\u7EED\u3002</p>\\n</li>\\n<li>\\n<p><code>'best_val_loss'</code>: <code>best_val_loss</code> - \u8FD9\u4E2A\u952E\u8BB0\u5F55\u4E86\u8FC4\u4ECA\u4E3A\u6B62\u5728\u9A8C\u8BC1\u96C6\u4E0A\u89C2\u5BDF\u5230\u7684\u6700\u4F4E\u635F\u5931\u503C\u3002\u8FD9\u4E2A\u6307\u6807\u53EF\u4EE5\u7528\u6765\u76D1\u63A7\u6A21\u578B\u7684\u6CDB\u5316\u80FD\u529B\uFF0C\u5E76\u5728\u6062\u590D\u8BAD\u7EC3\u65F6\u63D0\u4F9B\u4E00\u4E2A\u6027\u80FD\u57FA\u7EBF\u3002</p>\\n</li>\\n</ul>\\n<p>\u5C06\u8FD9\u4E9B\u7EC4\u4EF6\u653E\u5165 <code>checkpoint</code> \u5B57\u5178\u540E\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>torch.save</code> \u51FD\u6570\u5C06\u5176\u4FDD\u5B58\u5230\u6587\u4EF6\u4E2D\uFF0C\u5982\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #A6ACCD\\">torch</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">save</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">checkpoint</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> os</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #F07178\\">path</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">join</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">checkpoint_save_dir</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">checkpoint.pt</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">))</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u8FD9\u5C06\u5E8F\u5217\u5316 <code>checkpoint</code> \u5B57\u5178\u5E76\u5C06\u5176\u5199\u5165\u5230\u6307\u5B9A\u7684\u6587\u4EF6\u8DEF\u5F84\u3002\u5728\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u5B9A\u671F\u4FDD\u5B58\u68C0\u67E5\u70B9\u662F\u4E00\u79CD\u597D\u7684\u5B9E\u8DF5\uFF0C\u5B83\u53EF\u4EE5\u9632\u6B62\u6570\u636E\u4E22\u5931\uFF0C\u5E76\u63D0\u4F9B\u6A21\u578B\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u7684\u5FEB\u7167\u3002</p>\\n<p>\u6062\u590D\u68C0\u67E5\u70B9\u65F6\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>torch.load</code> \u51FD\u6570\u52A0\u8F7D\u8FD9\u4E2A\u5B57\u5178\uFF0C\u5E76\u4F7F\u7528\u5176\u4E2D\u7684\u4FE1\u606F\u6765\u6062\u590D\u6A21\u578B\u548C\u4F18\u5316\u5668\u7684\u72B6\u6001\uFF0C\u4EE5\u53CA\u7EE7\u7EED\u8BAD\u7EC3\u7684\u8FED\u4EE3\u6B21\u6570\u3002\u4F8B\u5982\uFF1A</p>\\n<div class=\\"language-python\\"><button class=\\"copy\\"></button><span class=\\"lang\\">python</span><pre v-pre><code><span class=\\"line\\"><span style=\\"color: #676E95\\"># \u52A0\u8F7D\u68C0\u67E5\u70B9</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">checkpoint </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> torch</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">load</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">ckpt_path</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #82AAFF\\"> </span><span style=\\"color: #A6ACCD\\">map_location</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #82AAFF\\">device</span><span style=\\"color: #89DDFF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u6062\u590D\u6A21\u578B\u72B6\u6001</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">model</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">load_state_dict</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">checkpoint</span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">model</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">])</span></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u6062\u590D\u4F18\u5316\u5668\u72B6\u6001</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">optimizer</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">load_state_dict</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #82AAFF\\">checkpoint</span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">optimizer</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">])</span></span>\\n<span class=\\"line\\"><span style=\\"color: #676E95\\"># \u6062\u590D\u5176\u4ED6\u8BAD\u7EC3\u53C2\u6570</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">iter_num </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> checkpoint</span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">iter_num</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"color: #A6ACCD\\">best_val_loss </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #A6ACCD\\"> checkpoint</span><span style=\\"color: #89DDFF\\">[</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">best_val_loss</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">]</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n</div><p>\u8FD9\u6837\uFF0C\u4F60\u5C31\u53EF\u4EE5\u4ECE\u68C0\u67E5\u70B9\u7EE7\u7EED\u8BAD\u7EC3\u6A21\u578B\uFF0C\u800C\u65E0\u9700\u4ECE\u5934\u5F00\u59CB\u3002</p>\\n<p>User: <a href=\\"http://model.to\\" target=\\"_blank\\" rel=\\"noreferrer\\">model.to</a>(device)\\noptimizer = model.configure_optimizers(weight_decay,learning_rate,betas,device_type)\\nif init_from == 'resume':\\noptimizer.load_state_dict(checkpoint['optimizer'])\\ncheckpoint = None# \u8FD9\u65F6\u5019 checkpoint \u5DF2\u7ECF\u8BFB\u597D\u4E86\uFF0C\u7ED9\u4ED6\u6E05\u7A7A\u4E00\u4E0B</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u662F\u8BAD\u7EC3\u6D41\u7A0B\u4E2D\u5173\u4E8E\u6A21\u578B\u3001\u4F18\u5316\u5668\u5904\u7406\u548C\u68C0\u67E5\u70B9\u52A0\u8F7D\u7684\u90E8\u5206\u3002\u4EE5\u4E0B\u662F\u5BF9\u4EE3\u7801\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u6A21\u578B\u79FB\u52A8\u5230\u8BBE\u5907</strong>:</p>\\n<ul>\\n<li><code>model.to(device)</code>: \u8FD9\u884C\u4EE3\u7801\u5C06\u6A21\u578B\u79FB\u52A8\u5230\u6307\u5B9A\u7684\u8BBE\u5907\uFF08\u901A\u5E38\u662F GPU\uFF09\uFF0C\u4EE5\u52A0\u901F\u8BA1\u7B97\u3002<code>device</code> \u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u8868\u793A\u8BA1\u7B97\u5C06\u5728\u54EA\u4E2A\u8BBE\u5907\u4E0A\u6267\u884C\uFF0C\u4F8B\u5982 <code>'cuda'</code> \u8868\u793A GPU\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u914D\u7F6E\u4F18\u5316\u5668</strong>:</p>\\n<ul>\\n<li><code>optimizer = model.configure_optimizers(weight_decay, learning_rate, betas, device_type)</code>: \u8FD9\u884C\u4EE3\u7801\u8C03\u7528\u6A21\u578B\u7684 <code>configure_optimizers</code> \u65B9\u6CD5\u6765\u521B\u5EFA\u4E00\u4E2A\u4F18\u5316\u5668\u3002\u8FD9\u4E2A\u65B9\u6CD5\u63A5\u6536\u6743\u91CD\u8870\u51CF <code>weight_decay</code>\u3001\u5B66\u4E60\u7387 <code>learning_rate</code>\u3001\u52A8\u91CF\u53C2\u6570 <code>betas</code> \u548C\u8BBE\u5907\u7C7B\u578B <code>device_type</code> \u4F5C\u4E3A\u8F93\u5165\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u914D\u7F6E\u597D\u7684\u4F18\u5316\u5668\u5B9E\u4F8B\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4ECE\u68C0\u67E5\u70B9\u6062\u590D</strong>:</p>\\n<ul>\\n<li><code>if init_from == 'resume':</code>: \u5982\u679C\u8BAD\u7EC3\u662F\u4ECE\u5148\u524D\u7684\u72B6\u6001\u6062\u590D\uFF08\u5373 <code>init_from</code> \u88AB\u8BBE\u7F6E\u4E3A <code>'resume'</code>\uFF09\uFF0C\u5219\u6267\u884C\u4EE5\u4E0B\u64CD\u4F5C\uFF1A\\n<ul>\\n<li><code>optimizer.load_state_dict(checkpoint['optimizer'])</code>: \u8FD9\u884C\u4EE3\u7801\u52A0\u8F7D\u5148\u524D\u4FDD\u5B58\u7684\u4F18\u5316\u5668\u72B6\u6001\u3002<code>checkpoint['optimizer']</code> \u662F\u4ECE\u68C0\u67E5\u70B9\u6587\u4EF6\u4E2D\u52A0\u8F7D\u7684\u4F18\u5316\u5668\u72B6\u6001\u5B57\u5178\u3002</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u6E05\u7A7A\u68C0\u67E5\u70B9\u53D8\u91CF</strong>:</p>\\n<ul>\\n<li><code>checkpoint = None</code>: \u52A0\u8F7D\u5B8C\u68C0\u67E5\u70B9\u540E\uFF0C\u5C06 <code>checkpoint</code> \u53D8\u91CF\u8BBE\u7F6E\u4E3A <code>None</code>\u3002\u8FD9\u6709\u52A9\u4E8E\u907F\u514D\u5728\u5185\u5B58\u4E2D\u5B58\u50A8\u4E0D\u5FC5\u8981\u7684\u5927\u578B\u5BF9\u8C61\uFF0C\u5C24\u5176\u662F\u5728\u957F\u65F6\u95F4\u8FD0\u884C\u7684\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4F7F\u7528\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3</strong>:</p>\\n<ul>\\n<li>\u4EE3\u7801\u4E2D\u6CA1\u6709\u76F4\u63A5\u663E\u793A\uFF0C\u4F46 <code>model.configure_optimizers</code> \u65B9\u6CD5\u53EF\u80FD\u5DF2\u7ECF\u914D\u7F6E\u4E86\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\uFF0C\u8FD9\u901A\u5E38\u6D89\u53CA\u5230 <code>torch.cuda.amp</code> \u5DE5\u5177\u7684\u4F7F\u7528\uFF0C\u4F8B\u5982 <code>GradScaler</code>\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BBE\u5907\u7C7B\u578B\u548C\u6570\u636E\u7C7B\u578B</strong>:</p>\\n<ul>\\n<li>\u4EE3\u7801\u4E2D\u6CA1\u6709\u76F4\u63A5\u663E\u793A\uFF0C\u4F46 <code>device_type</code> \u548C <code>dtype</code> \u7684\u8BBE\u7F6E\u53EF\u80FD\u4E0E\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\u6709\u5173\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u4F7F\u7528 <code>bfloat16</code> \u6570\u636E\u7C7B\u578B\uFF0C\u53EF\u80FD\u9700\u8981\u5728\u4F18\u5316\u5668\u914D\u7F6E\u4E2D\u8003\u8651\u6570\u636E\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u6BB5\u4EE3\u7801\u786E\u4FDD\u4E86\u6A21\u578B\u548C\u4F18\u5316\u5668\u80FD\u591F\u88AB\u6B63\u786E\u5730\u521D\u59CB\u5316\u6216\u4ECE\u5148\u524D\u7684\u72B6\u6001\u6062\u590D\uFF0C\u5E76\u4E14\u6A21\u578B\u88AB\u79FB\u52A8\u5230\u4E86\u9002\u5408\u8BAD\u7EC3\u7684\u8BBE\u5907\u4E0A\u3002\u6B64\u5916\uFF0C\u901A\u8FC7\u6E05\u7A7A\u4E0D\u518D\u9700\u8981\u7684\u68C0\u67E5\u70B9\u6570\u636E\uFF0C\u5B83\u8FD8\u6709\u52A9\u4E8E\u4F18\u5316\u5185\u5B58\u4F7F\u7528\u3002</p>\\n<p>User: def estimate*loss():\\nmodel.eval() # eval \u4E0D\u8BA1\u7B97\u68AF\u5EA6\\nout = {}\\nfor split in ['train','val']: # \u8FD9\u91CC\u662F\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u90FD\u7B97\u4E00\u4E0B loss # \u6211\u53D1\u73B0 nanogpt \u4E2D\u5F88\u591A\u4F20\u53C2\u90FD\u7528 dict \u7684\u65B9\u5F0F\\nlosses = torch.zeros(eval_iters)\\nfor k in range(eval_iters): # print(f&quot;now_eval in {k}&quot;)\\nX,Y = get_batch(split)\\nwith ctx:\\n*,loss = model(X,Y) # x,targets\\nlosses[k] = loss.item()\\nout[split] = losses.mean()\\nmodel.train() # \u9000\u51FA\u65F6\u56DE\u5230 train \u7684\u6A21\u5F0F\\nreturn out</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>estimate_loss</code> \u7684\u51FD\u6570\uFF0C\u7528\u4E8E\u8BC4\u4F30\u6A21\u578B\u5728\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u4E0A\u7684\u5E73\u5747\u635F\u5931\u3002\u4EE5\u4E0B\u662F\u8BE6\u7EC6\u6B65\u9AA4\u548C\u5173\u952E\u70B9\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>\u8BBE\u7F6E\u6A21\u578B\u4E3A\u8BC4\u4F30\u6A21\u5F0F</strong>:</p>\\n<ul>\\n<li><code>model.eval()</code>: \u8C03\u7528\u6A21\u578B\u7684 <code>eval</code> \u65B9\u6CD5\uFF0C\u5C06\u6A21\u578B\u8BBE\u7F6E\u4E3A\u8BC4\u4F30\u6A21\u5F0F\u3002\u5728\u8BC4\u4F30\u6A21\u5F0F\u4E0B\uFF0C\u6A21\u578B\u4E2D\u7684\u67D0\u4E9B\u5C42\uFF08\u5982 Dropout \u548C Batch Normalization\uFF09\u7684\u884C\u4E3A\u4F1A\u6539\u53D8\uFF0C\u4EE5\u9002\u5E94\u8BC4\u4F30\u548C\u63A8\u7406\u8FC7\u7A0B\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u521D\u59CB\u5316\u8F93\u51FA\u5B57\u5178</strong>:</p>\\n<ul>\\n<li><code>out = {}</code>: \u521B\u5EFA\u4E00\u4E2A\u7A7A\u5B57\u5178\uFF0C\u7528\u4E8E\u5B58\u50A8\u4E0D\u540C\u6570\u636E\u96C6\uFF08\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\uFF09\u7684\u5E73\u5747\u635F\u5931\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5FAA\u73AF\u5904\u7406\u6570\u636E\u96C6</strong>:</p>\\n<ul>\\n<li>\u5916\u5C42\u5FAA\u73AF\u904D\u5386 <code>['train', 'val']</code>\uFF0C\u5206\u522B\u4EE3\u8868\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u521D\u59CB\u5316\u635F\u5931\u6570\u7EC4</strong>:</p>\\n<ul>\\n<li><code>losses = torch.zeros(eval_iters)</code>: \u5BF9\u4E8E\u6BCF\u4E2A\u6570\u636E\u96C6\uFF0C\u521B\u5EFA\u4E00\u4E2A\u957F\u5EA6\u4E3A <code>eval_iters</code> \u7684\u5F20\u91CF\uFF0C\u7528\u4E8E\u5B58\u50A8\u8FED\u4EE3\u8FC7\u7A0B\u4E2D\u7684\u635F\u5931\u503C\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8FED\u4EE3\u8BA1\u7B97\u635F\u5931</strong>:</p>\\n<ul>\\n<li>\u5185\u5C42\u5FAA\u73AF <code>for k in range(eval_iters)</code>: \u6267\u884C <code>eval_iters</code> \u6B21\u8FED\u4EE3\uFF0C\u6BCF\u6B21\u8FED\u4EE3\u90FD\u8BA1\u7B97\u4E00\u6B21\u635F\u5931\u3002</li>\\n<li><code>X, Y = get_batch(split)</code>: \u8C03\u7528 <code>get_batch</code> \u51FD\u6570\u83B7\u53D6\u5F53\u524D\u6570\u636E\u96C6\u7684\u4E00\u4E2A\u6279\u6B21\u6570\u636E\u3002</li>\\n<li><code>with ctx:</code>: \u4F7F\u7528\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668 <code>ctx</code>\uFF08\u53EF\u80FD\u662F <code>torch.amp.autocast</code>\uFF09\u6765\u542F\u7528\u6DF7\u5408\u7CBE\u5EA6\u8BAD\u7EC3\u3002</li>\\n<li><code>_, loss = model(X, Y)</code>: \u8C03\u7528\u6A21\u578B\u7684 <code>forward</code> \u65B9\u6CD5\u8BA1\u7B97\u635F\u5931\uFF0C\u8FD9\u91CC <code>_</code> \u8868\u793A\u6211\u4EEC\u4E0D\u5173\u5FC3\u6A21\u578B\u7684\u8F93\u51FA\uFF08\u4EC5\u5173\u5FC3\u635F\u5931\uFF09\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BB0\u5F55\u635F\u5931</strong>:</p>\\n<ul>\\n<li><code>losses[k] = loss.item()</code>: \u5C06\u8BA1\u7B97\u5F97\u5230\u7684\u635F\u5931\u503C\u8BB0\u5F55\u5230 <code>losses</code> \u5F20\u91CF\u4E2D\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BA1\u7B97\u5E73\u5747\u635F\u5931</strong>:</p>\\n<ul>\\n<li><code>out[split] = losses.mean()</code>: \u8BA1\u7B97\u8BB0\u5F55\u7684\u635F\u5931\u503C\u7684\u5E73\u5747\u503C\uFF0C\u5E76\u5C06\u5176\u5B58\u50A8\u5728 <code>out</code> \u5B57\u5178\u4E2D\uFF0C\u952E\u4E3A\u5F53\u524D\u7684\u6570\u636E\u96C6\u540D\u79F0\uFF08<code>split</code>\uFF09\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8BBE\u7F6E\u6A21\u578B\u4E3A\u8BAD\u7EC3\u6A21\u5F0F</strong>:</p>\\n<ul>\\n<li><code>model.train()</code>: \u5728\u51FD\u6570\u7ED3\u675F\u524D\uFF0C\u5C06\u6A21\u578B\u8BBE\u7F6E\u56DE\u8BAD\u7EC3\u6A21\u5F0F\uFF0C\u4EE5\u786E\u4FDD\u6A21\u578B\u5728\u4E0B\u4E00\u6B21\u8C03\u7528 <code>estimate_loss</code> \u4E4B\u524D\u5904\u4E8E\u6B63\u786E\u7684\u72B6\u6001\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u8FD4\u56DE\u7ED3\u679C</strong>:</p>\\n<ul>\\n<li><code>return out</code>: \u8FD4\u56DE\u5305\u542B\u8BAD\u7EC3\u96C6\u548C\u9A8C\u8BC1\u96C6\u5E73\u5747\u635F\u5931\u7684\u5B57\u5178\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A\u51FD\u6570\u5141\u8BB8\u4F60\u8BC4\u4F30\u6A21\u578B\u5728\u4E0D\u540C\u6570\u636E\u96C6\u4E0A\u7684\u6027\u80FD\uFF0C\u901A\u5E38\u7528\u4E8E\u76D1\u63A7\u6A21\u578B\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u7684\u635F\u5931\u53D8\u5316\uFF0C\u4EE5\u53CA\u68C0\u67E5\u6A21\u578B\u662F\u5426\u8FC7\u62DF\u5408\u6216\u6B20\u62DF\u5408\u3002\u901A\u8FC7\u5B9A\u671F\u8C03\u7528\u6B64\u51FD\u6570\uFF0C\u4F60\u53EF\u4EE5\u83B7\u5F97\u6A21\u578B\u5728\u8BAD\u7EC3\u548C\u9A8C\u8BC1\u8FC7\u7A0B\u4E2D\u635F\u5931\u7684\u5FEB\u7167\u3002</p>\\n<p>User: def get_lr(now_iter):\\nif(now_iter&lt;warmup_iters):#(1)warmup \u9636\u6BB5\uFF0C\u7EBF\u6027\u4E0A\u5347\\nreturn learning_rate<em>now_iter/warmup_iters\\nelif(now_iter&gt;lr_decay_iters):#(2)\u8D85\u8FC7 decay\uFF0C\u5230 min \u4E86\\nreturn min_lr\\nelse:# (3)\u5728 warmup \u548C decay \u4E4B\u95F4\uFF0C\u7528 cos \u505A lr \u8870\u51CF\\nrate = (now_iter-warmup_iters)/(lr_decay_iters-warmup_iters) # \u8BA1\u7B97\u6240\u5360\u6BD4\u4F8B(0,1)\\nreturn min_lr + 0.5</em>(1.0+math.cos(math.pi*rate)) * (learning_rate-min_lr)</p>\\n<p>Kimi: \u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>get_lr</code> \u7684\u51FD\u6570\uFF0C\u7528\u4E8E\u6839\u636E\u5F53\u524D\u8FED\u4EE3\u6B21\u6570 <code>now_iter</code> \u8BA1\u7B97\u5B66\u4E60\u7387\u3002\u8FD9\u4E2A\u51FD\u6570\u5B9E\u73B0\u4E86\u4E00\u4E2A\u5B66\u4E60\u7387\u8C03\u5EA6\u7B56\u7565\uFF0C\u901A\u5E38\u7528\u4E8E\u5E2E\u52A9\u6A21\u578B\u5728\u8BAD\u7EC3\u521D\u671F\u5FEB\u901F\u6536\u655B\uFF0C\u5E76\u5728\u540E\u671F\u7A33\u5B9A\u6536\u655B\u901F\u5EA6\u3002\u4EE5\u4E0B\u662F\u8BE5\u51FD\u6570\u7684\u8BE6\u7EC6\u89E3\u91CA\uFF1A</p>\\n<ol>\\n<li>\\n<p><strong>Warmup \u9636\u6BB5</strong>:</p>\\n<ul>\\n<li>\u5982\u679C <code>now_iter</code> \u5C0F\u4E8E <code>warmup_iters</code>\uFF0C\u5219\u5904\u4E8E\u9884\u70ED\u9636\u6BB5\uFF08warmup phase\uFF09\u3002\u5728\u8FD9\u4E2A\u9636\u6BB5\uFF0C\u5B66\u4E60\u7387\u4ECE 0 \u5F00\u59CB\u7EBF\u6027\u589E\u52A0\u5230\u521D\u59CB\u5B66\u4E60\u7387 <code>learning_rate</code>\u3002\u8BA1\u7B97\u516C\u5F0F\u4E3A\uFF1A\\n[\\n\\\\text{learning_rate} \\\\times \\\\left(\\\\frac{\\\\text{now_iter}}{\\\\text{warmup_iters}}\\\\right)\\n]</li>\\n<li>\u8FD9\u79CD\u65B9\u6CD5\u53EF\u4EE5\u9632\u6B62\u8BAD\u7EC3\u521D\u671F\u7531\u4E8E\u5B66\u4E60\u7387\u8FC7\u9AD8\u5BFC\u81F4\u7684\u4E0D\u7A33\u5B9A\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u5B66\u4E60\u7387\u8870\u51CF</strong>:</p>\\n<ul>\\n<li>\u5982\u679C <code>now_iter</code> \u5927\u4E8E <code>lr_decay_iters</code>\uFF0C\u5219\u5DF2\u7ECF\u8D85\u51FA\u4E86\u8870\u51CF\u8FED\u4EE3\u6B21\u6570\uFF0C\u6B64\u65F6\u5B66\u4E60\u7387\u5C06\u88AB\u8BBE\u7F6E\u4E3A\u6700\u5C0F\u5B66\u4E60\u7387 <code>min_lr</code>\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>Cosine \u8870\u51CF</strong>:</p>\\n<ul>\\n<li>\u5982\u679C <code>now_iter</code> \u5728 <code>warmup_iters</code> \u548C <code>lr_decay_iters</code> \u4E4B\u95F4\uFF0C\u5C06\u4F7F\u7528\u4F59\u5F26\u9000\u706B\u7B56\u7565\uFF08cosine annealing\uFF09\u8C03\u6574\u5B66\u4E60\u7387\u3002\u8BA1\u7B97\u516C\u5F0F\u4E3A\uFF1A\\n[\\n\\\\text{min_lr} + \\\\frac{1}{2} \\\\times (1 + \\\\cos(\\\\pi \\\\times \\\\text{rate})) \\\\times (\\\\text{learning_rate} - \\\\text{min_lr})\\n]\\n\u5176\u4E2D\uFF0C<code>rate</code> \u662F\u4E00\u4E2A\u4ECE 0 \u5230 1 \u7684\u6BD4\u4F8B\u7CFB\u6570\uFF0C\u8868\u793A\u5F53\u524D\u8FED\u4EE3\u5728\u9884\u70ED\u9636\u6BB5\u548C\u8870\u51CF\u9636\u6BB5\u4E4B\u95F4\u7684\u4F4D\u7F6E\u3002</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>\u4F59\u5F26\u9000\u706B</strong>:</p>\\n<ul>\\n<li>\u4F59\u5F26\u9000\u706B\u662F\u4E00\u79CD\u6A21\u4EFF\u4F59\u5F26\u51FD\u6570\u5468\u671F\u6027\u53D8\u5316\u7684\u65B9\u6CD5\uFF0C\u7528\u4E8E\u5E73\u6ED1\u5730\u51CF\u5C11\u5B66\u4E60\u7387\u3002\u8FD9\u79CD\u65B9\u6CD5\u53EF\u4EE5\u4F7F\u5B66\u4E60\u7387\u5728\u9884\u70ED\u9636\u6BB5\u4E4B\u540E\u9010\u6E10\u964D\u4F4E\uFF0C\u800C\u4E0D\u662F\u7A81\u7136\u51CF\u5C11\uFF0C\u6709\u52A9\u4E8E\u6A21\u578B\u5728\u8BAD\u7EC3\u540E\u671F\u66F4\u7EC6\u81F4\u5730\u63A2\u7D22\u6700\u4F18\u89E3\u7A7A\u95F4\u3002</li>\\n</ul>\\n</li>\\n</ol>\\n<p>\u8FD9\u4E2A\u5B66\u4E60\u7387\u8C03\u5EA6\u7B56\u7565\u7ED3\u5408\u4E86\u9884\u70ED\u3001\u7EBF\u6027\u8870\u51CF\u548C\u4F59\u5F26\u9000\u706B\u4E09\u79CD\u65B9\u6CD5\uFF0C\u65E8\u5728\u5E73\u8861\u8BAD\u7EC3\u901F\u5EA6\u548C\u6A21\u578B\u6027\u80FD\u3002\u9884\u70ED\u9636\u6BB5\u5E2E\u52A9\u6A21\u578B\u5FEB\u901F\u8FDB\u5165\u7A33\u5B9A\u72B6\u6001\uFF0C\u4F59\u5F26\u9000\u706B\u5219\u6709\u52A9\u4E8E\u5728\u8BAD\u7EC3\u540E\u671F\u907F\u514D\u8FC7\u65E9\u6536\u655B\u5230\u6B21\u4F18\u89E3\u3002\u901A\u8FC7\u9002\u5F53\u8C03\u6574 <code>warmup_iters</code>\u3001<code>lr_decay_iters</code>\u3001<code>learning_rate</code> \u548C <code>min_lr</code> \u7B49\u53C2\u6570\uFF0C\u53EF\u4EE5\u8FDB\u4E00\u6B65\u4F18\u5316\u5B66\u4E60\u7387\u8C03\u5EA6\u4EE5\u9002\u5E94\u4E0D\u540C\u7684\u8BAD\u7EC3\u4EFB\u52A1\u548C\u6A21\u578B\u3002</p>\\n<p>User: import os\\nimport tiktoken\\nimport torch\\nfrom model import GPT,Model_args</p>\\n<p>checkpoint_save_dir = './checkpoints'\\ndevice = 'cuda'\\ndevice_type = 'cuda'\\ndtype = 'bfloat16'\\nptdtype = {'float32': torch.float32, 'bfloat16': torch.bfloat16, 'float16': torch.float16}[dtype]</p>\\n<h1 id=\\"generate-\u53C2\u6570\\" tabindex=\\"-1\\">generate \u53C2\u6570 <a class=\\"header-anchor\\" href=\\"#generate-\u53C2\u6570\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>top_k = 200\\ntempreture = 0.5 # \u4E00\u822C\u90FD\u5148\u8BBE\u7F6E 1\uFF0C\u60F3\u8981\u66F4 random \u4E00\u70B9\u5C31\u5F80\u4E0A\u8C03\\nstart = &quot;Sherlock Homes&quot; # \u8FD9\u662F\u6700\u5F00\u59CB\u7684\u8F93\u5165\\nnum_samples = 1 # sample \u51E0\u6B21\\nmax_new_tokens = 128</p>\\n<h1 id=\\"\u8BFB-checkpoint\\" tabindex=\\"-1\\">\u8BFB checkpoint <a class=\\"header-anchor\\" href=\\"#\u8BFB-checkpoint\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>print(f&quot;load checkpoint from {checkpoint_save_dir}&quot;)\\nckpt_path = os.path.join(checkpoint_save_dir,'<a href=\\"http://checkpoint.pt\\" target=\\"_blank\\" rel=\\"noreferrer\\">checkpoint.pt</a>') # \u8BFB\u53D6 checkpoint \u8DEF\u5F84\\ncheckpoint = torch.load(ckpt_path, map_location=device)\\nargs = checkpoint['model_args']\\nmodel = GPT(Model_args(**args))</p>\\n<h1 id=\\"\u8BFB\u53D6\u6743\u91CD\\" tabindex=\\"-1\\">\u8BFB\u53D6\u6743\u91CD <a class=\\"header-anchor\\" href=\\"#\u8BFB\u53D6\u6743\u91CD\\" aria-hidden=\\"true\\">#</a></h1>\\n<h1 id=\\"for-k-v-in-checkpoint-items\\" tabindex=\\"-1\\">for k,v in checkpoint.items(): <a class=\\"header-anchor\\" href=\\"#for-k-v-in-checkpoint-items\\" aria-hidden=\\"true\\">#</a></h1>\\n<h1 id=\\"print-k\\" tabindex=\\"-1\\">print(k) <a class=\\"header-anchor\\" href=\\"#print-k\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>state_dict = checkpoint['model']</p>\\n<h1 id=\\"\u8FD9\u91CC-nanogpt-\u7684\u4F5C\u8005\u8BF4-resume-\u7684\u65F6\u5019\u6709-bug\uFF0C\u4E00\u4E9B\u53C2\u6570\u4F1A\u52A0\u4E0A\u524D\u7F00-orig-mod\\" tabindex=\\"-1\\">\u8FD9\u91CC nanogpt \u7684\u4F5C\u8005\u8BF4 resume \u7684\u65F6\u5019\u6709 bug\uFF0C\u4E00\u4E9B\u53C2\u6570\u4F1A\u52A0\u4E0A\u524D\u7F00'_orig_mod' <a class=\\"header-anchor\\" href=\\"#\u8FD9\u91CC-nanogpt-\u7684\u4F5C\u8005\u8BF4-resume-\u7684\u65F6\u5019\u6709-bug\uFF0C\u4E00\u4E9B\u53C2\u6570\u4F1A\u52A0\u4E0A\u524D\u7F00-orig-mod\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>unwanted_prefix = '_orig_mod'\\nfor k,v in list(state_dict.items()): # \u904D\u5386 dict \u53BB\u9664 key \u4E2D\u4E0D\u8981\u7684\u524D\u7F00\\nif k.startswith(unwanted_prefix):\\nstate_dict[k[len(unwanted_prefix):]] = state_dict.pop(k) # \u622A\u53D6 key \u540E\u534A\u6BB5\\nmodel.load_state_dict(state_dict)</p>\\n<p>model.eval()\\n<a href=\\"http://model.to\\" target=\\"_blank\\" rel=\\"noreferrer\\">model.to</a>(device)</p>\\n<p>enc = tiktoken.get_encoding(&quot;gpt2&quot;)# gpt2 tokenizer\\ndecode = lambda x:enc.decode(x)\\nencode = lambda x:enc.encode(x,allowed_special={&quot;&lt;|endoftext|&gt;&quot;})\\n'''\\n\u8868\u793A\u6587\u672C\u7ED3\u675F\u7684\u7279\u6B8A token\uFF0C\u5728 tokenization \u540E\u7531\u5F00\u53D1\u8005\u624B\u52A8\u52A0\u5165\\n\u5728\u5343\u95EE\u7684\u6587\u6863\u91CC\u6709\u4E2A\u89E3\u91CA<a href=\\"https://github.com/QwenLM/Qwen/blob/main/tokenization_note_zh.md\\" target=\\"_blank\\" rel=\\"noreferrer\\">https://github.com/QwenLM/Qwen/blob/main/tokenization_note_zh.md</a><br>\\n\u5982\u679C\u4E0D\u52A0\u8FD9\u6BB5\uFF0C&lt;|endoftext|&gt;\u4F1A\u88AB tokenize \u6210\\nids:[1350, 9639, 91, 8691, 723, 427, 91, 82598]\\ntokens: [b'print', b'(&quot;&lt;', b'|', b'endo', b'ft', b'ext', b'|', b'&gt;&quot;)']\\n\u6211\u4EEC\u5E0C\u671B\u7684\u60C5\u51B5\u662F\\nids: [1350, 445, 151643, 899]\\ntokens: [b'print', b'(&quot;', '&lt;|endoftext|&gt;', b'&quot;)']\\n\u6211\u81EA\u5DF1\u5728 data/test_tiktoken.py \u4E2D\u8BD5\u9A8C\u4E86\u4E00\u4E0B\uFF0C\\n\u5982\u679C\u4E0D\u589E\u52A0\u8FD9\u4E00\u53C2\u6570\uFF0C\u76F4\u63A5\u8FDB\u884C encode \u7684\u8BDD\u4F1A\u76F4\u63A5\u62A5\u9519\\n'''</p>\\n<p>start_ids = encode(start)</p>\\n<h1 id=\\"x-torch-tensor-start-ids-dtype-torch-long-device-device-none\\" tabindex=\\"-1\\">x = torch.tensor(start_ids,dtype=torch.long,device=device)[None,...] <a class=\\"header-anchor\\" href=\\"#x-torch-tensor-start-ids-dtype-torch-long-device-device-none\\" aria-hidden=\\"true\\">#</a></h1>\\n<h1 id=\\"none-\u589E\u52A0\u4E00\u4E2A\u7EF4\u5EA6\uFF0C\u540E\u9762-\u4FDD\u6301\u4E0D\u53D8-\u5C06\u4E00\u7EF4\u5F20\u91CF\u53D8\u6210\u4E8C\u7EF4\u5F20\u91CF\\" tabindex=\\"-1\\">[None,...]\u589E\u52A0\u4E00\u4E2A\u7EF4\u5EA6\uFF0C\u540E\u9762...\u4FDD\u6301\u4E0D\u53D8,\u5C06\u4E00\u7EF4\u5F20\u91CF\u53D8\u6210\u4E8C\u7EF4\u5F20\u91CF <a class=\\"header-anchor\\" href=\\"#none-\u589E\u52A0\u4E00\u4E2A\u7EF4\u5EA6\uFF0C\u540E\u9762-\u4FDD\u6301\u4E0D\u53D8-\u5C06\u4E00\u7EF4\u5F20\u91CF\u53D8\u6210\u4E8C\u7EF4\u5F20\u91CF\\" aria-hidden=\\"true\\">#</a></h1>\\n<h1 id=\\"\u6216\u8005\u4F7F\u7528-unsqueeze-\u5E94\u8BE5\u4E5F\u80FD\u5B9E\u73B0\\" tabindex=\\"-1\\">\u6216\u8005\u4F7F\u7528 unsqueeze \u5E94\u8BE5\u4E5F\u80FD\u5B9E\u73B0 <a class=\\"header-anchor\\" href=\\"#\u6216\u8005\u4F7F\u7528-unsqueeze-\u5E94\u8BE5\u4E5F\u80FD\u5B9E\u73B0\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>x = torch.tensor(start_ids,dtype=torch.long,device=device).unsqueeze(0)</p>\\n<p>ctx = torch.amp.autocast(device_type=device_type, dtype=ptdtype)</p>\\n<h1 id=\\"\u8FD9\u91CC\u663E\u7136\u4E0D\u7528\u518D-scaler-\u4E86\uFF0C\u56E0\u4E3A\u4E0D\u8BA1\u7B97\u68AF\u5EA6\\" tabindex=\\"-1\\">\u8FD9\u91CC\u663E\u7136\u4E0D\u7528\u518D scaler \u4E86\uFF0C\u56E0\u4E3A\u4E0D\u8BA1\u7B97\u68AF\u5EA6 <a class=\\"header-anchor\\" href=\\"#\u8FD9\u91CC\u663E\u7136\u4E0D\u7528\u518D-scaler-\u4E86\uFF0C\u56E0\u4E3A\u4E0D\u8BA1\u7B97\u68AF\u5EA6\\" aria-hidden=\\"true\\">#</a></h1>\\n<h1 id=\\"\u5F00\u59CB-generate\\" tabindex=\\"-1\\">\u5F00\u59CB generate <a class=\\"header-anchor\\" href=\\"#\u5F00\u59CB-generate\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>with torch.no_grad():\\nwith ctx:\\nfor k in range(num_samples):\\ny = model.generate(x,max_new_tokens,top_k=top_k,tempreture=tempreture)\\nprint(decode(y[0].tolist()))\\nprint(&quot;</p>\\n"},{"title":"\u65E0\u80FD\u72C2\u5984","href":"posts/none.html","create":1677974400000,"update":1714574130242,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":""},{"title":"\u54D4\u54D4\u54D4\u54D4\u3002\u3002\u3002\u3002\u3002","href":"posts/bbbb.html","create":1677369600000,"update":1714574130241,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":""},{"title":"\u7B2C\u4E00\u4E2A\u535A\u5BA2","href":"posts/first.html","create":1676764800000,"update":1714574130243,"tags":["\u65E0\u804A\u65E5\u5E38"],"cover":"../img/fcf6ae3c13fc0da1d4f215c969a0ffd22a5bb5f1.jpg%40942w_668h_progressive.webp","excerpt":"<h1 id=\\"\u7B2C\u4E00\u4E2A\u535A\u5BA2\\" tabindex=\\"-1\\">\u7B2C\u4E00\u4E2A\u535A\u5BA2 <a class=\\"header-anchor\\" href=\\"#\u7B2C\u4E00\u4E2A\u535A\u5BA2\\" aria-hidden=\\"true\\">#</a></h1>\\n<p>\u8FD9\u91CC\u662F\u65E0\u5984 p\uFF0C\u4E00\u4E2A\u4E0D\u662F p \u4E3B\u4F46\u60F3\u6210\u4E3A p \u4E3B\u7684\u4EBA~</p>\\n"}]`);function li(e,n){let t,s=!1;return()=>{t&&clearTimeout(t),s?t=setTimeout(e,n):(e(),s=!0,setTimeout(()=>{s=!1},n))}}const ai={id:"waline"},ri=De({__name:"Waline",setup(e,{expose:n}){let t=null;Ze(()=>{const l=rn().site.value.themeConfig.waline;if(!l){console.error("\u672A\u914D\u7F6Ewaline\u670D\u52A1\u7AEF\u5730\u5740");return}s(l)});const s=l=>{t=Waline({el:"#waline",serverURL:l})};return n({update:()=>{t==null||t.update()}}),(l,a)=>($(),H("div",ai))}});const ii={class:"toc"},ci=["href"],pi=De({__name:"TOC",props:{data:null,active:null},setup(e){return(n,t)=>($(),H("div",ii,[P("ol",null,[($(!0),H(le,null,on(e.data,(s,o)=>($(),H("li",{class:an(["h"+s.level,{active:e.active===o}])},[P("a",{href:"#"+s.slug},ue(s.title),9,ci)],2))),256))])]))}});const di={class:"titlebox"},ui={class:"title"},fi={class:"info"},hi={class:"article"},_i={class:"content nav"},gi=["href"],mi=P("i",{class:"fa fa-angle-left"},null,-1),yi=["href"],Fi=P("i",{class:"fa fa-angle-right"},null,-1),Di=De({__name:"Article",setup(e){const n=rn(),t=n.site.value.base,s=vt(),o=qe(""),l=n.theme.value.name,a=qe(""),r=qe(0),c=qe(""),d=qe(0),_=qe(),m=Vn([{href:"",text:"",show:!0},{href:"",text:"",show:!0}]),C=qe(0),T=()=>{var A;if(C.value=Oe.findIndex(E=>E.href==s.path.replace(t,"")),C.value==-1)return;o.value=n.page.value.title,c.value=`background-image: url(${n.page.value.frontmatter.cover||"https://tva4.sinaimg.cn/large/0060lm7Tly1ftg6omnqa4j31hc0u010z.jpg"})`,a.value=new Date(n.page.value.lastUpdated||Oe[C.value].create).toLocaleDateString("sv-SE"),(A=_.value)==null||A.update();let f=C.value;f-1>=0?(m[0].href=t+Oe[f-1].href,m[0].text=Oe[f-1].title,m[0].show=!0):m[0].show=!1,f+1<Oe.length?(m[1].href=t+Oe[f+1].href,m[1].text=Oe[f+1].title,m[1].show=!0):m[1].show=!1,typeof window<"u"&&cs().then(()=>{L()})};T(),yn(s,T);const N=()=>{const f=n.page.value.headers;if(f.length!=0){for(let A=0;A<f.length;A++){const E=document.getElementById(f[A].slug);if((E==null?void 0:E.getBoundingClientRect()).top>200){let K=" ";A>0&&(d.value=A-1,K="#"+f[A-1].slug),history.replaceState(null,document.title,K);return}}d.value=f.length-1,history.replaceState(null,document.title,"#"+f[f.length-1].slug)}},S=li(N,300),L=()=>{if(typeof renderMathInElement>"u")return;const f=document.querySelector(".article .content");!f||renderMathInElement(f,{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})};return Ze(()=>{N(),window.addEventListener("scroll",S)}),Qn(()=>{window.removeEventListener("scroll",S)}),(f,A)=>{const E=Fa("Content");return $(),H(le,null,[C.value>=0?($(),H("div",{key:0,class:"abanner",style:Cn(c.value)},[P("div",di,[P("h1",ui,ue(o.value),1),P("div",fi,ue(ye(l))+" \xB7 \u66F4\u65B0\u4E8E "+ue(a.value)+" \xB7 "+ue(r.value)+" \u6B21\u9605\u8BFB",1)])],4)):ot("",!0),P("div",hi,[Z(E,{class:"content"}),P("div",_i,[P("span",null,[m[0].show?($(),H("a",{key:0,href:m[0].href},[mi,Le(" "+ue(m[0].text),1)],8,gi)):ot("",!0)]),P("span",null,[m[1].show?($(),H("a",{key:0,href:m[1].href},[Le(ue(m[1].text)+" ",1),Fi],8,yi)):ot("",!0)])]),C.value!=-1?($(),ht(ri,{key:0,ref_key:"waline",ref:_},null,512)):ot("",!0),Z(pi,{data:ye(n).page.value.headers,active:d.value},null,8,["data","active"])])],64)}}});const bi={class:"bloglist"},Ai=P("div",{class:"section"},[P("i",{class:"fa-solid fa-book"}),Le(" \u6587\u7AE0\u5217\u8868 "),P("hr")],-1),Ci={class:"card"},vi=P("div",{class:"image"},null,-1),xi={class:"info"},wi={class:"date"},ki=P("i",{class:"fa fa-clock"},null,-1),Ti=["href"],Pi={class:"title"},Ei=["innerHTML"],Mi={key:0,class:"tags"},zi=["onClick"],qi=P("i",{class:"fa fa-tag"},null,-1),Bi={key:1,class:"tags"},Ni=["href"],Li=P("i",{class:"fa fa-tag"},null,-1),Yo=De({__name:"BlogList",props:{posts:null,click:null},setup(e){const n=rn().site.value.base;return(t,s)=>($(),H("div",bi,[Ai,($(!0),H(le,null,on(e.posts,o=>($(),H("div",Ci,[vi,P("div",xi,[P("div",wi,[ki,Le(" \u53D1\u5E03\u4E8E "+ue(new Date(o.create).toLocaleDateString("sv-SE")),1)]),P("a",{href:ye(n)+o.href},[P("div",Pi,ue(o.title),1)],8,Ti),P("div",{class:"content",innerHTML:o.excerpt},null,8,Ei),e.click?($(),H("div",Mi,[($(!0),H(le,null,on(o.tags,l=>($(),H("a",{href:"#",onClick:a=>e.click(l)},[qi,Le(" "+ue(l),1)],8,zi))),256))])):($(),H("div",Bi,[($(!0),H(le,null,on(o.tags,l=>($(),H("a",{href:`${ye(n)}tags/?q=${l}`},[Li,Le(" "+ue(l),1)],8,Ni))),256))]))])]))),256))]))}});const Ii={class:"tag"},Ri={class:"article"},ji=["onClick"],Oi=De({__name:"Tag",setup(e){const n=qe(null),t={},s=o=>{n.value=o,history.replaceState(null,document.title,"?q="+o)};for(const o of Oe)if(!!o.tags)for(const l of o.tags)t[l]||(t[l]=[]),t[l].push(o);return Ze(()=>{n.value=new URLSearchParams(location.search).get("q")}),(o,l)=>($(),H("div",Ii,[P("div",Ri,[($(),H(le,null,on(t,(a,r)=>P("a",{class:an(["item",{active:n.value===r}]),href:"#",onClick:c=>s(r)},[P("span",null,ue(r),1)],10,ji)),64))]),Z(Yo,{posts:n.value?t[n.value]:[],click:s},null,8,["posts"])]))}});const $i=De({__name:"ToTop",setup(e){const n="top: -900px",t=qe(n),s=()=>{window.scrollY>200?window.innerWidth>720?t.value=`top: ${Math.min(window.innerHeight-968,0)}px`:t.value="top: -640px":t.value=n},o=()=>{window.scrollTo({top:0,behavior:"smooth"})};return Ze(()=>{window.addEventListener("scroll",s),s()}),Qn(()=>{window.removeEventListener("scroll",s)}),(l,a)=>($(),H("a",{href:"#",class:"totop",onClick:o,style:Cn(t.value),"aria-label":"to-top"},null,4))}});const Ui=P("aside",null,null,-1),Si=De({__name:"Layout",setup(e){const n=rn().site.value.base,t=vt(),s=ze(()=>t.path.replace(n,"").replace("index.html",""));return(o,l)=>($(),H(le,null,[Z(Wr),Ui,P("main",null,[Z($i),ye(s)===""?($(),H(le,{key:0},[Z(oi),Z(Yo,{posts:ye(Oe)},null,8,["posts"])],64)):ye(s)==="tags/"?($(),ht(Oi,{key:1})):($(),ht(Di,{key:2}))])],64))}});const Fn={Layout:Si,NotFound:()=>"custom 404",enhanceApp({app:e,router:n,siteData:t}){}};function Ki(e,n){let t=[],s=!0;const o=l=>{if(s){s=!1;return}t.forEach(a=>document.head.removeChild(a)),t=[],l.forEach(a=>{const r=Hi(a);document.head.appendChild(r),t.push(r)})};aa(()=>{const l=e.data,a=n.value,r=l&&l.description,c=l&&l.frontmatter.head||[];document.title=Wo(a,l),document.querySelector("meta[name=description]").setAttribute("content",r||a.description),o(Br(a.head,Gi(c)))})}function Hi([e,n,t]){const s=document.createElement(e);for(const o in n)s.setAttribute(o,n[o]);return t&&(s.innerHTML=t),s}function Wi(e){return e[0]==="meta"&&e[1]&&e[1].name==="description"}function Gi(e){return e.filter(n=>!Wi(n))}const qt=new Set,Xo=()=>document.createElement("link"),Vi=e=>{const n=Xo();n.rel="prefetch",n.href=e,document.head.appendChild(n)},Qi=e=>{const n=new XMLHttpRequest;n.open("GET",e,n.withCredentials=!0),n.send()};let lt;const Yi=ge&&(lt=Xo())&&lt.relList&&lt.relList.supports&&lt.relList.supports("prefetch")?Vi:Qi;function Xi(){if(!ge||!window.IntersectionObserver)return;let e;if((e=navigator.connection)&&(e.saveData||/2g/.test(e.effectiveType)))return;const n=window.requestIdleCallback||setTimeout;let t=null;const s=()=>{t&&t.disconnect(),t=new IntersectionObserver(l=>{l.forEach(a=>{if(a.isIntersecting){const r=a.target;t.unobserve(r);const{pathname:c}=r;if(!qt.has(c)){qt.add(c);const d=Go(c);Yi(d)}}})}),n(()=>{document.querySelectorAll("#app a").forEach(l=>{const{target:a,hostname:r,pathname:c}=l,d=c.match(/\.\w+$/);d&&d[0]!==".html"||a!=="_blank"&&r===location.hostname&&(c!==location.pathname?t.observe(l):qt.add(c))})})};Ze(s);const o=vt();yn(()=>o.path,s),Qn(()=>{t&&t.disconnect()})}const Ji=De({setup(e,{slots:n}){const t=qe(!1);return Ze(()=>{t.value=!0}),()=>t.value&&n.default?n.default():null}}),Jo=Fn.NotFound||(()=>"404 Not Found"),Zi=De({name:"VitePressApp",setup(){const{site:e}=rn();return Ze(()=>{yn(()=>e.value.lang,n=>{document.documentElement.lang=n},{immediate:!0})}),Xi(),Fn.setup&&Fn.setup(),()=>Wt(Fn.Layout)}});function ec(){const e=tc(),n=nc();n.provide(Qo,e);const t=Lr(e.route);return n.provide(Vo,t),n.provide("NotFound",Jo),n.component("Content",Or),n.component("ClientOnly",Ji),Object.defineProperty(n.config.globalProperties,"$frontmatter",{get(){return t.frontmatter.value}}),Fn.enhanceApp&&Fn.enhanceApp({app:n,router:e,siteData:An}),{app:n,router:e,data:t}}function nc(){return br(Zi)}function tc(){let e=ge,n;return Rr(t=>{let s=Go(t);return e&&(n=s),(e||n===s)&&(s=s.replace(/\.js$/,".lean.js")),ge&&(e=!1),xr(()=>import(s),[])},Jo)}if(ge){const{app:e,router:n,data:t}=ec();n.go().then(()=>{Ki(n.route,t.site),e.mount("#app")})}export{oc as _,P as a,Le as b,H as c,ec as createApp,sc as d,$ as o};
